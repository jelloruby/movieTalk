{"ast":null,"code":"import axios from \"axios\";\nexport const getMovieList = () => axios.get('http://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=5622df58bf74fc555a60bcb2baf58da6&targetDt=20210326').then(res => {\n  return res.data;\n});\nexport const getMovieFromKMDB = movieName => axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&title=${movieName}&ServiceKey=QXYS65CA4DKL68FJYGTF`).then(res => {\n  return res.data;\n});\nexport const getMovieSeqFromKMDB = movieSeq => axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&movieId=${movieSeq}&ServiceKey=QXYS65CA4DKL68FJYGTF`).then(res => {\n  return res.data;\n});\n/*\r\n    const getNaverMovie = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/naver/getNaverMovie', {\r\n                params: {\r\n                    query: movieName,\r\n                },\r\n            });\r\n            if(res && res.status === 200) {\r\n                console.log(res.data);\r\n                setMovieList(res.data.items)\r\n            }\r\n        } catch (err) {\r\n            console.log('error', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <input placeholder=\"영화를 검색하세요.\" onChange={handleInput} />\r\n            <button onClick={getNaverMovie}></button>\r\n            <div>\r\n                {\r\n                    movieList && \r\n                    movieList.map((item, index) => (\r\n                        <div key={index}>\r\n                            <div>{item.title}</div>\r\n                            <img src={item.image}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n*/","map":{"version":3,"sources":["C:/codingtime/movieBox/front/api.js"],"names":["axios","getMovieList","get","then","res","data","getMovieFromKMDB","movieName","getMovieSeqFromKMDB","movieSeq"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMD,KAAK,CAACE,GAAN,CAAU,gJAAV,EAC7BC,IAD6B,CACvBC,GAAD,IAAS;AACX,SAAOA,GAAG,CAACC,IAAX;AACH,CAH6B,CAA3B;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAeP,KAAK,CAACE,GAAN,CAAW,2GAA0GK,SAAU,kCAA/H,EAC1CJ,IAD0C,CACpCC,GAAD,IAAS;AACX,SAAOA,GAAG,CAACC,IAAX;AACH,CAH0C,CAAxC;AAKP,OAAO,MAAMG,mBAAmB,GAAIC,QAAD,IAAcT,KAAK,CAACE,GAAN,CAAW,6GAA4GO,QAAS,kCAAhI,EAC5CN,IAD4C,CACtCC,GAAD,IAAS;AACX,SAAOA,GAAG,CAACC,IAAX;AACH,CAH4C,CAA1C;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nexport const getMovieList = () => axios.get('http://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=5622df58bf74fc555a60bcb2baf58da6&targetDt=20210326')\r\n    .then((res) => {\r\n        return res.data\r\n    })\r\n\r\nexport const getMovieFromKMDB = (movieName) => axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&title=${movieName}&ServiceKey=QXYS65CA4DKL68FJYGTF`)\r\n    .then((res) => {\r\n        return res.data\r\n    })\r\n\r\nexport const getMovieSeqFromKMDB = (movieSeq) => axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&movieId=${movieSeq}&ServiceKey=QXYS65CA4DKL68FJYGTF`)\r\n    .then((res) => {\r\n        return res.data\r\n    })\r\n\r\n\r\n\r\n/*\r\n    const getNaverMovie = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/naver/getNaverMovie', {\r\n                params: {\r\n                    query: movieName,\r\n                },\r\n            });\r\n            if(res && res.status === 200) {\r\n                console.log(res.data);\r\n                setMovieList(res.data.items)\r\n            }\r\n        } catch (err) {\r\n            console.log('error', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <input placeholder=\"영화를 검색하세요.\" onChange={handleInput} />\r\n            <button onClick={getNaverMovie}></button>\r\n            <div>\r\n                {\r\n                    movieList && \r\n                    movieList.map((item, index) => (\r\n                        <div key={index}>\r\n                            <div>{item.title}</div>\r\n                            <img src={item.image}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n*/"]},"metadata":{},"sourceType":"module"}