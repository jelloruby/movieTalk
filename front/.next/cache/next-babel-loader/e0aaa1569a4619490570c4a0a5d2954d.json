{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch.js\";\nimport React, { useState, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\nimport MovieInfoLink from '../components/MovieInfoLink';\nimport { getMovieFromTMDB } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction movieSearch({\n  router\n}) {\n  console.log(router);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState(false);\n  const {\n    0: IsEmptymovieList,\n    1: setIsEmptyMovieList\n  } = useState(false);\n\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitValue = e => {\n    e.preventDefault();\n\n    const fetchMovieList = async () => {\n      const fetchData = await getMovieFromTMDB(inputValue);\n      console.log(fetchData.results);\n\n      if (!fetchData.results) {\n        setMovieList(undefined);\n        setIsEmptyMovieList(true);\n      } else {\n        setMovieList(fetchData.results);\n        setIsEmptyMovieList(false);\n      }\n    };\n\n    fetchMovieList();\n  };\n\n  const replaceTitle = title => {\n    return title.replace(/!HS|!HE/g, \"\");\n  };\n\n  const imageURL = 'https://image.tmdb.org/t/p/w500/';\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitValue,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleInputValue,\n        className: \"btn search-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [IsEmptymovieList && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC80\\uC0C9\\uD558\\uC2E0 \\uC601\\uD654\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), movieList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\uC815\\uD655\\uB3C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: movieList.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MovieInfoLink, {\n              id: movieItem.id,\n              src: `${imageURL}${movieItem.poster_path}`,\n              koreanTitle: movieItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: replaceTitle(movieItem.title)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this)]\n          }, movieItem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport default withRouter(movieSearch);","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch.js"],"names":["React","useState","useEffect","AppLayout","Router","withRouter","MovieInfoLink","getMovieFromTMDB","movieSearch","router","console","log","inputValue","setInputValue","movieList","setMovieList","IsEmptymovieList","setIsEmptyMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","fetchMovieList","fetchData","results","undefined","replaceTitle","title","replace","imageURL","textAlign","map","movieItem","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport Router from 'next/router';\r\nimport { withRouter } from 'next/router';\r\n\r\nimport MovieInfoLink from '../components/MovieInfoLink'\r\nimport { getMovieFromTMDB } from '../api';\r\n\r\nfunction movieSearch({ router }) {\r\n    console.log(router);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [movieList, setMovieList] = useState(false);\r\n    const [IsEmptymovieList, setIsEmptyMovieList] = useState(false);\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getMovieFromTMDB(inputValue);\r\n            console.log(fetchData.results);\r\n            if(!fetchData.results) {\r\n                setMovieList(undefined);\r\n                setIsEmptyMovieList(true);\r\n            } else {\r\n                setMovieList(fetchData.results);\r\n                setIsEmptyMovieList(false);\r\n            }\r\n        }\r\n        fetchMovieList();\r\n    };\r\n    \r\n    const replaceTitle = (title) => {\r\n        return title.replace(/!HS|!HE/g, \"\");\r\n    };\r\n\r\n\r\n    const imageURL = 'https://image.tmdb.org/t/p/w500/'\r\n    \r\n    return (\r\n        <AppLayout>\r\n            <form onSubmit={handleSubmitValue} style={{ textAlign: 'center' }}>\r\n                <input placeholder=\"영화명을 입력해주세요.\" onChange={handleInputValue} className=\"btn search-btn\" />\r\n                <button type=\"submit\">검색</button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    IsEmptymovieList && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                }\r\n                {\r\n                    movieList && (\r\n                        <>\r\n                            <select>\r\n                                <option>정확도</option>\r\n                            </select>\r\n                            <div>\r\n                            {\r\n                                movieList.map(movieItem => (\r\n                                    <div key={movieItem.id}>\r\n                                        <MovieInfoLink\r\n                                            id={movieItem.id}\r\n                                            src={`${imageURL}${movieItem.poster_path}`}\r\n                                            koreanTitle={movieItem.title}\r\n                                        />\r\n                                        <div>{replaceTitle(movieItem.title)}</div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport default withRouter(movieSearch);"]},"metadata":{},"sourceType":"module"}