{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch\\\\[name].js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from \"next/router\";\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport AppLayout from '../../components/layout/AppLayout';\nimport MovieInfoLink from '../../components/MovieInfoLink';\nimport { getMovieFromTMDB } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar SearchInput = styled.input.withConfig({\n  displayName: \"name__SearchInput\",\n  componentId: \"irtilj-0\"\n})([\"width:250px;height:50px;margin:0 auto;text-align:center;border-radius:2rem;border:none;\"]);\n_c = SearchInput;\n\nfunction MovieSearchPage(props) {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var name = router.query.name;\n  var movieDetail = props.movieDetail;\n  console.log(router.query);\n  console.log(movieDetail);\n\n  var _useState = useState(\"\"),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var _useState2 = useState(false),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState(false),\n      IsEmptymovieList = _useState3[0],\n      setIsEmptyMovieList = _useState3[1];\n\n  var handleInputValue = function handleInputValue(e) {\n    setInputValue(e.target.value);\n  };\n\n  var handleSubmitValue = function handleSubmitValue(e) {\n    e.preventDefault();\n\n    var fetchMovieList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fetchData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getMovieFromTMDB(inputValue);\n\n              case 2:\n                fetchData = _context.sent;\n                console.log(fetchData.results);\n\n                if (!fetchData.results) {\n                  setMovieList(undefined);\n                  setIsEmptyMovieList(true);\n                } else {\n                  setMovieList(fetchData.results);\n                  setIsEmptyMovieList(false);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchMovieList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchMovieList();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitValue,\n      style: {\n        textAlign: 'center',\n        position: 'relative',\n        top: '2.5rem',\n        left: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn search-btn\",\n        children: /*#__PURE__*/_jsxDEV(IoSearchSharp, {\n          style: {\n            color: 'white',\n            fontSize: '1.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!movieDetail.results && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC80\\uC0C9\\uD558\\uC2E0 \\uC601\\uD654\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), movieDetail.results && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '80%',\n            margin: '0 auto',\n            marginTop: '2rem'\n          },\n          children: movieDetail.results.map(function (movieItem) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '210px',\n                margin: '0 1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(MovieInfoLink, {\n                id: movieItem.id,\n                src: movieItem.poster_path,\n                koreanTitle: movieItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, _this)\n            }, movieItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieSearchPage, \"T8cZ6n2zXxrfm//dRCF/YD1C1H0=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = MovieSearchPage;\n;\nexport var __N_SSP = true;\nexport default MovieSearchPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchInput\");\n$RefreshReg$(_c2, \"MovieSearchPage\");","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch/[name].js"],"names":["React","useState","styled","useRouter","IoSearchSharp","AppLayout","MovieInfoLink","getMovieFromTMDB","SearchInput","input","MovieSearchPage","props","router","name","query","movieDetail","console","log","inputValue","setInputValue","movieList","setMovieList","IsEmptymovieList","setIsEmptyMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","fetchMovieList","fetchData","results","undefined","textAlign","position","top","left","color","fontSize","display","flexWrap","width","margin","marginTop","map","movieItem","id","poster_path","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useRouter } from \"next/router\";\r\nimport { IoSearchSharp } from \"react-icons/io5\";\r\n\r\nimport AppLayout from '../../components/layout/AppLayout';\r\nimport MovieInfoLink from '../../components/MovieInfoLink'\r\n\r\nimport { getMovieFromTMDB } from '../api/api';\r\n\r\nconst SearchInput = styled.input`\r\n    width: 250px;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    border-radius: 2rem;\r\n    border: none;\r\n`\r\nfunction MovieSearchPage(props) {\r\n    const router = useRouter();\r\n    const { name } = router.query;\r\n    const { movieDetail } = props;\r\n\r\n    console.log(router.query);\r\n    console.log(movieDetail);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [movieList, setMovieList] = useState(false);\r\n    const [IsEmptymovieList, setIsEmptyMovieList] = useState(false);\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getMovieFromTMDB(inputValue);\r\n            console.log(fetchData.results);\r\n            if(!fetchData.results) {\r\n                setMovieList(undefined);\r\n                setIsEmptyMovieList(true);\r\n            } else {\r\n                setMovieList(fetchData.results);\r\n                setIsEmptyMovieList(false);\r\n            }\r\n        }\r\n        fetchMovieList();\r\n    };\r\n\r\n    return (\r\n        <AppLayout>\r\n            <form\r\n                onSubmit={handleSubmitValue}\r\n                style={{ textAlign: 'center', position: 'relative', top: '2.5rem', left: '2rem' }}\r\n            >\r\n                <SearchInput\r\n                    placeholder=\"영화명을 입력해주세요.\"\r\n                    onChange={handleInputValue}\r\n                />\r\n                <button type=\"submit\" className=\"btn search-btn\">\r\n                    <IoSearchSharp style={{ color: 'white', fontSize: '1.5rem' }} />\r\n                </button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    !movieDetail.results && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                }\r\n                {\r\n                    movieDetail.results && (\r\n                        <>\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', width: '80%', margin: '0 auto', marginTop: '2rem' }}>\r\n                            {\r\n                                movieDetail.results.map(movieItem => (\r\n                                    <div key={movieItem.id} style={{ width: '210px', margin: '0 1rem' }}>\r\n                                        <MovieInfoLink\r\n                                            id={movieItem.id}\r\n                                            src={movieItem.poster_path}\r\n                                            koreanTitle={movieItem.title}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieFromTMDB(query.name);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n        },\r\n    }\r\n}\r\n\r\nexport default MovieSearchPage;\r\n"]},"metadata":{},"sourceType":"module"}