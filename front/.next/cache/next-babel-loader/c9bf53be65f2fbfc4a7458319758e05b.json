{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  me: null\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data: data\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      console.log('reducer login - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true\n      });\n\n    case LOG_IN_SUCCESS:\n      console.log('reducer login after 1s - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'meme'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginRequestAction","data","type","reducer","state","action","console","log","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,EAAE,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AACzCC,EAAAA,IAAI,EAAER,cADmC;AAEzCO,EAAAA,IAAI,EAAEA;AAFmC,CAAX,CAA3B;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAACb,YAAP,EAAqBc,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKR,cAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERZ,QAAAA,UAAU,EAAE;AAFJ,QAAZ;;AAIJ,SAAKG,cAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERZ,QAAAA,UAAU,EAAE,IAFJ;AAGRC,QAAAA,EAAE,kCAAOY,MAAM,CAACJ,IAAd;AAAoBO,UAAAA,QAAQ,EAAE;AAA9B;AAHM,QAAZ;;AAKJ,SAAKZ,cAAL;AACI,aAAOQ,KAAK,mCACLA,KADK;AAERZ,QAAAA,UAAU,EAAE;AAFJ,QAAZ;;AAIJ;AACI,aAAOY,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedIn: false,\r\n    me: null\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data: data,\r\n});\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer login - user');\r\n            return state = {\r\n                ...state,\r\n                isLoggedIn: true,\r\n            }\r\n        case LOG_IN_SUCCESS:\r\n            console.log('reducer login after 1s - user');\r\n            return state = {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                me: { ...action.data, nickname: 'meme' }\r\n            }\r\n        case LOG_IN_FAILURE:\r\n            return state = {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}