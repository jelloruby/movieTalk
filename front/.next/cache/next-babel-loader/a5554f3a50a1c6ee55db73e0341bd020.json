{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  addReviewDone: false,\n  addReviewError: null,\n  reviews: []\n};\nexport const ADD_REVIEW_REQUEST = 'ADD_REVIEW_REQUEST';\nexport const ADD_REVIEW_SUCCESS = 'ADD_REVIEW_SUCCESS';\nexport const ADD_REVIEW_FAILURE = 'ADD_REVIEW_FAILURE';\nexport const addReviewRequestAction = data => ({\n  type: ADD_REVIEW_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_REVIEW_REQUEST:\n      console.log('reducer Review');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        addReviewDone: true\n      });\n\n    case ADD_REVIEW_SUCCESS:\n      console.log('reducer ADD_REVIEW_SUCCESS');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        addReviewDone: true // reviews: [ ...state.reviews, action.data.comment ]\n\n      });\n\n    case ADD_REVIEW_FAILURE:\n      console.log('reducer ADD_REVIEW_FAILURE');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        addReviewDone: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/reducers/review.js"],"names":["initialState","addReviewDone","addReviewError","reviews","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","addReviewRequestAction","data","type","reducer","state","action","console","log"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,aAAa,EAAE,KADS;AAExBC,EAAAA,cAAc,EAAE,IAFQ;AAGxBC,EAAAA,OAAO,EAAE;AAHe,CAArB;AAMP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,sBAAsB,GAAIC,IAAD,KAAW;AAC7CC,EAAAA,IAAI,EAAEL,kBADuC;AAE7CI,EAAAA;AAF6C,CAAX,CAA/B;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAACX,YAAP,EAAqBY,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKL,kBAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERV,QAAAA,aAAa,EAAE;AAFP,QAAZ;;AAIJ,SAAKI,kBAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERV,QAAAA,aAAa,EAAE,IAFP,CAGR;;AAHQ,QAAZ;;AAKJ,SAAKK,kBAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERV,QAAAA,aAAa,EAAE;AAFP,QAAZ;;AAIJ;AACI,aAAOU,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    addReviewDone: false,\r\n    addReviewError: null,\r\n    reviews: [],\r\n};\r\n\r\nexport const ADD_REVIEW_REQUEST = 'ADD_REVIEW_REQUEST';\r\nexport const ADD_REVIEW_SUCCESS = 'ADD_REVIEW_SUCCESS';\r\nexport const ADD_REVIEW_FAILURE = 'ADD_REVIEW_FAILURE';\r\n\r\nexport const addReviewRequestAction = (data) => ({\r\n    type: ADD_REVIEW_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_REVIEW_REQUEST:\r\n            console.log('reducer Review');\r\n            return state = {\r\n                ...state,\r\n                addReviewDone: true,\r\n            }\r\n        case ADD_REVIEW_SUCCESS:\r\n            console.log('reducer ADD_REVIEW_SUCCESS');\r\n            return state = {\r\n                ...state,\r\n                addReviewDone: true,\r\n                // reviews: [ ...state.reviews, action.data.comment ]\r\n            }\r\n        case ADD_REVIEW_FAILURE:\r\n            console.log('reducer ADD_REVIEW_FAILURE');\r\n            return state = {\r\n                ...state,\r\n                addReviewDone: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}