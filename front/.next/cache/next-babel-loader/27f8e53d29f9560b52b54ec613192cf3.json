{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport SubPageLayout from '../components/Layout/SubPageLayout';\nimport MovieInfoSlider from '../components/Slider/MovieInfoSlider';\nimport SearchForm from '../components/Form/SearchForm';\nimport { getPopularMovieFromTMDB, getMovieByGenreFromTMDB } from './api/api';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoiveSearchWrap = styled.div.withConfig({\n  displayName: \"movieSearch__MoiveSearchWrap\",\n  componentId: \"sc-2vlrdc-0\"\n})([\"position:absolute;top:48px;left:60%;transform:translate(-60%,0);\"]);\nconst SubSlideWrap = styled.div.withConfig({\n  displayName: \"movieSearch__SubSlideWrap\",\n  componentId: \"sc-2vlrdc-1\"\n})([\"width:70%;margin:0 auto;position:absolute;top:200px;left:60%;transform:translate(-60%,0);@media screen and (max-width:900px){width:500px;width:100%;left:0px;}\"]);\nconst TitleOfList = styled.div.withConfig({\n  displayName: \"movieSearch__TitleOfList\",\n  componentId: \"sc-2vlrdc-2\"\n})([\"font-size:20px;margin-bottom:20px;\"]);\n\nfunction movieSearch(props) {\n  const {\n    popularMovie,\n    actionGenreMovie,\n    fantasyGenreMovie,\n    animationGenreMovie\n  } = props;\n  const {\n    0: genre,\n    1: setGenre\n  } = useState('Action');\n\n  const handleClickGenre = e => {\n    console.log(e.target.innerHTML);\n    setGenre(e.target.innerHTML);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MoiveSearchWrap, {\n      children: /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubSlideWrap, {\n      className: \"movie-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TitleOfList, {\n          children: \"Browse by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleClickGenre,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Fantasy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Animation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfoSlider, {\n          movieInfomation: genre === 'Action' ? actionGenreMovie : genre === 'Fantasy' ? fantasyGenreMovie : genre === 'Animation' ? animationGenreMovie : actionGenreMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TitleOfList, {\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfoSlider, {\n          movieInfomation: popularMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  ;\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  const popularMovie = await getPopularMovieFromTMDB();\n  const actionGenreMovie = await getMovieByGenreFromTMDB(28);\n  const fantasyGenreMovie = await getMovieByGenreFromTMDB(14);\n  const animationGenreMovie = await getMovieByGenreFromTMDB(16);\n  return {\n    props: {\n      popularMovie: popularMovie.results,\n      actionGenreMovie: actionGenreMovie.results,\n      fantasyGenreMovie: fantasyGenreMovie.results,\n      animationGenreMovie: animationGenreMovie.results\n    }\n  };\n});\nexport default movieSearch;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch.js"],"names":["React","useState","styled","axios","END","wrapper","SubPageLayout","MovieInfoSlider","SearchForm","getPopularMovieFromTMDB","getMovieByGenreFromTMDB","LOAD_MY_INFO_REQUEST","MoiveSearchWrap","div","SubSlideWrap","TitleOfList","movieSearch","props","popularMovie","actionGenreMovie","fantasyGenreMovie","animationGenreMovie","genre","setGenre","handleClickGenre","e","console","log","target","innerHTML","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise","results"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport SubPageLayout from '../components/Layout/SubPageLayout';\r\nimport MovieInfoSlider from '../components/Slider/MovieInfoSlider';\r\nimport SearchForm from '../components/Form/SearchForm';\r\n\r\nimport { getPopularMovieFromTMDB, getMovieByGenreFromTMDB } from './api/api';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nconst MoiveSearchWrap = styled.div`\r\n    position: absolute;\r\n    top: 48px;\r\n    left: 60%;\r\n    transform: translate(-60%, 0);\r\n`\r\n\r\nconst SubSlideWrap = styled.div`\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 60%;\r\n    transform: translate(-60%, 0);\r\n\r\n    @media screen and (max-width: 900px) {\r\n        width: 500px;\r\n        width: 100%;\r\n        left: 0px;\r\n    }\r\n`\r\n\r\nconst TitleOfList = styled.div`\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nfunction movieSearch(props) {\r\n    const { popularMovie, actionGenreMovie, fantasyGenreMovie, animationGenreMovie } = props;\r\n    \r\n    const [genre, setGenre] = useState('Action');\r\n\r\n    const handleClickGenre = (e) => {\r\n        console.log(e.target.innerHTML);\r\n        setGenre(e.target.innerHTML);\r\n    };\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <MoiveSearchWrap>\r\n                <SearchForm />\r\n            </MoiveSearchWrap>\r\n            <SubSlideWrap className=\"movie-list\">\r\n                <div>\r\n                    <TitleOfList>Browse by Category</TitleOfList>\r\n                    <div onClick={handleClickGenre}>\r\n                        <button>Action</button>\r\n                        <button>Fantasy</button>\r\n                        <button>Animation</button>\r\n                    </div>\r\n                    <MovieInfoSlider movieInfomation={\r\n                        genre === 'Action' ? actionGenreMovie :\r\n                        genre === 'Fantasy' ? fantasyGenreMovie :\r\n                        genre === 'Animation' ? animationGenreMovie : actionGenreMovie\r\n                    } />\r\n                    <TitleOfList>Top Rated</TitleOfList>\r\n                    <MovieInfoSlider movieInfomation={popularMovie} />\r\n\r\n                </div>\r\n            </SubSlideWrap>\r\n        </SubPageLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie; \r\n    };\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n\r\n    const popularMovie = await getPopularMovieFromTMDB();\r\n    const actionGenreMovie = await getMovieByGenreFromTMDB(28);\r\n    const fantasyGenreMovie = await getMovieByGenreFromTMDB(14);\r\n    const animationGenreMovie = await getMovieByGenreFromTMDB(16);\r\n    \r\n    return {\r\n      props: { \r\n        popularMovie: popularMovie.results, \r\n        actionGenreMovie: actionGenreMovie.results, \r\n        fantasyGenreMovie: fantasyGenreMovie.results, \r\n        animationGenreMovie: animationGenreMovie.results, \r\n      },\r\n    };\r\n});\r\n\r\nexport default movieSearch;"]},"metadata":{},"sourceType":"module"}