{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movie.js\";\nimport React, { useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport MovieLink from '../components/MovieLink';\nimport { getKMDB } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction movie() {\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState([]);\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState([]);\n\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitValue = e => {\n    e.preventDefault();\n\n    const fetchMovieList = async () => {\n      const fetchData = await getKMDB(inputValue);\n      console.log(fetchData.Data[0].Result);\n      setMovieList(fetchData.Data[0].Result);\n    };\n\n    fetchMovieList();\n  };\n\n  const replaceTitle = title => {\n    return title.replace(/!HS|!HE/g, \"\");\n  };\n\n  const splitPoster = posters => {\n    if (!posters) {\n      posters = \"https://res.cloudinary.com/dvmqbovxh/image/upload/v1616866172/noposter_pcwcby.png\";\n      return posters;\n    } else {\n      return posters.split(\"|\")[0];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitValue,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleInputValue,\n        style: {\n          textAlign: 'center',\n          border: '1px solid gray',\n          padding: '.5rem .7rem',\n          borderRadius: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movieList && movieList.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MovieLink, {\n          id: movieItem.movieSeq,\n          src: splitPoster(movieItem.posters),\n          movieList: movieList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: replaceTitle(movieItem.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\uB9AC\\uBDF0\\uC4F0\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, movieItem.movieSeq, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport default movie;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movie.js"],"names":["React","useState","AppLayout","MovieLink","getKMDB","movie","inputValue","setInputValue","movieList","setMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","fetchMovieList","fetchData","console","log","Data","Result","replaceTitle","title","replace","splitPoster","posters","split","textAlign","border","padding","borderRadius","map","movieItem","movieSeq"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,QAAwB,QAAxB;;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMS,gBAAgB,GAAIC,CAAD,IAAO;AAC5BJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACI,cAAF;;AACA,UAAMC,cAAc,GAAG,YAAY;AAC/B,YAAMC,SAAS,GAAG,MAAMb,OAAO,CAACE,UAAD,CAA/B;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAV,CAAe,CAAf,EAAkBC,MAA9B;AACAZ,MAAAA,YAAY,CAACQ,SAAS,CAACG,IAAV,CAAe,CAAf,EAAkBC,MAAnB,CAAZ;AACH,KAJD;;AAKAL,IAAAA,cAAc;AACjB,GARD;;AAUA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC5B,WAAOA,KAAK,CAACC,OAAN,CAAc,UAAd,EAA0B,EAA1B,CAAP;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC7B,QAAG,CAACA,OAAJ,EAAa;AACTA,MAAAA,OAAO,GAAG,mFAAV;AACA,aAAOA,OAAP;AACH,KAHD,MAGO;AACH,aAAOA,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAP;AACH;AACJ,GAPD;;AASA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEb,iBAAhB;AAAmC,MAAA,KAAK,EAAE;AAAEc,QAAAA,SAAS,EAAE;AAAb,OAA1C;AAAA,8BACI;AAAO,QAAA,WAAW,EAAC,gEAAnB;AAAkC,QAAA,QAAQ,EAAElB,gBAA5C;AAA8D,QAAA,KAAK,EAAE;AAAEkB,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,MAAM,EAAE,gBAA/B;AAAiDC,UAAAA,OAAO,EAAE,aAA1D;AAAyEC,UAAAA,YAAY,EAAE;AAAvF;AAArE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBAEQvB,SAAS,IAAIA,SAAS,CAACwB,GAAV,CAAcC,SAAS,iBAChC;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,EAAE,EAAEA,SAAS,CAACC,QAAzB;AAAmC,UAAA,GAAG,EAAET,WAAW,CAACQ,SAAS,CAACP,OAAX,CAAnD;AAAwE,UAAA,SAAS,EAAElB;AAAnF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI;AAAA,sBAAMc,YAAY,CAACW,SAAS,CAACV,KAAX;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUU,SAAS,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA,cADS;AAFrB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;AAAA;AAED,eAAe7B,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nimport MovieLink from '../components/MovieLink'\r\nimport { getKMDB } from '../api';\r\n\r\nfunction movie() {\r\n    const [inputValue, setInputValue] = useState([]);\r\n    const [movieList, setMovieList] = useState([]);\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getKMDB(inputValue);\r\n            console.log(fetchData.Data[0].Result);\r\n            setMovieList(fetchData.Data[0].Result);\r\n        }\r\n        fetchMovieList();\r\n    };\r\n\r\n    const replaceTitle = (title) => {\r\n        return title.replace(/!HS|!HE/g, \"\");\r\n    };\r\n\r\n    const splitPoster = (posters) => {\r\n        if(!posters) {\r\n            posters = \"https://res.cloudinary.com/dvmqbovxh/image/upload/v1616866172/noposter_pcwcby.png\";\r\n            return posters;\r\n        } else {\r\n            return posters.split(\"|\")[0];\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <AppLayout>\r\n            <form onSubmit={handleSubmitValue} style={{ textAlign: 'center' }}>\r\n                <input placeholder=\"영화명을 입력해주세요.\" onChange={handleInputValue} style={{ textAlign: 'center', border: '1px solid gray', padding: '.5rem .7rem', borderRadius: '5px' }} />\r\n                <button type=\"submit\">검색</button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    movieList && movieList.map(movieItem => (\r\n                        <div key={movieItem.movieSeq}>\r\n                            <MovieLink id={movieItem.movieSeq} src={splitPoster(movieItem.posters)} movieList={movieList}/>\r\n                            <div>\r\n                                <div>{replaceTitle(movieItem.title)}</div>\r\n                                <button>리뷰쓰기</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport default movie;\r\n"]},"metadata":{},"sourceType":"module"}