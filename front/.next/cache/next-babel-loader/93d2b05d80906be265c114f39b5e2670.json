{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, LOAD_MY_REVIEWS_REQUEST, LOAD_MY_REVIEWS_SUCCESS, LOAD_MY_REVIEWS_FAILURE } from '../reducers/review'; // api\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction loadMyReviewsAPI(data) {\n  return axios.post('/review/myReviews', data);\n} // action - reducers\n\n\nfunction* addReview(action) {\n  try {\n    yield call(addReviewAPI, action.data);\n    console.log('saga ADD_REVIEW');\n    yield put({\n      type: ADD_REVIEW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* loadMyReviews(action) {\n  try {\n    yield call(loadMyReviewsAPI, action.data);\n    console.log('saga ADD_REVIEW');\n    yield put({\n      type: LOAD_MY_REVIEWS_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n} // start function\n\n\nfunction* watchReview() {\n  yield takeLatest(ADD_REVIEW_REQUEST, addReview);\n}\n\nfunction* watchReviews() {\n  yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReview), fork(watchReviews)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["axios","all","fork","call","put","takeLatest","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","LOAD_MY_REVIEWS_REQUEST","LOAD_MY_REVIEWS_SUCCESS","LOAD_MY_REVIEWS_FAILURE","addReviewAPI","data","post","loadMyReviewsAPI","addReview","action","console","log","type","err","response","loadMyReviews","watchReview","watchReviews","reviewSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,uBANJ,QAOO,oBAPP,C,CASA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,SAAOb,KAAK,CAACc,IAAN,CAAW,SAAX,EAAsBD,IAAtB,CAAP;AACH;;AAED,SAASE,gBAAT,CAA0BF,IAA1B,EAAgC;AAC5B,SAAOb,KAAK,CAACc,IAAN,CAAW,mBAAX,EAAgCD,IAAhC,CAAP;AACH,C,CAED;;;AACA,UAAUG,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAI;AACA,UAAMd,IAAI,CAACS,YAAD,EAAeK,MAAM,CAACJ,IAAtB,CAAV;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMf,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEb;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAMc,GAAN,EAAW;AACT,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEZ,kBADA;AAENK,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,aAAV,CAAwBN,MAAxB,EAAgC;AAC5B,MAAI;AACA,UAAMd,IAAI,CAACY,gBAAD,EAAmBE,MAAM,CAACJ,IAA1B,CAAV;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMf,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEV;AADA,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMW,GAAN,EAAW;AACT,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAET,uBADA;AAENE,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;AAFb,KAAD,CAAT;AAIH;AACJ,C,CAGD;;;AACA,UAAUW,WAAV,GAAwB;AACpB,QAAMnB,UAAU,CAACC,kBAAD,EAAqBU,SAArB,CAAhB;AACH;;AAED,UAAUS,YAAV,GAAyB;AACrB,QAAMpB,UAAU,CAACI,uBAAD,EAA0Bc,aAA1B,CAAhB;AACH;;AAGD,eAAe,UAAUG,UAAV,GAAuB;AAClC,QAAMzB,GAAG,CAAC,CACRC,IAAI,CAACsB,WAAD,CADI,EAERtB,IAAI,CAACuB,YAAD,CAFI,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    LOAD_MY_REVIEWS_REQUEST,\r\n    LOAD_MY_REVIEWS_SUCCESS,\r\n    LOAD_MY_REVIEWS_FAILURE,\r\n} from '../reducers/review';\r\n\r\n// api\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction loadMyReviewsAPI(data) {\r\n    return axios.post('/review/myReviews', data)\r\n}\r\n\r\n// action - reducers\r\nfunction* addReview(action) {\r\n    try {\r\n        yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* loadMyReviews(action) {\r\n    try {\r\n        yield call(loadMyReviewsAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_SUCCESS,\r\n\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// start function\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchReviews() {\r\n    yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\r\n}\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n      fork(watchReviews),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}