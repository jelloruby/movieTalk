{"ast":null,"code":"import axios from \"axios\";\nexport var getMovieList = function getMovieList() {\n  return axios.get('http://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=5622df58bf74fc555a60bcb2baf58da6&targetDt=20210322').then(function (res) {\n    return res.data;\n  });\n};\nexport var getKMDB = function getKMDB(movieName) {\n  return axios.get(\"http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&director=\".concat(movieName, \"&listCount=100&ServiceKey=QXYS65CA4DKL68FJYGTF\")).then(function (res) {\n    return res.data;\n  });\n};\n/*\r\n    const getNaverMovie = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/naver/getNaverMovie', {\r\n                params: {\r\n                    query: movieName,\r\n                },\r\n            });\r\n            if(res && res.status === 200) {\r\n                console.log(res.data);\r\n                setMovieList(res.data.items)\r\n            }\r\n        } catch (err) {\r\n            console.log('error', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <input placeholder=\"영화를 검색하세요.\" onChange={handleInput} />\r\n            <button onClick={getNaverMovie}></button>\r\n            <div>\r\n                {\r\n                    movieList && \r\n                    movieList.map((item, index) => (\r\n                        <div key={index}>\r\n                            <div>{item.title}</div>\r\n                            <img src={item.image}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n*/","map":{"version":3,"sources":["C:/codingtime/movieBox/front/api.js"],"names":["axios","getMovieList","get","then","res","data","getKMDB","movieName"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMD,KAAK,CAACE,GAAN,CAAU,gJAAV,EAC7BC,IAD6B,CACxB,UAACC,GAAD,EAAS;AACX,WAAOA,GAAG,CAACC,IAAX;AACH,GAH6B,CAAN;AAAA,CAArB;AAKP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD;AAAA,SAAeP,KAAK,CAACE,GAAN,sHAAwHK,SAAxH,qDACjCJ,IADiC,CAC5B,UAACC,GAAD,EAAS;AACX,WAAOA,GAAG,CAACC,IAAX;AACH,GAHiC,CAAf;AAAA,CAAhB;AAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nexport const getMovieList = () => axios.get('http://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=5622df58bf74fc555a60bcb2baf58da6&targetDt=20210322')\r\n    .then((res) => {\r\n        return res.data\r\n    })\r\n\r\nexport const getKMDB = (movieName) => axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&director=${movieName}&listCount=100&ServiceKey=QXYS65CA4DKL68FJYGTF`)\r\n    .then((res) => {\r\n        return res.data\r\n    })\r\n\r\n\r\n/*\r\n    const getNaverMovie = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/naver/getNaverMovie', {\r\n                params: {\r\n                    query: movieName,\r\n                },\r\n            });\r\n            if(res && res.status === 200) {\r\n                console.log(res.data);\r\n                setMovieList(res.data.items)\r\n            }\r\n        } catch (err) {\r\n            console.log('error', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <input placeholder=\"영화를 검색하세요.\" onChange={handleInput} />\r\n            <button onClick={getNaverMovie}></button>\r\n            <div>\r\n                {\r\n                    movieList && \r\n                    movieList.map((item, index) => (\r\n                        <div key={index}>\r\n                            <div>{item.title}</div>\r\n                            <img src={item.image}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n*/"]},"metadata":{},"sourceType":"module"}