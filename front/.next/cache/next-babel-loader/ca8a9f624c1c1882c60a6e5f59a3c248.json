{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieInfo\\\\[id].js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { useRouter } from \"next/router\";\nimport SubPageLayout from '../../components/layout/SubPageLayout';\nimport MovieActorList from '../../components/MovieActorList';\nimport ReviewModal from '../../components/Modal/ReviewModal';\nimport { getMovieDetailFromTMDB, getActorsFromTMDB } from '../api/api';\nimport { imageURL } from '../../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieBasicInfo = styled.div.withConfig({\n  displayName: \"id__MovieBasicInfo\",\n  componentId: \"kc7td4-0\"\n})([\"width:80%;margin:0 auto;display:flex;\"]);\nconst MovieDetailInfo = styled.div.withConfig({\n  displayName: \"id__MovieDetailInfo\",\n  componentId: \"kc7td4-1\"\n})([\"width:80%;margin:0 auto;display:flex;flex-direction:column;\"]);\nconst MovieActorsInfo = styled.div.withConfig({\n  displayName: \"id__MovieActorsInfo\",\n  componentId: \"kc7td4-2\"\n})([\"width:80%;margin:0 auto;\"]);\nconst InfoTitle = styled.div.withConfig({\n  displayName: \"id__InfoTitle\",\n  componentId: \"kc7td4-3\"\n})([\"font-size:32px;margin-top:48px;\"]);\n\nfunction MovieInfoPage(props) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    movieDetail\n  } = props;\n  const {\n    cast\n  } = props.actors;\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n\n  const joinArrayOfGenres = genres => {\n    const genresNameArray = [];\n\n    for (let i = 0; i < genres.length; i++) {\n      genresNameArray.push(genres[i].name);\n    }\n\n    ;\n    const joinArrayToString = genresNameArray.join(\", \");\n    return joinArrayToString;\n  };\n\n  const handleChangeText = e => {\n    setText(e.currentTarget.value);\n  };\n\n  const handleSubmitReview = e => {\n    e.preventDefault();\n    const body = {\n      writer: me._id,\n      image: `${imageURL}/original${movieDetail.poster_path}`,\n      name: me.name,\n      text: text,\n      likes: 0,\n      movieId: id\n    };\n    dispatch(addReviewRequestAction(body));\n    Router.push(`/myPage/${me._id}`);\n  };\n\n  const openModal = () => {\n    if (!(me && me.email)) {\n      const didDelete = confirm('로그인이 필요합니다. 로그인 화면으로 이동하시겠습니까?');\n\n      if (didDelete) {\n        Router.push('/login');\n      } else {\n        setIsModalOpen(true);\n      }\n    }\n\n    ;\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '48px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '80%',\n          margin: '0 auto 16px',\n          textAlign: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC774 \\uC601\\uD654\\uB97C \\uBB34\\uBE44\\uD1A1\\uC5D0 \\uB0A8\\uAE30\\uACE0 \\uC2F6\\uB2E4\\uBA74? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openModal,\n          children: \"\\uD1A1 \\uC791\\uC131\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ReviewModal, {\n        movie: movieDetail,\n        isModalOpen: isModalOpen,\n        closeModal: closeModal,\n        movieId: id,\n        handleChangeText: handleChangeText,\n        handleSubmitReview: handleSubmitReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MovieBasicInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${imageURL}/w300/${movieDetail.poster_path}`,\n            style: {\n              borderRadius: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '16px'\n          },\n          children: [movieDetail.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '32px'\n            },\n            children: movieDetail.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), movieDetail.original_title && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px'\n            },\n            children: movieDetail.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), movieDetail.release_date && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uAC1C\\uBD09\\uC77C : \", movieDetail.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), movieDetail.genres && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC7A5\\uB974 : \", joinArrayOfGenres(movieDetail.genres)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), movieDetail.runtime && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0C1\\uC601\\uC2DC\\uAC04 : \", movieDetail.runtime, \"\\uBD84\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieDetailInfo, {\n        children: movieDetail.overview && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n            children: \"\\uC904\\uAC70\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: movieDetail.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: movieDetail.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieActorsInfo, {\n        className: \"actors-slider\",\n        children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n          children: \"\\uBC30\\uC6B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MovieActorList, {\n          movieActorInfo: cast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getServerSideProps({\n  query\n}) {\n  const movieDetail = await getMovieDetailFromTMDB(query.id);\n  const actors = await getActorsFromTMDB(query.id);\n  return {\n    props: {\n      movieDetail: movieDetail,\n      actors: actors\n    }\n  };\n}\n;\nexport default MovieInfoPage;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieInfo/[id].js"],"names":["React","useState","useDispatch","useSelector","styled","useRouter","SubPageLayout","MovieActorList","ReviewModal","getMovieDetailFromTMDB","getActorsFromTMDB","imageURL","MovieBasicInfo","div","MovieDetailInfo","MovieActorsInfo","InfoTitle","MovieInfoPage","props","router","id","query","me","state","user","movieDetail","cast","actors","text","setText","isModalOpen","setIsModalOpen","joinArrayOfGenres","genres","genresNameArray","i","length","push","name","joinArrayToString","join","handleChangeText","e","currentTarget","value","handleSubmitReview","preventDefault","body","writer","_id","image","poster_path","likes","movieId","dispatch","addReviewRequestAction","Router","openModal","email","didDelete","confirm","closeModal","marginTop","width","margin","textAlign","borderRadius","marginLeft","title","fontSize","original_title","release_date","runtime","overview","tagline","getServerSideProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport SubPageLayout from '../../components/layout/SubPageLayout';\r\nimport MovieActorList from '../../components/MovieActorList';\r\nimport ReviewModal from '../../components/Modal/ReviewModal';\r\nimport { getMovieDetailFromTMDB, getActorsFromTMDB } from '../api/api';\r\nimport { imageURL } from '../../config/config';\r\n\r\nconst MovieBasicInfo = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n`\r\n\r\nconst MovieDetailInfo = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MovieActorsInfo = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst InfoTitle = styled.div`\r\n    font-size: 32px;\r\n    margin-top: 48px;\r\n`\r\n\r\nfunction MovieInfoPage(props) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    const { movieDetail } = props;\r\n    const { cast } = props.actors;\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const joinArrayOfGenres = (genres) => {\r\n        const genresNameArray = [];\r\n        for(let i=0; i<genres.length; i++) {\r\n            genresNameArray.push(genres[i].name);\r\n        };\r\n        const joinArrayToString = genresNameArray.join(\", \");\r\n        return joinArrayToString;\r\n    };\r\n\r\n    const handleChangeText = (e) => {\r\n        setText(e.currentTarget.value);\r\n    };\r\n\r\n    const handleSubmitReview = (e) => {\r\n        e.preventDefault();\r\n        const body = {\r\n            writer: me._id,\r\n            image: `${imageURL}/original${movieDetail.poster_path}`,\r\n            name: me.name,\r\n            text: text,\r\n            likes: 0,\r\n            movieId: id,\r\n        };\r\n        dispatch(addReviewRequestAction(body));\r\n        Router.push(`/myPage/${me._id}`);\r\n    };\r\n\r\n\r\n    const openModal = () => {\r\n        if (!(me && me.email)) {\r\n            const didDelete = confirm('로그인이 필요합니다. 로그인 화면으로 이동하시겠습니까?');\r\n            if(didDelete) {\r\n                Router.push('/login');\r\n            } else {\r\n                setIsModalOpen(true);\r\n            }\r\n        };\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <div style={{ marginTop: '48px' }}>\r\n                <div style={{ width: '80%', margin: '0 auto 16px', textAlign: 'right' }}>\r\n                    <span>이 영화를 무비톡에 남기고 싶다면? </span>\r\n                    <button onClick={openModal} >톡 작성하기</button>\r\n                </div>\r\n                {\r\n                    isModalOpen &&\r\n                    (\r\n                        <ReviewModal\r\n                            movie={movieDetail}\r\n                            isModalOpen={isModalOpen}\r\n                            closeModal={closeModal}\r\n                            movieId={id}\r\n                            handleChangeText={handleChangeText}\r\n                            handleSubmitReview={handleSubmitReview}\r\n                        />\r\n                    )\r\n                }\r\n                <MovieBasicInfo>\r\n                    <div>\r\n                        <img src={`${imageURL}/w300/${movieDetail.poster_path}`} style={{ borderRadius: '5px' }} />\r\n                    </div>\r\n                    <div style={{ marginLeft: '16px' }}>\r\n                        { movieDetail.title &&\r\n                            (\r\n                                <div style={{ fontSize: '32px' }}>{movieDetail.title}</div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.original_title &&\r\n                            (\r\n                                <div style={{ fontSize: '24px' }}>{movieDetail.original_title}</div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.release_date &&\r\n                            (\r\n                                <div>개봉일 : {movieDetail.release_date}</div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.genres &&\r\n                            (\r\n                                <div>장르 : {joinArrayOfGenres(movieDetail.genres)}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.runtime &&\r\n                            (\r\n                                <div>상영시간 : {movieDetail.runtime}분</div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </MovieBasicInfo>\r\n                <MovieDetailInfo>\r\n                    {\r\n                        movieDetail.overview &&\r\n                        (\r\n                            <div>\r\n                                <InfoTitle>줄거리</InfoTitle>\r\n                                <div>{movieDetail.tagline}</div>\r\n                                <br/>\r\n                                <div>{movieDetail.overview}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </MovieDetailInfo>\r\n                <MovieActorsInfo className=\"actors-slider\">\r\n                    <InfoTitle>배우</InfoTitle>\r\n                    <MovieActorList movieActorInfo={cast} />   \r\n                </MovieActorsInfo>\r\n            </div>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieDetailFromTMDB(query.id);\r\n    const actors = await getActorsFromTMDB(query.id);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n            actors: actors,\r\n        },\r\n    };\r\n};\r\n\r\nexport default MovieInfoPage;\r\n"]},"metadata":{},"sourceType":"module"}