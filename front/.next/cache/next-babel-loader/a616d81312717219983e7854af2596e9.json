{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { getMovieList } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  var _useState = useState([]),\n      movieList = _useState[0],\n      setMovieList = _useState[1];\n\n  var _useState2 = useState([]),\n      moviePoster = _useState2[0],\n      setMoviePoster = _useState2[1];\n\n  useEffect(function () {\n    var fetchMovieList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var result, moviePosters, movieNm, getNaverMovie;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getMovieList();\n\n              case 2:\n                result = _context2.sent;\n                moviePosters = result.boxOfficeResult.dailyBoxOfficeList;\n                movieNm = moviePosters[0].movieNm;\n                console.log(movieNm);\n\n                getNaverMovie = /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var res, data;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.prev = 0;\n                            _context.next = 3;\n                            return axios.get('/api/naver/getNaverMovie', {\n                              params: {\n                                query: movieNm\n                              }\n                            });\n\n                          case 3:\n                            res = _context.sent;\n\n                            if (res && res.status === 200) {\n                              data = res.data;\n                              console.log(data);\n                            }\n\n                            _context.next = 10;\n                            break;\n\n                          case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](0);\n                            console.log('error', _context.t0);\n\n                          case 10:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[0, 7]]);\n                  }));\n\n                  return function getNaverMovie() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                getNaverMovie();\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchMovieList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchMovieList();\n  }, []);\n  /*\r\n  moviePosters.forEach(poster => {\r\n      const fetchMoviePoster = async () => {\r\n          const movieNm = poster.movieNm;\r\n          const returnValue = await getNaverMovie(movieNm);\r\n          // const posterUrl = returnValue.results[0].poster_path;\r\n          // setMoviePoster(`http://image.tmdb.org/t/p/w300${posterUrl}`)\r\n      }\r\n      fetchMoviePoster();\r\n  });\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: moviePoster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"IarUyc4kgwt1+Ff6igsnb5JZ8HU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/index.js"],"names":["axios","React","useState","useEffect","getMovieList","Home","movieList","setMovieList","moviePoster","setMoviePoster","fetchMovieList","result","moviePosters","boxOfficeResult","dailyBoxOfficeList","movieNm","console","log","getNaverMovie","get","params","query","res","status","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACsBH,QAAQ,CAAC,EAAD,CAD9B;AAAA,MACLI,SADK;AAAA,MACMC,YADN;;AAAA,mBAE0BL,QAAQ,CAAC,EAAD,CAFlC;AAAA,MAELM,WAFK;AAAA,MAEQC,cAFR;;AAIZN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMO,cAAc;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACEN,YAAY,EADd;;AAAA;AACbO,gBAAAA,MADa;AAEbC,gBAAAA,YAFa,GAEED,MAAM,CAACE,eAAP,CAAuBC,kBAFzB;AAGbC,gBAAAA,OAHa,GAGHH,YAAY,CAAC,CAAD,CAAZ,CAAgBG,OAHb;AAInBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACMG,gBAAAA,aALa;AAAA,uFAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEIlB,KAAK,CAACmB,GAAN,CAAU,0BAAV,EAAsC;AACpDC,8BAAAA,MAAM,EAAE;AACJC,gCAAAA,KAAK,EAAEN;AADH;AAD4C,6BAAtC,CAFJ;;AAAA;AAERO,4BAAAA,GAFQ;;AAOd,gCAAGA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAzB,EAA8B;AAClBC,8BAAAA,IADkB,GACTF,GADS,CAClBE,IADkB;AAE1BR,8BAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACH;;AAVa;AAAA;;AAAA;AAAA;AAAA;AAYdR,4BAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAZc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALH;;AAAA,kCAKbC,aALa;AAAA;AAAA;AAAA;;AAoBnBA,gBAAAA,aAAa;;AApBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAdR,cAAc;AAAA;AAAA;AAAA,OAApB;;AAsBAA,IAAAA,cAAc;AACjB,GAxBQ,EAwBN,EAxBM,CAAT;AAyBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACI;AAAA,2BAMI;AAAK,MAAA,GAAG,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAnDQH,I;;KAAAA,I;AAqDT,eAAeA,IAAf","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getMovieList } from '../api'\r\n\r\nfunction Home() {\r\n    const [movieList, setMovieList] = useState([])\r\n    const [moviePoster, setMoviePoster] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchMovieList = async () => {\r\n            const result = await getMovieList();\r\n            const moviePosters = result.boxOfficeResult.dailyBoxOfficeList;\r\n            const movieNm = moviePosters[0].movieNm\r\n            console.log(movieNm);\r\n            const getNaverMovie = async () => {\r\n                try {\r\n                    const res = await axios.get('/api/naver/getNaverMovie', {\r\n                        params: {\r\n                            query: movieNm,\r\n                        },\r\n                    });\r\n                    if(res && res.status === 200) {\r\n                        const { data } = res;\r\n                        console.log(data);\r\n                    }\r\n                } catch (e) {\r\n                    console.log('error', e);\r\n                }\r\n            }\r\n            getNaverMovie()\r\n        }\r\n        fetchMovieList();\r\n    }, [])\r\n    /*\r\n    moviePosters.forEach(poster => {\r\n        const fetchMoviePoster = async () => {\r\n            const movieNm = poster.movieNm;\r\n            const returnValue = await getNaverMovie(movieNm);\r\n            // const posterUrl = returnValue.results[0].poster_path;\r\n            // setMoviePoster(`http://image.tmdb.org/t/p/w300${posterUrl}`)\r\n        }\r\n        fetchMoviePoster();\r\n    });\r\n    */\r\n    return (\r\n        <div>\r\n            {/* {\r\n                movieList.map(item => (\r\n                    <div key={item.rnum}>{item.movieNm}</div>\r\n                ))\r\n            } */}\r\n            <img src={moviePoster} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}