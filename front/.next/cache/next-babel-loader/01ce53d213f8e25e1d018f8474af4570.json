{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch\\\\[name].js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from \"next/router\";\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport AppLayout from '../../components/layout/AppLayout';\nimport MovieInfoLink from '../../components/MovieInfoLink';\nimport { getMovieFromTMDB } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchInput = styled.input.withConfig({\n  displayName: \"name__SearchInput\",\n  componentId: \"irtilj-0\"\n})([\"width:250px;height:50px;margin:0 auto;text-align:center;border-radius:2rem;border:none;\"]);\n\nfunction MovieSearchPage(props) {\n  const router = useRouter();\n  const {\n    name\n  } = router.query;\n  const {\n    movieDetail\n  } = props;\n  console.log(router.query);\n  console.log(movieDetail);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState(false);\n  const {\n    0: IsEmptymovieList,\n    1: setIsEmptyMovieList\n  } = useState(false);\n\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitValue = e => {\n    e.preventDefault();\n\n    const fetchMovieList = async () => {\n      const fetchData = await getMovieFromTMDB(inputValue);\n      console.log(fetchData.results);\n\n      if (!fetchData.results) {\n        setMovieList(undefined);\n        setIsEmptyMovieList(true);\n      } else {\n        setMovieList(fetchData.results);\n        setIsEmptyMovieList(false);\n      }\n    };\n\n    fetchMovieList();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitValue,\n      style: {\n        textAlign: 'center',\n        position: 'relative',\n        top: '2.5rem',\n        left: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn search-btn\",\n        children: /*#__PURE__*/_jsxDEV(IoSearchSharp, {\n          style: {\n            color: 'white',\n            fontSize: '1.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!movieDetail.results && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC80\\uC0C9\\uD558\\uC2E0 \\uC601\\uD654\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), movieDetail.results && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '80%',\n            margin: '0 auto',\n            marginTop: '2rem'\n          },\n          children: movieDetail.results.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '210px',\n              margin: '0 1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(MovieInfoLink, {\n              id: movieItem.id,\n              src: movieItem.poster_path,\n              koreanTitle: movieItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this)\n          }, movieItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getServerSideProps({\n  query\n}) {\n  const movieDetail = await getMovieFromTMDB(query.name);\n  return {\n    props: {\n      movieDetail: movieDetail\n    }\n  };\n}\nexport default MovieSearchPage;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch/[name].js"],"names":["React","useState","styled","useRouter","IoSearchSharp","AppLayout","MovieInfoLink","getMovieFromTMDB","SearchInput","input","MovieSearchPage","props","router","name","query","movieDetail","console","log","inputValue","setInputValue","movieList","setMovieList","IsEmptymovieList","setIsEmptyMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","fetchMovieList","fetchData","results","undefined","textAlign","position","top","left","color","fontSize","display","flexWrap","width","margin","marginTop","map","movieItem","id","poster_path","title","getServerSideProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,SAASC,gBAAT,QAAiC,YAAjC;;;AAEA,MAAMC,WAAW,GAAGN,MAAM,CAACO,KAAV;AAAA;AAAA;AAAA,+FAAjB;;AAQA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,KAAxB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,KAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaC;AAAb,MAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACmB,SAAD;AAAA,OAAYC;AAAZ,MAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACqB,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CtB,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMuB,gBAAgB,GAAIC,CAAD,IAAO;AAC5BN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACI,cAAF;;AAEA,UAAMC,cAAc,GAAG,YAAY;AAC/B,YAAMC,SAAS,GAAG,MAAMxB,gBAAgB,CAACW,UAAD,CAAxC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYc,SAAS,CAACC,OAAtB;;AACA,UAAG,CAACD,SAAS,CAACC,OAAd,EAAuB;AACnBX,QAAAA,YAAY,CAACY,SAAD,CAAZ;AACAV,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,OAHD,MAGO;AACHF,QAAAA,YAAY,CAACU,SAAS,CAACC,OAAX,CAAZ;AACAT,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,KAVD;;AAWAO,IAAAA,cAAc;AACjB,GAfD;;AAiBA,sBACI,QAAC,SAAD;AAAA,4BACI;AACI,MAAA,QAAQ,EAAEF,iBADd;AAEI,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,QAAQ,EAAE,UAAjC;AAA6CC,QAAAA,GAAG,EAAE,QAAlD;AAA4DC,QAAAA,IAAI,EAAE;AAAlE,OAFX;AAAA,8BAII,QAAC,WAAD;AACI,QAAA,WAAW,EAAC,gEADhB;AAEI,QAAA,QAAQ,EAAEb;AAFd;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE;AAAEc,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,QAAQ,EAAE;AAA5B;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAA,iBAEQ,CAACxB,WAAW,CAACiB,OAAb,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHZ,EAOQjB,WAAW,CAACiB,OAAZ,iBACI;AAAA,+BACI;AAAK,UAAA,KAAK,EAAE;AAAEQ,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,QAAQ,EAAE,MAA7B;AAAqCC,YAAAA,KAAK,EAAE,KAA5C;AAAmDC,YAAAA,MAAM,EAAE,QAA3D;AAAqEC,YAAAA,SAAS,EAAE;AAAhF,WAAZ;AAAA,oBAEI7B,WAAW,CAACiB,OAAZ,CAAoBa,GAApB,CAAwBC,SAAS,iBAC7B;AAAwB,YAAA,KAAK,EAAE;AAAEJ,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE;AAA1B,aAA/B;AAAA,mCACI,QAAC,aAAD;AACI,cAAA,EAAE,EAAEG,SAAS,CAACC,EADlB;AAEI,cAAA,GAAG,EAAED,SAAS,CAACE,WAFnB;AAGI,cAAA,WAAW,EAAEF,SAAS,CAACG;AAH3B;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUH,SAAS,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ,uBARZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;AAAA;AAED,OAAO,eAAeG,kBAAf,CAAkC;AAAEpC,EAAAA;AAAF,CAAlC,EAA6C;AAChD,QAAMC,WAAW,GAAG,MAAMR,gBAAgB,CAACO,KAAK,CAACD,IAAP,CAA1C;AAEA,SAAO;AACHF,IAAAA,KAAK,EAAE;AACHI,MAAAA,WAAW,EAAEA;AADV;AADJ,GAAP;AAKH;AAED,eAAeL,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useRouter } from \"next/router\";\r\nimport { IoSearchSharp } from \"react-icons/io5\";\r\n\r\nimport AppLayout from '../../components/layout/AppLayout';\r\nimport MovieInfoLink from '../../components/MovieInfoLink'\r\n\r\nimport { getMovieFromTMDB } from '../api/api';\r\n\r\nconst SearchInput = styled.input`\r\n    width: 250px;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    border-radius: 2rem;\r\n    border: none;\r\n`\r\nfunction MovieSearchPage(props) {\r\n    const router = useRouter();\r\n    const { name } = router.query;\r\n    const { movieDetail } = props;\r\n\r\n    console.log(router.query);\r\n    console.log(movieDetail);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [movieList, setMovieList] = useState(false);\r\n    const [IsEmptymovieList, setIsEmptyMovieList] = useState(false);\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getMovieFromTMDB(inputValue);\r\n            console.log(fetchData.results);\r\n            if(!fetchData.results) {\r\n                setMovieList(undefined);\r\n                setIsEmptyMovieList(true);\r\n            } else {\r\n                setMovieList(fetchData.results);\r\n                setIsEmptyMovieList(false);\r\n            }\r\n        }\r\n        fetchMovieList();\r\n    };\r\n\r\n    return (\r\n        <AppLayout>\r\n            <form\r\n                onSubmit={handleSubmitValue}\r\n                style={{ textAlign: 'center', position: 'relative', top: '2.5rem', left: '2rem' }}\r\n            >\r\n                <SearchInput\r\n                    placeholder=\"영화명을 입력해주세요.\"\r\n                    onChange={handleInputValue}\r\n                />\r\n                <button type=\"submit\" className=\"btn search-btn\">\r\n                    <IoSearchSharp style={{ color: 'white', fontSize: '1.5rem' }} />\r\n                </button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    !movieDetail.results && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                }\r\n                {\r\n                    movieDetail.results && (\r\n                        <>\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', width: '80%', margin: '0 auto', marginTop: '2rem' }}>\r\n                            {\r\n                                movieDetail.results.map(movieItem => (\r\n                                    <div key={movieItem.id} style={{ width: '210px', margin: '0 1rem' }}>\r\n                                        <MovieInfoLink\r\n                                            id={movieItem.id}\r\n                                            src={movieItem.poster_path}\r\n                                            koreanTitle={movieItem.title}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieFromTMDB(query.name);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n        },\r\n    }\r\n}\r\n\r\nexport default MovieSearchPage;\r\n"]},"metadata":{},"sourceType":"module"}