{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, LOAD_MY_REVIEWS_REQUEST, LOAD_MY_REVIEWS_SUCCESS, LOAD_MY_REVIEWS_FAILURE, LOAD_MORE_MY_REVIEWS_REQUEST, LOAD_MORE_MY_REVIEWS_SUCCESS, LOAD_MORE_MY_REVIEWS_FAILURE, LOAD_ALL_REVIEWS_REQUEST, LOAD_ALL_REVIEWS_SUCCESS, LOAD_ALL_REVIEWS_FAILURE, LIKE_REVIEW_REQUEST, LIKE_REVIEW_SUCCESS, LIKE_REVIEW_FAILURE, UNLIKE_REVIEW_REQUEST, UNLIKE_REVIEW_SUCCESS, UNLIKE_REVIEW_FAILURE } from '../reducers/review';\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction* addReview(action) {\n  try {\n    yield call(addReviewAPI, action.data);\n    console.log('saga ADD_REVIEW');\n    yield put({\n      type: ADD_REVIEW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMyReviewsAPI(data) {\n  return axios.get(`/review/${data}`);\n}\n\nfunction* loadMyReviews(action) {\n  try {\n    const result = yield call(loadMyReviewsAPI, action.data);\n    console.log('saga LOAD_MY_REVIEWS');\n    yield put({\n      type: LOAD_MY_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMoreMyReviewsAPI(data) {\n  return axios.get(`/reviews/${data}`);\n}\n\nfunction* loadMoreMyReviews(action) {\n  try {\n    const result = yield call(loadMoreMyReviewsAPI, action.data);\n    console.log('saga LOAD_MY_REVIEWS');\n    yield put({\n      type: LOAD_MORE_MY_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MORE_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadAllReviewsAPI(data) {\n  return axios.post('/reviews', data);\n}\n\nfunction* loadAllReviews(action) {\n  try {\n    const result = yield call(loadAllReviewsAPI, action.data);\n    console.log('saga LOAD_ALL_REVIEWS');\n    yield put({\n      type: LOAD_ALL_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_ALL_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likeReviewAPI(data) {\n  return axios.post(`/review/like`, data);\n}\n\nfunction* likeReview(action) {\n  try {\n    const result = yield call(likeReviewAPI, action.data);\n    console.log('saga LIKE_REVIEW');\n    yield put({\n      type: LIKE_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unLikeReviewAPI(data) {\n  return axios.post(`/review/dislike`, data);\n}\n\nfunction* unLikeReview(action) {\n  try {\n    const result = yield call(unLikeReviewAPI, action.data);\n    console.log('saga UNLIKE_REVIEW');\n    yield put({\n      type: UNLIKE_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchReview() {\n  yield takeLatest(ADD_REVIEW_REQUEST, addReview);\n}\n\nfunction* watchMyReviews() {\n  yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\n}\n\nfunction* watchLoadMyReviews() {\n  yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\n}\n\nfunction* watchAllReviews() {\n  yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\n}\n\nfunction* watchLikeReview() {\n  yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\n}\n\nfunction* watchUnLikeReview() {\n  yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReview), fork(watchMyReviews), fork(watchLoadMyReviews), fork(watchAllReviews), fork(watchLikeReview), fork(watchUnLikeReview)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["axios","all","fork","call","put","takeLatest","throttle","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","LOAD_MY_REVIEWS_REQUEST","LOAD_MY_REVIEWS_SUCCESS","LOAD_MY_REVIEWS_FAILURE","LOAD_MORE_MY_REVIEWS_REQUEST","LOAD_MORE_MY_REVIEWS_SUCCESS","LOAD_MORE_MY_REVIEWS_FAILURE","LOAD_ALL_REVIEWS_REQUEST","LOAD_ALL_REVIEWS_SUCCESS","LOAD_ALL_REVIEWS_FAILURE","LIKE_REVIEW_REQUEST","LIKE_REVIEW_SUCCESS","LIKE_REVIEW_FAILURE","UNLIKE_REVIEW_REQUEST","UNLIKE_REVIEW_SUCCESS","UNLIKE_REVIEW_FAILURE","addReviewAPI","data","post","addReview","action","console","log","type","err","response","loadMyReviewsAPI","get","loadMyReviews","result","loadMoreMyReviewsAPI","loadMoreMyReviews","loadAllReviewsAPI","loadAllReviews","likeReviewAPI","likeReview","unLikeReviewAPI","unLikeReview","watchReview","watchMyReviews","watchLoadMyReviews","watchAllReviews","watchLikeReview","watchUnLikeReview","reviewSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    LOAD_MY_REVIEWS_REQUEST,\r\n    LOAD_MY_REVIEWS_SUCCESS,\r\n    LOAD_MY_REVIEWS_FAILURE,\r\n    LOAD_MORE_MY_REVIEWS_REQUEST,\r\n    LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n    LOAD_MORE_MY_REVIEWS_FAILURE,\r\n    LOAD_ALL_REVIEWS_REQUEST,\r\n    LOAD_ALL_REVIEWS_SUCCESS,\r\n    LOAD_ALL_REVIEWS_FAILURE,\r\n    LIKE_REVIEW_REQUEST,\r\n    LIKE_REVIEW_SUCCESS,\r\n    LIKE_REVIEW_FAILURE,\r\n    UNLIKE_REVIEW_REQUEST,\r\n    UNLIKE_REVIEW_SUCCESS,\r\n    UNLIKE_REVIEW_FAILURE,\r\n} from '../reducers/review';\r\n\r\n\r\n\r\n\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction* addReview(action) {\r\n    try {\r\n        yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyReviewsAPI(data) {\r\n    return axios.get(`/review/${data}`)\r\n}\r\n\r\nfunction* loadMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMoreMyReviewsAPI(data) {\r\n    return axios.get(`/reviews/${data}`)\r\n}\r\n\r\nfunction* loadMoreMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMoreMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadAllReviewsAPI(data) {\r\n    return axios.post('/reviews', data)\r\n}\r\n\r\nfunction* loadAllReviews(action) {\r\n    try {\r\n        const result = yield call(loadAllReviewsAPI, action.data)\r\n        console.log('saga LOAD_ALL_REVIEWS');\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction likeReviewAPI(data) {\r\n    return axios.post(`/review/like`, data)\r\n}\r\n\r\nfunction* likeReview(action) {\r\n    try {\r\n        const result =  yield call(likeReviewAPI, action.data)\r\n        console.log('saga LIKE_REVIEW');\r\n        yield put({\r\n            type: LIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikeReviewAPI(data) {\r\n    return axios.post(`/review/dislike`, data)\r\n}\r\n\r\nfunction* unLikeReview(action) {\r\n    try {\r\n        const result = yield call(unLikeReviewAPI, action.data)\r\n        console.log('saga UNLIKE_REVIEW');\r\n        yield put({\r\n            type: UNLIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: UNLIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchMyReviews() {\r\n    yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\r\n}\r\n\r\nfunction* watchLoadMyReviews() {\r\n    yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\r\n}\r\n\r\nfunction* watchAllReviews() {\r\n    yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\r\n}\r\n\r\nfunction* watchLikeReview() {\r\n    yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\r\n}\r\n\r\nfunction* watchUnLikeReview() {\r\n    yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\r\n}\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n      fork(watchMyReviews),\r\n      fork(watchLoadMyReviews),\r\n      fork(watchAllReviews),\r\n      fork(watchLikeReview),\r\n      fork(watchUnLikeReview),\r\n      \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}