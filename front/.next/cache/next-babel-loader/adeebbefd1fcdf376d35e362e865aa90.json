{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user'; // api\n\nfunction loginAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/api/signUp', data);\n} // action - reducers\n\n\nfunction* logIn(action) {\n  try {\n    // const result =  yield call(loginAPI, action.data)\n    console.log('saga LOGIN');\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      payload: action.payload\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      payload: err.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    // const result =  yield call(signUpAPI, action.data)\n    console.log('saga SIGN-UP');\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      payload: action.payload\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      payload: err.response.data\n    });\n  }\n} // start function\n\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/user.js"],"names":["axios","all","fork","call","put","takeLatest","delay","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","loginAPI","data","post","signUpAPI","logIn","action","console","log","type","payload","err","response","signUp","watchLogIn","watchSignUp","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,kBAPP,C,CASA;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,SAASE,SAAT,CAAmBF,IAAnB,EAAyB;AACrB,SAAOd,KAAK,CAACe,IAAN,CAAW,aAAX,EAA0BD,IAA1B,CAAP;AACH,C,CAED;;;AACA,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEZ,cADA;AAENa,MAAAA,OAAO,EAAEJ,MAAM,CAACI;AAFV,KAAD,CAAT;AAIH,GARD,CAQE,OAAMC,GAAN,EAAW;AACT,UAAMnB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEb,cADA;AAENc,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaV;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUW,MAAV,CAAiBP,MAAjB,EAAyB;AACrB,MAAI;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAET,eADA;AAENU,MAAAA,OAAO,EAAEJ,MAAM,CAACI;AAFV,KAAD,CAAT;AAIH,GARD,CAQE,OAAMC,GAAN,EAAW;AACT,UAAMnB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEV,eADA;AAENW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaV;AAFhB,KAAD,CAAT;AAIH;AACJ,C,CAGD;;;AACA,UAAUY,UAAV,GAAuB;AACnB,QAAMrB,UAAU,CAACE,cAAD,EAAiBU,KAAjB,CAAhB;AACH;;AAED,UAAUU,WAAV,GAAwB;AACpB,QAAMtB,UAAU,CAACK,eAAD,EAAkBe,MAAlB,CAAhB;AACH;;AAID,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM3B,GAAG,CAAC,CACRC,IAAI,CAACwB,UAAD,CADI,EAERxB,IAAI,CAACyB,WAAD,CAFI,CAAD,CAAT;AAKH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n// api\r\nfunction loginAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/api/signUp', data)\r\n}\r\n\r\n// action - reducers\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result =  yield call(loginAPI, action.data)\r\n        console.log('saga LOGIN');  \r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            payload: action.payload\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // const result =  yield call(signUpAPI, action.data)\r\n        console.log('saga SIGN-UP');  \r\n        yield delay(1000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n            payload: action.payload\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// start function\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n      fork(watchLogIn),\r\n      fork(watchSignUp),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}