{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieInfo\\\\[id].js\",\n    _this = this;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MovieInfo = function MovieInfo(_ref) {\n  var movies = _ref.movies;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movies\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MovieInfo;\nexport var __N_SSG = true;\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieInfo/[id].js"],"names":["MovieInfo","movies"],"mappings":";;;;;AAmBA,IAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,sBACd;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,WADc;AAAA,CAAlB;;KAAMD,S;;AAMN,eAAeA,SAAf","sourcesContent":["import { data } from '../../json/data'\r\n\r\nexport async function getStaticProps({ params }) {\r\n    const result = data.filter(item => item.id.toString() === params.id)\r\n    console.log(result);\r\n    return {\r\n      props: {\r\n        movies: result[0]\r\n      },\r\n    }\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const paths = data.map(item => ({\r\n        params: { id: item.id.toString() },\r\n    }))\r\n    return { paths, fallback: false }\r\n}\r\n\r\nconst MovieInfo = ({ movies }) => (\r\n    <div>\r\n        {movies}\r\n    </div>\r\n)\r\n\r\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}