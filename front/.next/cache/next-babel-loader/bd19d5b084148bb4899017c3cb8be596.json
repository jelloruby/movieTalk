{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieTalk.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport SubPageLayout from '../components/layout/SubPageLayout';\nimport MovieTalkCard from '../components/Card/MovieTalkCard';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_ALL_REVIEWS_REQUEST } from '../reducers/review';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction movieTalk() {\n  const {\n    allReviews\n  } = useSelector(state => state.review);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  useEffect(() => {\n    if (me && me._id) {\n      setId(me._id);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allReviews && allReviews.map(review => /*#__PURE__*/_jsxDEV(MovieTalkCard, {\n        review: review,\n        id: id\n      }, review._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  ;\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_ALL_REVIEWS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default movieTalk;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieTalk.js"],"names":["React","useState","useSelector","axios","END","wrapper","SubPageLayout","MovieTalkCard","LOAD_MY_INFO_REQUEST","LOAD_ALL_REVIEWS_REQUEST","movieTalk","allReviews","state","review","me","user","id","setId","useEffect","_id","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,wBAAT,QAAyC,oBAAzC;;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAiBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAA1B;AAEA,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAchB,QAAQ,CAAC,EAAD,CAA5B;AAEAiB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGJ,EAAE,IAAIA,EAAE,CAACK,GAAZ,EAAiB;AACbF,MAAAA,KAAK,CAACH,EAAE,CAACK,GAAJ,CAAL;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACI,QAAC,aAAD;AAAA,2BACI;AAAA,gBAEIR,UAAU,IACNA,UAAU,CAACS,GAAX,CAAeP,MAAM,iBACjB,QAAC,aAAD;AAAgC,QAAA,MAAM,EAAEA,MAAxC;AAAgD,QAAA,EAAE,EAAEG;AAApD,SAAoBH,MAAM,CAACM,GAA3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;AAAA;AAED,OAAO,MAAME,kBAAkB,GAAGhB,OAAO,CAACgB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACApB,EAAAA,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBpB,IAAAA,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAAA;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEtB;AADa,GAAvB;AAGAc,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAErB;AADa,GAAvB;AAGAa,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBzB,GAAvB;AACA,QAAMkB,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAdiC,CAA3B;AAiBP,eAAetB,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport SubPageLayout from '../components/layout/SubPageLayout';\r\nimport MovieTalkCard from '../components/Card/MovieTalkCard';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_ALL_REVIEWS_REQUEST } from '../reducers/review';\r\n\r\nfunction movieTalk() {\r\n    const { allReviews } = useSelector((state) => state.review);\r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    const [id, setId] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(me && me._id) {\r\n            setId(me._id);\r\n        }\r\n    }, [])\r\n    return (\r\n        <SubPageLayout>\r\n            <div>\r\n            {\r\n                allReviews && (\r\n                    allReviews.map(review => (\r\n                        <MovieTalkCard key={review._id} review={review} id={id} />\r\n                    ))\r\n                )\r\n            }\r\n            </div>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    };\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_ALL_REVIEWS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\n\r\nexport default movieTalk;\r\n"]},"metadata":{},"sourceType":"module"}