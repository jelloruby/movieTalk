{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport AppLayout from '../components/layout/AppLayout';\nimport MovieInfoSlider from '../components/slider/MovieInfoSlider';\nimport MovieMainSlider from '../components/slider/MovieMainSlider';\nimport { getActorsFromTMDB } from './api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WrapMovieList = styled.div.withConfig({\n  displayName: \"pages__WrapMovieList\",\n  componentId: \"sc-190qa7b-0\"\n})([\"margin-bottom:3rem;\"]);\nvar TitleOfList = styled.div.withConfig({\n  displayName: \"pages__TitleOfList\",\n  componentId: \"sc-190qa7b-1\"\n})([\"font-size:2rem;\"]);\nvar SiteName = styled.h2.withConfig({\n  displayName: \"pages__SiteName\",\n  componentId: \"sc-190qa7b-2\"\n})([\"text-align:center;font-size:6rem;color:red;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);\"]);\n\nfunction Home(props) {\n  var popularMovie = props.popularMovie;\n  var actionMovie = props.actionMovie;\n  var comedyMovie = props.comedyMovie;\n  var animationMovie = props.animationMovie;\n  return /*#__PURE__*/_jsxDEV(AppLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","styled","AppLayout","MovieInfoSlider","MovieMainSlider","getActorsFromTMDB","WrapMovieList","div","TitleOfList","SiteName","h2","Home","props","popularMovie","actionMovie","comedyMovie","animationMovie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AAGA,SAA2DC,iBAA3D,QAAoF,WAApF;;AAEA,IAAMC,aAAa,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,2BAAnB;AAIA,IAAMC,WAAW,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,uBAAjB;AAGA,IAAME,QAAQ,GAAGR,MAAM,CAACS,EAAV;AAAA;AAAA;AAAA,qHAAd;;AASA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,MACTC,YADS,GACQD,KADR,CACTC,YADS;AAAA,MAETC,WAFS,GAEOF,KAFP,CAETE,WAFS;AAAA,MAGTC,WAHS,GAGOH,KAHP,CAGTG,WAHS;AAAA,MAITC,cAJS,GAIUJ,KAJV,CAITI,cAJS;AAMjB,sBACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;KAnDQL,I;;AA6FT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user'\r\nimport AppLayout from '../components/layout/AppLayout'\r\nimport MovieInfoSlider from '../components/slider/MovieInfoSlider';\r\nimport MovieMainSlider from '../components/slider/MovieMainSlider';\r\nimport wrapper from '../store/configureStore';\r\n\r\nimport { getpopularMovieFromTMDB, getMovieByGenreFromTMDB, getActorsFromTMDB } from './api/api';\r\n\r\nconst WrapMovieList = styled.div`\r\n    margin-bottom: 3rem;\r\n`\r\n\r\nconst TitleOfList = styled.div`\r\n    font-size: 2rem;\r\n`\r\nconst SiteName = styled.h2`\r\n    text-align: center;\r\n    font-size: 6rem;\r\n    color: red;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`\r\nfunction Home(props) {\r\n    const { popularMovie } = props;\r\n    const { actionMovie } = props;\r\n    const { comedyMovie } = props;\r\n    const { animationMovie } = props;\r\n\r\n    return (\r\n        <AppLayout>\r\n            {/* <div className=\"main-content\" style={{ height: '80vh', position: 'relative', marginBottom: '5rem' }}>\r\n                <MovieMainSlider movieInfomation={popularMovie}></MovieMainSlider>\r\n                <SiteName>MovieTalk</SiteName>\r\n            </div>\r\n            <div style={{ width: '85%', margin: '0 auto' }} className=\"movie-list\">\r\n                <WrapMovieList>\r\n                    <TitleOfList>최신 인기 영화</TitleOfList>\r\n                    { popularMovie &&\r\n                        (\r\n                            <MovieInfoSlider movieInfomation={popularMovie} />\r\n                        )\r\n                    }\r\n                </WrapMovieList>\r\n                <WrapMovieList>\r\n                    <TitleOfList>무비톡 리뷰순</TitleOfList>\r\n                </WrapMovieList>\r\n                <WrapMovieList>\r\n                    <TitleOfList>액션 | Action</TitleOfList>\r\n                    { actionMovie &&\r\n                        (\r\n                            <MovieInfoSlider movieInfomation={actionMovie} />\r\n                        )\r\n                    }\r\n                </WrapMovieList>\r\n                <WrapMovieList>\r\n                    <TitleOfList>코미디 | Drama</TitleOfList>\r\n                    { comedyMovie &&\r\n                        (\r\n                            <MovieInfoSlider movieInfomation={comedyMovie} />\r\n                        )\r\n                    }\r\n                </WrapMovieList>\r\n                <WrapMovieList>\r\n                    <TitleOfList>애니메이션 | Animation</TitleOfList>\r\n                    { animationMovie &&\r\n                        (\r\n                            <MovieInfoSlider movieInfomation={animationMovie} />\r\n                        )\r\n                    }\r\n                </WrapMovieList>\r\n            </div> */}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    // 쿠키의 정보가 항상 들어가도록 해주는 것!\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    // 만약 아래와 같이 설정하면 쿠키가 모든 서버에서 공유될 수 있다.\r\n    // axios.defaults.headers.Cookie = cookie;\r\n\r\n    // 그래서 쿠키를 써서 요청을 보낼 때만 쿠키를 넣어놨다가 쿠키를 쓰지 않을 때는 서버에서 공유하고 있는 쿠키를 제거하도록 한다.\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    \r\n    // context 안에는 store가 들어있다.\r\n    // redux에 데이터가 채워진 상태로 데이터가 존재하게 된다.\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST\r\n    })\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n\r\n\r\n    const popularMovie = await getpopularMovieFromTMDB();\r\n    const actionMovie = await getMovieByGenreFromTMDB(28);\r\n    const comedyMovie = await getMovieByGenreFromTMDB(35);\r\n    const animationMovie = await getMovieByGenreFromTMDB(16);\r\n    const fantasyMovie = await getMovieByGenreFromTMDB(14);\r\n    const sfMovie = await getMovieByGenreFromTMDB(878);\r\n\r\n    return {\r\n      props: { \r\n        popularMovie: popularMovie.results, \r\n        actionMovie: actionMovie.results, \r\n        comedyMovie: comedyMovie.results,\r\n        animationMovie: animationMovie.results,\r\n        fantasyMovie: fantasyMovie.results,\r\n        sfMovie: sfMovie.results\r\n      },\r\n    }\r\n});\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}