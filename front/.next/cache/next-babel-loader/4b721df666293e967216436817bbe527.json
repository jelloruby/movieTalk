{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE } from '../reducers/review'; // api\n\nfunction addReviewAPI(data) {\n  return axios.post('/', data);\n} // action - reducers\n\n\nfunction* addReview(action) {\n  try {\n    // const result =  yield call(addReviewAPI, action.data)\n    console.log('saga addComment');\n    yield put({\n      type: ADD_REVIEW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n} // start function\n\n\nfunction* watchReview() {\n  yield takeLatest(ADD_REVIEW_REQUEST, addReview);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReview)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["axios","all","fork","call","put","takeLatest","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","addReviewAPI","data","post","addReview","action","console","log","type","err","response","watchReview","reviewSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,QAIO,oBAJP,C,CAMA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,SAAOV,KAAK,CAACW,IAAN,CAAW,GAAX,EAAgBD,IAAhB,CAAP;AACH,C,CAGD;;;AACA,UAAUE,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAI;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMX,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAET,kBADA;AAENG,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAER,kBADA;AAENE,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ,C,CAGD;;;AACA,UAAUS,WAAV,GAAwB;AACpB,QAAMd,UAAU,CAACC,kBAAD,EAAqBM,SAArB,CAAhB;AACH;;AAGD,eAAe,UAAUQ,UAAV,GAAuB;AAClC,QAAMnB,GAAG,CAAC,CACRC,IAAI,CAACiB,WAAD,CADI,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE\r\n} from '../reducers/review';\r\n\r\n// api\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/', data)\r\n}\r\n\r\n\r\n// action - reducers\r\nfunction* addReview(action) {\r\n    try {\r\n        // const result =  yield call(addReviewAPI, action.data)\r\n        console.log('saga addComment');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// start function\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}