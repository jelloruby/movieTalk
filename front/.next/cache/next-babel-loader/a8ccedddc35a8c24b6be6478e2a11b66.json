{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieInfo\\\\[id].js\";\nimport { useRouter } from \"next/router\";\nimport { data } from '../../json/data';\nimport AppLayout from '../../components/AppLayout'; // export const getStaticPaths = async () => {\n//     const paths = data.map(item => ({\n//         params: { id: item.id.toString() },\n//     }))\n//     return { paths, fallback: false }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieInfo({\n  movies\n}) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const result = data.filter(item => item.id.toString() === id);\n  const result1 = result[0];\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result1.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieInfo/[id].js"],"names":["useRouter","data","AppLayout","MovieInfo","movies","router","id","query","result","filter","item","toString","result1","name"],"mappings":";AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,SAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAgC;AAC5B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAMC,MAAM,GAAGP,IAAI,CAACQ,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACJ,EAAL,CAAQK,QAAR,OAAuBL,EAA3C,CAAf;AACA,QAAMM,OAAO,GAAGJ,MAAM,CAAC,CAAD,CAAtB;AAEA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA,gBAAMI,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,eAAeV,SAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\n\r\nimport { data } from '../../json/data'\r\nimport AppLayout from '../../components/AppLayout'\r\n\r\n// export const getStaticPaths = async () => {\r\n//     const paths = data.map(item => ({\r\n//         params: { id: item.id.toString() },\r\n//     }))\r\n//     return { paths, fallback: false }\r\n// }\r\n\r\nfunction MovieInfo ({ movies }) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const result = data.filter(item => item.id.toString() === id);\r\n    const result1 = result[0];\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div>{result1.name}</div>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}