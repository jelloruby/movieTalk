{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  loadReviewsDone: false,\n  loadReviewsError: null,\n  reviews: []\n};\nexport const LOAD_REVIEWS_REQUEST = 'LOAD_REVIEWS_REQUEST';\nexport const LOAD_REVIEWS_SUCCESS = 'LOAD_REVIEWS_SUCCESS';\nexport const LOAD_REVIEWS_FAILURE = 'LOAD_REVIEWS_FAILURE';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_REVIEWS_REQUEST:\n      console.log('reducer Review');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        loadReviewsDone: false\n      });\n\n    case LOAD_REVIEWS_SUCCESS:\n      console.log('reducer LOAD_REVIEWS_SUCCESS');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        loadReviewsDone: true // reviews: [ ...state.reviews, action.data ]\n\n      });\n\n    case LOAD_REVIEWS_FAILURE:\n      console.log('reducer LOAD_REVIEWS_FAILURE');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        loadReviewsDone: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/reducers/reviews.js"],"names":["initialState","loadReviewsDone","loadReviewsError","reviews","LOAD_REVIEWS_REQUEST","LOAD_REVIEWS_SUCCESS","LOAD_REVIEWS_FAILURE","reducer","state","action","type","console","log"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,eAAe,EAAE,KADO;AAExBC,EAAAA,gBAAgB,EAAE,IAFM;AAGxBC,EAAAA,OAAO,EAAE;AAHe,CAArB;AAMP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACR,YAAP,EAAqBS,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,oBAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAOJ,KAAK,mCACLA,KADK;AAERP,QAAAA,eAAe,EAAE;AAFT,QAAZ;;AAIJ,SAAKI,oBAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,aAAOJ,KAAK,mCACLA,KADK;AAERP,QAAAA,eAAe,EAAE,IAFT,CAGR;;AAHQ,QAAZ;;AAKJ,SAAKK,oBAAL;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,aAAOJ,KAAK,mCACLA,KADK;AAERP,QAAAA,eAAe,EAAE;AAFT,QAAZ;;AAKJ;AACI,aAAOO,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    loadReviewsDone: false,\r\n    loadReviewsError: null,\r\n    reviews: [],\r\n};\r\n\r\nexport const LOAD_REVIEWS_REQUEST = 'LOAD_REVIEWS_REQUEST';\r\nexport const LOAD_REVIEWS_SUCCESS = 'LOAD_REVIEWS_SUCCESS';\r\nexport const LOAD_REVIEWS_FAILURE = 'LOAD_REVIEWS_FAILURE';\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_REVIEWS_REQUEST:\r\n            console.log('reducer Review');\r\n            return state = {\r\n                ...state,\r\n                loadReviewsDone: false,\r\n            }\r\n        case LOAD_REVIEWS_SUCCESS:\r\n            console.log('reducer LOAD_REVIEWS_SUCCESS');\r\n            return state = {\r\n                ...state,\r\n                loadReviewsDone: true,\r\n                // reviews: [ ...state.reviews, action.data ]\r\n            }\r\n        case LOAD_REVIEWS_FAILURE:\r\n            console.log('reducer LOAD_REVIEWS_FAILURE');\r\n            return state = {\r\n                ...state,\r\n                loadReviewsDone: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}