{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\review\\\\[...all].js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport SubPageLayout from '../../components/layout/SubPageLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_REVIEW_REQUEST } from '../../reducers/review';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieReviewWrap = styled.div.withConfig({\n  displayName: \"all__MovieReviewWrap\",\n  componentId: \"sc-1erg3rn-0\"\n})([\"width:80%;margin:0 auto;margin-top:48px;display:flex;\"]);\n\nfunction review() {\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const {\n    review\n  } = useSelector(state => state.review);\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && !me.email) {\n      setIsLoggedIn(false);\n    } else {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  console.log(review);\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(MovieReviewWrap, {\n      children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log(context.params.all);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  ;\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_REVIEW_REQUEST,\n    data: {\n      movieId: context.params.all[1],\n      writerId: context.params.all[0]\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default review;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/review/[...all].js"],"names":["React","useEffect","useState","useSelector","styled","axios","END","wrapper","SubPageLayout","LOAD_MY_INFO_REQUEST","LOAD_REVIEW_REQUEST","MovieReviewWrap","div","review","isLoggedIn","setIsLoggedIn","state","me","user","email","console","log","getServerSideProps","context","params","all","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","movieId","writerId","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,6DAArB;;AAOA,SAASC,MAAT,GAAkB;AACd,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACH,MAAlB,CAA9B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAASd,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAA1B;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGgB,EAAE,IAAI,CAACA,EAAE,CAACE,KAAb,EAAoB;AAChBJ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,eAAD;AAAA,gBAEQC,UAAU,iBACN;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;AAAA;AAED,OAAO,MAAMQ,kBAAkB,GAAGf,OAAO,CAACe,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5EH,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACC,MAAR,CAAeC,GAA3B;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACArB,EAAAA,KAAK,CAACwB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIP,OAAO,CAACI,GAAR,IAAeD,MAAnB,EAA2B;AACzBrB,IAAAA,KAAK,CAACwB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAAA;AACDH,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAExB;AADa,GAAvB;AAGAc,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEvB,mBADa;AAEnBwB,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAEZ,OAAO,CAACC,MAAR,CAAeC,GAAf,CAAmB,CAAnB,CADP;AAEFW,MAAAA,QAAQ,EAAEb,OAAO,CAACC,MAAR,CAAeC,GAAf,CAAmB,CAAnB;AAFR;AAFa,GAAvB;AAOAF,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB1B,GAAvB;AACA,QAAMiB,OAAO,CAACQ,KAAR,CAAcM,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAnBiC,CAA3B;AAqBP,eAAezB,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport SubPageLayout from '../../components/layout/SubPageLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_REVIEW_REQUEST } from '../../reducers/review';\r\n\r\nconst MovieReviewWrap = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    margin-top: 48px;\r\n    display: flex;\r\n`\r\n\r\nfunction review() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const { review } = useSelector((state) => state.review);\r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if(me && !me.email) {\r\n            setIsLoggedIn(false)\r\n        } else {\r\n            setIsLoggedIn(true);\r\n        }\r\n    }, []);\r\n    \r\n    console.log(review);\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <MovieReviewWrap>\r\n                {\r\n                    isLoggedIn && (\r\n                        <div>\r\n                            <button>수정</button>\r\n                        </div>\r\n                    )\r\n                }\r\n                {/* <div style={{ width: '50%' }}>\r\n                    <div>\r\n                        <img src={review[0].image} style={{ borderRadius: '5px', width: '200px' }} />\r\n                    </div>\r\n                    <div>{review[0].text}</div>\r\n                </div> */}\r\n                {/* <div>{review[0].title}({review[0].release_date.slice(0, 4)})</div> */}\r\n            </MovieReviewWrap>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    console.log(context.params.all);\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    };\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_REVIEW_REQUEST,\r\n        data: {\r\n            movieId: context.params.all[1],\r\n            writerId: context.params.all[0]\r\n        }\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default review;\r\n"]},"metadata":{},"sourceType":"module"}