{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport SubPageLayout from '../components/Layout/SubPageLayout';\nimport MovieInfoSlider from '../components/Slider/MovieInfoSlider';\nimport SearchForm from '../components/Form/SearchForm';\nimport { getPopularMovieFromTMDB } from './api/api';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoiveSearchWrap = styled.div.withConfig({\n  displayName: \"movieSearch__MoiveSearchWrap\",\n  componentId: \"sc-2vlrdc-0\"\n})([\"position:absolute;top:48px;left:60%;transform:translate(-60%,0);\"]);\nconst SubSlideWrap = styled.div.withConfig({\n  displayName: \"movieSearch__SubSlideWrap\",\n  componentId: \"sc-2vlrdc-1\"\n})([\"width:70%;margin:0 auto;position:absolute;top:200px;left:60%;transform:translate(-60%,0);@media screen and (max-width:900px){width:500px;width:100%;left:0px;}\"]);\nconst TitleOfList = styled.div.withConfig({\n  displayName: \"movieSearch__TitleOfList\",\n  componentId: \"sc-2vlrdc-2\"\n})([\"font-size:20px;margin-bottom:20px;\"]);\n\nfunction movieSearch(props) {\n  const {\n    popularMovie\n  } = props;\n  console.log(popularMovie);\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MoiveSearchWrap, {\n      children: /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubSlideWrap, {\n      className: \"movie-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TitleOfList, {\n          children: \"\\uCD5C\\uC2E0 \\uC778\\uAE30 \\uC601\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"popular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), popularMovie && /*#__PURE__*/_jsxDEV(MovieInfoSlider, {\n          movieInfomation: popularMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  ;\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  const popularMovie = await getPopularMovieFromTMDB();\n  return {\n    props: {\n      popularMovie: popularMovie.results\n    }\n  };\n});\nexport default movieSearch;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch.js"],"names":["React","styled","axios","END","wrapper","SubPageLayout","MovieInfoSlider","SearchForm","getPopularMovieFromTMDB","LOAD_MY_INFO_REQUEST","MoiveSearchWrap","div","SubSlideWrap","TitleOfList","movieSearch","props","popularMovie","console","log","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,SAASC,uBAAT,QAAwC,WAAxC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,MAAMC,eAAe,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,wEAArB;AAOA,MAAMC,YAAY,GAAGX,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,sKAAlB;AAeA,MAAME,WAAW,GAAGZ,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,0CAAjB;;AAKA,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAGA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,eAAD;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,YAAxB;AAAA,6BACI;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKMA,YAAY,iBAEN,QAAC,eAAD;AAAiB,UAAA,eAAe,EAAEA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;AAAA;AAED,OAAO,MAAMG,kBAAkB,GAAGf,OAAO,CAACe,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAnB,EAAAA,KAAK,CAACsB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBnB,IAAAA,KAAK,CAACsB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAAA;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEnB;AADa,GAAvB;AAGAW,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBxB,GAAvB;AACA,QAAMiB,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AAEA,QAAMd,YAAY,GAAG,MAAMR,uBAAuB,EAAlD;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAEA,YAAY,CAACe;AADtB;AADF,GAAP;AAKH,CAnBiC,CAA3B;AAqBP,eAAejB,WAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport SubPageLayout from '../components/Layout/SubPageLayout';\r\nimport MovieInfoSlider from '../components/Slider/MovieInfoSlider';\r\nimport SearchForm from '../components/Form/SearchForm';\r\n\r\nimport { getPopularMovieFromTMDB } from './api/api';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nconst MoiveSearchWrap = styled.div`\r\n    position: absolute;\r\n    top: 48px;\r\n    left: 60%;\r\n    transform: translate(-60%, 0);\r\n`\r\n\r\nconst SubSlideWrap = styled.div`\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 60%;\r\n    transform: translate(-60%, 0);\r\n\r\n    @media screen and (max-width: 900px) {\r\n        width: 500px;\r\n        width: 100%;\r\n        left: 0px;\r\n    }\r\n`\r\n\r\nconst TitleOfList = styled.div`\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nfunction movieSearch(props) {\r\n    const { popularMovie } = props;\r\n    console.log(popularMovie);\r\n    \r\n    \r\n    return (\r\n        <SubPageLayout>\r\n            <MoiveSearchWrap>\r\n                <SearchForm />\r\n            </MoiveSearchWrap>\r\n            <SubSlideWrap className=\"movie-list\">\r\n                <div>\r\n                    <TitleOfList>최신 인기 영화</TitleOfList>\r\n                    <div>\r\n                        <div>popular</div>\r\n                    </div>\r\n                    { popularMovie &&\r\n                        (\r\n                            <MovieInfoSlider movieInfomation={popularMovie} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </SubSlideWrap>\r\n        </SubPageLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie; \r\n    };\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n\r\n    const popularMovie = await getPopularMovieFromTMDB();\r\n    \r\n    return {\r\n      props: { \r\n        popularMovie: popularMovie.results, \r\n      },\r\n    };\r\n});\r\n\r\nexport default movieSearch;"]},"metadata":{},"sourceType":"module"}