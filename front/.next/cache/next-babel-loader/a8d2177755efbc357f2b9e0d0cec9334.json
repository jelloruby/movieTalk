{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport MovieSlider from '../components/MovieSlider';\nimport MovieInfoData from '../json/movieInfo.json';\nimport { getMovieList, getMovieFromKMDB, getMovieSeqFromKMDB } from '../api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  var movieInfomation = MovieInfoData.movie.movieInfomation;\n\n  var _useState = useState([]),\n      boxofficeMovieNames = _useState[0],\n      setboxofficeMovieNames = _useState[1];\n\n  useEffect(function () {\n    var fetchMovieList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var boxofficeList, result2, movieSeq, res1, res2;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getMovieList();\n\n              case 2:\n                boxofficeList = _context.sent;\n                setboxofficeMovieNames(movieNameArray(boxofficeList.boxOfficeResult.dailyBoxOfficeList));\n                _context.next = 6;\n                return getMovieFromKMDB(\"미나리\");\n\n              case 6:\n                result2 = _context.sent;\n                movieSeq = \"50568\";\n                _context.next = 10;\n                return getMovieSeqFromKMDB(movieSeq);\n\n              case 10:\n                res1 = _context.sent;\n                console.log(result2);\n                console.log(res1.Data[0].Result);\n                _context.next = 15;\n                return axios.get(\"http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&ServiceKey=QXYS65CA4DKL68FJYGTF\");\n\n              case 15:\n                res2 = _context.sent;\n                console.log(res2);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchMovieList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchMovieList();\n  }, []);\n\n  var movieNameArray = function movieNameArray(list) {\n    var arr = [];\n\n    for (var i = 0; i < list.length; i++) {\n      arr.push(list[i].movieNm);\n    }\n\n    return arr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\uBC15\\uC2A4\\uC624\\uD53C\\uC2A4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieSlider, {\n      movieInfomation: movieInfomation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"KQkxOP8HHYdlFFRzIuk09WMsTvc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/index.js"],"names":["React","useState","useEffect","AppLayout","MovieSlider","MovieInfoData","getMovieList","getMovieFromKMDB","getMovieSeqFromKMDB","axios","Home","movieInfomation","movie","boxofficeMovieNames","setboxofficeMovieNames","fetchMovieList","boxofficeList","movieNameArray","boxOfficeResult","dailyBoxOfficeList","result2","movieSeq","res1","console","log","Data","Result","get","res2","list","arr","i","length","push","movieNm","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,mBAAzC,QAAoE,QAApE;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AAAA,MACJC,eADI,GACgBN,aAAa,CAACO,KAD9B,CACJD,eADI;;AAAA,kBAE0CV,QAAQ,CAAC,EAAD,CAFlD;AAAA,MAELY,mBAFK;AAAA,MAEgBC,sBAFhB;;AAIZZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMa,cAAc;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACST,YAAY,EADrB;;AAAA;AACbU,gBAAAA,aADa;AAEnBF,gBAAAA,sBAAsB,CAACG,cAAc,CAACD,aAAa,CAACE,eAAd,CAA8BC,kBAA/B,CAAf,CAAtB;AAFmB;AAAA,uBAGGZ,gBAAgB,CAAC,KAAD,CAHnB;;AAAA;AAGba,gBAAAA,OAHa;AAIbC,gBAAAA,QAJa,GAIF,OAJE;AAAA;AAAA,uBAKAb,mBAAmB,CAACa,QAAD,CALnB;;AAAA;AAKbC,gBAAAA,IALa;AAMnBC,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAU,CAAV,EAAaC,MAAzB;AAPmB;AAAA,uBAQAjB,KAAK,CAACkB,GAAN,qIARA;;AAAA;AAQbC,gBAAAA,IARa;AASnBL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAdb,cAAc;AAAA;AAAA;AAAA,OAApB;;AAWAA,IAAAA,cAAc;AACjB,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACY,IAAD,EAAU;AAC7B,QAAIC,GAAG,GAAG,EAAV;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,IAAI,CAACG,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7BD,MAAAA,GAAG,CAACG,IAAJ,CAASJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,OAAjB;AACH;;AACD,WAAOJ,GAAP;AACH,GAPD;;AASA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,eAAe,EAAExB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAlCQD,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport AppLayout from '../components/AppLayout'\r\nimport MovieSlider from '../components/MovieSlider'\r\n\r\nimport MovieInfoData from '../json/movieInfo.json'\r\n\r\nimport { getMovieList, getMovieFromKMDB, getMovieSeqFromKMDB } from '../api'\r\n\r\nimport axios from 'axios'\r\nfunction Home() {\r\n    const { movieInfomation } = MovieInfoData.movie\r\n    const [boxofficeMovieNames, setboxofficeMovieNames] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchMovieList = async () => {\r\n            const boxofficeList = await getMovieList();\r\n            setboxofficeMovieNames(movieNameArray(boxofficeList.boxOfficeResult.dailyBoxOfficeList));\r\n            const result2 = await getMovieFromKMDB(\"미나리\");\r\n            const movieSeq = \"50568\";\r\n            const res1 = await getMovieSeqFromKMDB(movieSeq);\r\n            console.log(result2);\r\n            console.log(res1.Data[0].Result);\r\n            const res2 = await axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&ServiceKey=QXYS65CA4DKL68FJYGTF`)\r\n            console.log(res2);\r\n        }\r\n        fetchMovieList();\r\n    }, [])\r\n\r\n    const movieNameArray = (list) => {\r\n        var arr = [];\r\n        \r\n        for(let i=0; i<list.length; i++) {\r\n            arr.push(list[i].movieNm)\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <h2 style={{ textAlign: 'center' }}>박스오피스</h2>\r\n            <MovieSlider movieInfomation={movieInfomation} />\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}