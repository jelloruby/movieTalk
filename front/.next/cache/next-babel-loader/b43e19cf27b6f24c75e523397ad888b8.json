{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, MODIFY_REVIEW_REQUEST, MODIFY_REVIEW_SUCCESS, MODIFY_REVIEW_FAILURE, LOAD_REVIEW_REQUEST, LOAD_REVIEW_SUCCESS, LOAD_REVIEW_FAILURE, LOAD_MY_REVIEWS_REQUEST, LOAD_MY_REVIEWS_SUCCESS, LOAD_MY_REVIEWS_FAILURE, LOAD_MORE_MY_REVIEWS_REQUEST, LOAD_MORE_MY_REVIEWS_SUCCESS, LOAD_MORE_MY_REVIEWS_FAILURE, LOAD_ALL_REVIEWS_REQUEST, LOAD_ALL_REVIEWS_SUCCESS, LOAD_ALL_REVIEWS_FAILURE, LIKE_REVIEW_REQUEST, LIKE_REVIEW_SUCCESS, LIKE_REVIEW_FAILURE, UNLIKE_REVIEW_REQUEST, UNLIKE_REVIEW_SUCCESS, UNLIKE_REVIEW_FAILURE } from '../reducers/review';\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction* addReview(action) {\n  try {\n    yield call(addReviewAPI, action.data);\n    console.log('saga ADD_REVIEW');\n    yield put({\n      type: ADD_REVIEW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction modifyReviewAPI(data) {\n  return axios.post('/review/edit', data);\n}\n\nfunction* modifyReview(action) {\n  try {\n    yield call(modifyReviewAPI, action.data);\n    console.log('saga MODIFY_REVIEW');\n    yield put({\n      type: MODIFY_REVIEW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: MODIFY_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadReviewAPI(data) {\n  return axios.get(`/review/${data.writerId}/${data.movieId}`);\n}\n\nfunction* loadReview(action) {\n  try {\n    const result = yield call(loadReviewAPI, action.data);\n    console.log('saga LOAD_REVIEW');\n    yield put({\n      type: LOAD_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMyReviewsAPI(data) {\n  return axios.get(`/review/${data}`);\n}\n\nfunction* loadMyReviews(action) {\n  try {\n    const result = yield call(loadMyReviewsAPI, action.data);\n    console.log('saga LOAD_MY_REVIEWS');\n    yield put({\n      type: LOAD_MY_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMoreMyReviewsAPI(data) {\n  return axios.post(`/review/${data.userId}`, data);\n}\n\nfunction* loadMoreMyReviews(action) {\n  try {\n    const result = yield call(loadMoreMyReviewsAPI, action.data);\n    console.log('saga LOAD_MY_REVIEWS');\n    yield put({\n      type: LOAD_MORE_MY_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MORE_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadAllReviewsAPI(data) {\n  return axios.post('/reviews', data);\n}\n\nfunction* loadAllReviews(action) {\n  try {\n    const result = yield call(loadAllReviewsAPI, action.data);\n    console.log('saga LOAD_ALL_REVIEWS');\n    yield put({\n      type: LOAD_ALL_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_ALL_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likeReviewAPI(data) {\n  return axios.post(`/review/like`, data);\n}\n\nfunction* likeReview(action) {\n  try {\n    const result = yield call(likeReviewAPI, action.data);\n    console.log('saga LIKE_REVIEW');\n    yield put({\n      type: LIKE_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unLikeReviewAPI(data) {\n  return axios.post(`/review/dislike`, data);\n}\n\nfunction* unLikeReview(action) {\n  try {\n    const result = yield call(unLikeReviewAPI, action.data);\n    console.log('saga UNLIKE_REVIEW');\n    yield put({\n      type: UNLIKE_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddReview() {\n  yield takeLatest(ADD_REVIEW_REQUEST, addReview);\n}\n\nfunction* watchModifyReview() {\n  yield takeLatest(MODIFY_REVIEW_REQUEST, modifyReview);\n}\n\nfunction* watchLoadReview() {\n  yield takeLatest(LOAD_REVIEW_REQUEST, loadReview);\n}\n\nfunction* watchMyReviews() {\n  yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\n}\n\nfunction* watchLoadMyReviews() {\n  yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\n}\n\nfunction* watchAllReviews() {\n  yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\n}\n\nfunction* watchLikeReview() {\n  yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\n}\n\nfunction* watchUnLikeReview() {\n  yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchAddReview), fork(watchModifyReview), fork(watchLoadReview), fork(watchMyReviews), fork(watchLoadMyReviews), fork(watchAllReviews), fork(watchLikeReview), fork(watchUnLikeReview)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["axios","all","fork","call","put","takeLatest","throttle","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","MODIFY_REVIEW_REQUEST","MODIFY_REVIEW_SUCCESS","MODIFY_REVIEW_FAILURE","LOAD_REVIEW_REQUEST","LOAD_REVIEW_SUCCESS","LOAD_REVIEW_FAILURE","LOAD_MY_REVIEWS_REQUEST","LOAD_MY_REVIEWS_SUCCESS","LOAD_MY_REVIEWS_FAILURE","LOAD_MORE_MY_REVIEWS_REQUEST","LOAD_MORE_MY_REVIEWS_SUCCESS","LOAD_MORE_MY_REVIEWS_FAILURE","LOAD_ALL_REVIEWS_REQUEST","LOAD_ALL_REVIEWS_SUCCESS","LOAD_ALL_REVIEWS_FAILURE","LIKE_REVIEW_REQUEST","LIKE_REVIEW_SUCCESS","LIKE_REVIEW_FAILURE","UNLIKE_REVIEW_REQUEST","UNLIKE_REVIEW_SUCCESS","UNLIKE_REVIEW_FAILURE","addReviewAPI","data","post","addReview","action","console","log","type","err","response","modifyReviewAPI","modifyReview","loadReviewAPI","get","writerId","movieId","loadReview","result","loadMyReviewsAPI","loadMyReviews","loadMoreMyReviewsAPI","userId","loadMoreMyReviews","loadAllReviewsAPI","loadAllReviews","likeReviewAPI","likeReview","unLikeReviewAPI","unLikeReview","watchAddReview","watchModifyReview","watchLoadReview","watchMyReviews","watchLoadMyReviews","watchAllReviews","watchLikeReview","watchUnLikeReview","reviewSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,oBAA3D;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,qBANJ,EAOIC,mBAPJ,EAQIC,mBARJ,EASIC,mBATJ,EAUIC,uBAVJ,EAWIC,uBAXJ,EAYIC,uBAZJ,EAaIC,4BAbJ,EAcIC,4BAdJ,EAeIC,4BAfJ,EAgBIC,wBAhBJ,EAiBIC,wBAjBJ,EAkBIC,wBAlBJ,EAmBIC,mBAnBJ,EAoBIC,mBApBJ,EAqBIC,mBArBJ,EAsBIC,qBAtBJ,EAuBIC,qBAvBJ,EAwBIC,qBAxBJ,QA0BO,oBA1BP;;AA+BA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,SAAOhC,KAAK,CAACiC,IAAN,CAAW,SAAX,EAAsBD,IAAtB,CAAP;AACH;;AAED,UAAUE,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAI;AACA,UAAMhC,IAAI,CAAC4B,YAAD,EAAeI,MAAM,CAACH,IAAtB,CAAV;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAE9B;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAM+B,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAE7B,kBADA;AAENuB,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASS,eAAT,CAAyBT,IAAzB,EAA+B;AAC3B,SAAOhC,KAAK,CAACiC,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACH;;AAED,UAAUU,YAAV,CAAuBP,MAAvB,EAA+B;AAC3B,MAAI;AACA,UAAMhC,IAAI,CAACsC,eAAD,EAAkBN,MAAM,CAACH,IAAzB,CAAV;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAE3B;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAM4B,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAE1B,qBADA;AAENoB,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASW,aAAT,CAAuBX,IAAvB,EAA6B;AACzB,SAAOhC,KAAK,CAAC4C,GAAN,CAAW,WAAUZ,IAAI,CAACa,QAAS,IAAGb,IAAI,CAACc,OAAQ,EAAnD,CAAP;AACH;;AAED,UAAUC,UAAV,CAAqBZ,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMa,MAAM,GAAG,MAAM7C,IAAI,CAACwC,aAAD,EAAgBR,MAAM,CAACH,IAAvB,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAExB,mBADA;AAENkB,MAAAA,IAAI,EAAEgB,MAAM,CAAChB;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEvB,mBADA;AAENiB,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASiB,gBAAT,CAA0BjB,IAA1B,EAAgC;AAC5B,SAAOhC,KAAK,CAAC4C,GAAN,CAAW,WAAUZ,IAAK,EAA1B,CAAP;AACH;;AAED,UAAUkB,aAAV,CAAwBf,MAAxB,EAAgC;AAC5B,MAAI;AACA,UAAMa,MAAM,GAAG,MAAM7C,IAAI,CAAC8C,gBAAD,EAAmBd,MAAM,CAACH,IAA1B,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAErB,uBADA;AAENe,MAAAA,IAAI,EAAEgB,MAAM,CAAChB;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEpB,uBADA;AAENc,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASmB,oBAAT,CAA8BnB,IAA9B,EAAoC;AAChC,SAAOhC,KAAK,CAACiC,IAAN,CAAY,WAAUD,IAAI,CAACoB,MAAO,EAAlC,EAAqCpB,IAArC,CAAP;AACH;;AAED,UAAUqB,iBAAV,CAA4BlB,MAA5B,EAAoC;AAChC,MAAI;AACA,UAAMa,MAAM,GAAG,MAAM7C,IAAI,CAACgD,oBAAD,EAAuBhB,MAAM,CAACH,IAA9B,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAElB,4BADA;AAENY,MAAAA,IAAI,EAAEgB,MAAM,CAAChB;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEjB,4BADA;AAENW,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASsB,iBAAT,CAA2BtB,IAA3B,EAAiC;AAC7B,SAAOhC,KAAK,CAACiC,IAAN,CAAW,UAAX,EAAuBD,IAAvB,CAAP;AACH;;AAED,UAAUuB,cAAV,CAAyBpB,MAAzB,EAAiC;AAC7B,MAAI;AACA,UAAMa,MAAM,GAAG,MAAM7C,IAAI,CAACmD,iBAAD,EAAoBnB,MAAM,CAACH,IAA3B,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEf,wBADA;AAENS,MAAAA,IAAI,EAAEgB,MAAM,CAAChB;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEd,wBADA;AAENQ,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASwB,aAAT,CAAuBxB,IAAvB,EAA6B;AACzB,SAAOhC,KAAK,CAACiC,IAAN,CAAY,cAAZ,EAA2BD,IAA3B,CAAP;AACH;;AAED,UAAUyB,UAAV,CAAqBtB,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMa,MAAM,GAAI,MAAM7C,IAAI,CAACqD,aAAD,EAAgBrB,MAAM,CAACH,IAAvB,CAA1B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEZ,mBADA;AAENM,MAAAA,IAAI,EAAEgB,MAAM,CAAChB;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAEX,mBADA;AAENK,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAAS0B,eAAT,CAAyB1B,IAAzB,EAA+B;AAC3B,SAAOhC,KAAK,CAACiC,IAAN,CAAY,iBAAZ,EAA8BD,IAA9B,CAAP;AACH;;AAED,UAAU2B,YAAV,CAAuBxB,MAAvB,EAA+B;AAC3B,MAAI;AACA,UAAMa,MAAM,GAAG,MAAM7C,IAAI,CAACuD,eAAD,EAAkBvB,MAAM,CAACH,IAAzB,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAMjC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAET,qBADA;AAENG,MAAAA,IAAI,EAAEgB,MAAM,CAAChB;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAW;AACT,UAAMnC,GAAG,CAAC;AACNkC,MAAAA,IAAI,EAAER,qBADA;AAENE,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAID,UAAU4B,cAAV,GAA2B;AACvB,QAAMvD,UAAU,CAACE,kBAAD,EAAqB2B,SAArB,CAAhB;AACH;;AAED,UAAU2B,iBAAV,GAA8B;AAC1B,QAAMxD,UAAU,CAACK,qBAAD,EAAwBgC,YAAxB,CAAhB;AACH;;AAED,UAAUoB,eAAV,GAA4B;AACxB,QAAMzD,UAAU,CAACQ,mBAAD,EAAsBkC,UAAtB,CAAhB;AACH;;AAED,UAAUgB,cAAV,GAA2B;AACvB,QAAM1D,UAAU,CAACW,uBAAD,EAA0BkC,aAA1B,CAAhB;AACH;;AAED,UAAUc,kBAAV,GAA+B;AAC3B,QAAM3D,UAAU,CAACc,4BAAD,EAA+BkC,iBAA/B,CAAhB;AACH;;AAED,UAAUY,eAAV,GAA4B;AACxB,QAAM3D,QAAQ,CAAC,IAAD,EAAOgB,wBAAP,EAAiCiC,cAAjC,CAAd;AACH;;AAED,UAAUW,eAAV,GAA4B;AACxB,QAAM7D,UAAU,CAACoB,mBAAD,EAAsBgC,UAAtB,CAAhB;AACH;;AAED,UAAUU,iBAAV,GAA8B;AAC1B,QAAM9D,UAAU,CAACuB,qBAAD,EAAwB+B,YAAxB,CAAhB;AACH;;AAID,eAAe,UAAUS,UAAV,GAAuB;AAClC,QAAMnE,GAAG,CAAC,CACRC,IAAI,CAAC0D,cAAD,CADI,EAER1D,IAAI,CAAC2D,iBAAD,CAFI,EAGR3D,IAAI,CAAC4D,eAAD,CAHI,EAIR5D,IAAI,CAAC6D,cAAD,CAJI,EAKR7D,IAAI,CAAC8D,kBAAD,CALI,EAMR9D,IAAI,CAAC+D,eAAD,CANI,EAOR/D,IAAI,CAACgE,eAAD,CAPI,EAQRhE,IAAI,CAACiE,iBAAD,CARI,CAAD,CAAT;AAWH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    MODIFY_REVIEW_REQUEST,\r\n    MODIFY_REVIEW_SUCCESS,\r\n    MODIFY_REVIEW_FAILURE,\r\n    LOAD_REVIEW_REQUEST,\r\n    LOAD_REVIEW_SUCCESS,\r\n    LOAD_REVIEW_FAILURE,\r\n    LOAD_MY_REVIEWS_REQUEST,\r\n    LOAD_MY_REVIEWS_SUCCESS,\r\n    LOAD_MY_REVIEWS_FAILURE,\r\n    LOAD_MORE_MY_REVIEWS_REQUEST,\r\n    LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n    LOAD_MORE_MY_REVIEWS_FAILURE,\r\n    LOAD_ALL_REVIEWS_REQUEST,\r\n    LOAD_ALL_REVIEWS_SUCCESS,\r\n    LOAD_ALL_REVIEWS_FAILURE,\r\n    LIKE_REVIEW_REQUEST,\r\n    LIKE_REVIEW_SUCCESS,\r\n    LIKE_REVIEW_FAILURE,\r\n    UNLIKE_REVIEW_REQUEST,\r\n    UNLIKE_REVIEW_SUCCESS,\r\n    UNLIKE_REVIEW_FAILURE,\r\n    \r\n} from '../reducers/review';\r\n\r\n\r\n\r\n\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction* addReview(action) {\r\n    try {\r\n        yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction modifyReviewAPI(data) {\r\n    return axios.post('/review/edit', data)\r\n}\r\n\r\nfunction* modifyReview(action) {\r\n    try {\r\n        yield call(modifyReviewAPI, action.data)\r\n        console.log('saga MODIFY_REVIEW');  \r\n        yield put({\r\n            type: MODIFY_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: MODIFY_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadReviewAPI(data) {\r\n    return axios.get(`/review/${data.writerId}/${data.movieId}`)\r\n}\r\n\r\nfunction* loadReview(action) {\r\n    try {\r\n        const result = yield call(loadReviewAPI, action.data)\r\n        console.log('saga LOAD_REVIEW');\r\n        yield put({\r\n            type: LOAD_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyReviewsAPI(data) {\r\n    return axios.get(`/review/${data}`)\r\n}\r\n\r\nfunction* loadMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMoreMyReviewsAPI(data) {\r\n    return axios.post(`/review/${data.userId}`, data)\r\n}\r\n\r\nfunction* loadMoreMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMoreMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadAllReviewsAPI(data) {\r\n    return axios.post('/reviews', data)\r\n}\r\n\r\nfunction* loadAllReviews(action) {\r\n    try {\r\n        const result = yield call(loadAllReviewsAPI, action.data)\r\n        console.log('saga LOAD_ALL_REVIEWS');\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction likeReviewAPI(data) {\r\n    return axios.post(`/review/like`, data)\r\n}\r\n\r\nfunction* likeReview(action) {\r\n    try {\r\n        const result =  yield call(likeReviewAPI, action.data)\r\n        console.log('saga LIKE_REVIEW');\r\n        yield put({\r\n            type: LIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikeReviewAPI(data) {\r\n    return axios.post(`/review/dislike`, data)\r\n}\r\n\r\nfunction* unLikeReview(action) {\r\n    try {\r\n        const result = yield call(unLikeReviewAPI, action.data)\r\n        console.log('saga UNLIKE_REVIEW');\r\n        yield put({\r\n            type: UNLIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: UNLIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchAddReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchModifyReview() {\r\n    yield takeLatest(MODIFY_REVIEW_REQUEST, modifyReview);\r\n}\r\n\r\nfunction* watchLoadReview() {\r\n    yield takeLatest(LOAD_REVIEW_REQUEST, loadReview);\r\n}\r\n\r\nfunction* watchMyReviews() {\r\n    yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\r\n}\r\n\r\nfunction* watchLoadMyReviews() {\r\n    yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\r\n}\r\n\r\nfunction* watchAllReviews() {\r\n    yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\r\n}\r\n\r\nfunction* watchLikeReview() {\r\n    yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\r\n}\r\n\r\nfunction* watchUnLikeReview() {\r\n    yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\r\n}\r\n\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchAddReview),\r\n      fork(watchModifyReview),\r\n      fork(watchLoadReview),\r\n      fork(watchMyReviews),\r\n      fork(watchLoadMyReviews),\r\n      fork(watchAllReviews),\r\n      fork(watchLikeReview),\r\n      fork(watchUnLikeReview),\r\n      \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}