{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieTalk.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport SubPageLayout from '../components/layout/MainPageLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_ALL_REVIEWS_REQUEST } from '../reducers/review';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction movieTalk() {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: \"\\uBB34\\uBE44\\uD1A1\\uD398\\uC774\\uC9C0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  ;\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_ALL_REVIEWS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default movieTalk;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieTalk.js"],"names":["React","useDispatch","axios","END","wrapper","SubPageLayout","LOAD_MY_INFO_REQUEST","LOAD_ALL_REVIEWS_REQUEST","movieTalk","dispatch","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,wBAAT,QAAyC,oBAAzC;;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,sBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAAA;AAED,OAAO,MAAMS,kBAAkB,GAAGN,OAAO,CAACM,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAV,EAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBV,IAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAAA;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcR,QAAd,CAAuB;AACnBS,IAAAA,IAAI,EAAEZ;AADa,GAAvB;AAGAK,EAAAA,OAAO,CAACM,KAAR,CAAcR,QAAd,CAAuB;AACnBS,IAAAA,IAAI,EAAEX;AADa,GAAvB;AAGAI,EAAAA,OAAO,CAACM,KAAR,CAAcR,QAAd,CAAuBN,GAAvB;AACA,QAAMQ,OAAO,CAACM,KAAR,CAAcE,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAdiC,CAA3B;AAiBP,eAAeZ,SAAf","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport SubPageLayout from '../components/layout/MainPageLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_ALL_REVIEWS_REQUEST } from '../reducers/review';\r\n\r\nfunction movieTalk() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            무비톡페이지\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    };\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_ALL_REVIEWS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\n\r\nexport default movieTalk;\r\n"]},"metadata":{},"sourceType":"module"}