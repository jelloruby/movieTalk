{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  loadMovieFromTMDBDone: false,\n  loadMovieFromTMDBError: null,\n  movieSearchResult: [],\n  pageNum: 0\n};\nexport var LOAD_MOVIE_FROM_TMDB_REQUEST = 'LOAD_MOVIE_FROM_TMDB_REQUEST';\nexport var LOAD_MOVIE_FROM_TMDB_SUCCESS = 'LOAD_MOVIE_FROM_TMDB_SUCCESS';\nexport var LOAD_MOVIE_FROM_TMDB_FAILURE = 'LOAD_MOVIE_FROM_TMDB_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_MOVIE_FROM_TMDB_REQUEST:\n      console.log('reducer LOAD_MOVIE_FROM_TMDB - REQUEST');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        loadMovieFromTMDBDone: false,\n        loadMovieFromTMDBError: null\n      });\n\n    case LOAD_MOVIE_FROM_TMDB_SUCCESS:\n      console.log('reducer LOAD_MOVIE_FROM_TMDB - SUCCESS');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        loadMovieFromTMDBDone: true,\n        movieSearchResult: [].concat(_toConsumableArray(state.movieSearchResult), _toConsumableArray(action.data))\n      });\n\n    case LOAD_MOVIE_FROM_TMDB_FAILURE:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        loadMovieFromTMDBError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/reducers/tmdb.js"],"names":["initialState","loadMovieFromTMDBDone","loadMovieFromTMDBError","movieSearchResult","pageNum","LOAD_MOVIE_FROM_TMDB_REQUEST","LOAD_MOVIE_FROM_TMDB_SUCCESS","LOAD_MOVIE_FROM_TMDB_FAILURE","reducer","state","action","type","console","log","data","error"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,qBAAqB,EAAE,KADC;AAExBC,EAAAA,sBAAsB,EAAE,IAFA;AAGxBC,EAAAA,iBAAiB,EAAE,EAHK;AAIxBC,EAAAA,OAAO,EAAE;AAJe,CAArB;AAOP,OAAO,IAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,IAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,IAAMC,4BAA4B,GAAG,8BAArC;;AAGP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,4BAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,aAAOJ,KAAK,mCACLA,KADK;AAERR,QAAAA,qBAAqB,EAAE,KAFf;AAGRC,QAAAA,sBAAsB,EAAE;AAHhB,QAAZ;;AAKJ,SAAKI,4BAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,aAAOJ,KAAK,mCACLA,KADK;AAERR,QAAAA,qBAAqB,EAAE,IAFf;AAGRE,QAAAA,iBAAiB,+BAAOM,KAAK,CAACN,iBAAb,sBAAmCO,MAAM,CAACI,IAA1C;AAHT,QAAZ;;AAKJ,SAAKP,4BAAL;AACI,aAAOE,KAAK,mCACLA,KADK;AAERP,QAAAA,sBAAsB,EAAEQ,MAAM,CAACK;AAFvB,QAAZ;;AAKJ;AACI,aAAON,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    loadMovieFromTMDBDone: false,\r\n    loadMovieFromTMDBError: null,\r\n    movieSearchResult: [],\r\n    pageNum: 0,\r\n};\r\n\r\nexport const LOAD_MOVIE_FROM_TMDB_REQUEST = 'LOAD_MOVIE_FROM_TMDB_REQUEST';\r\nexport const LOAD_MOVIE_FROM_TMDB_SUCCESS = 'LOAD_MOVIE_FROM_TMDB_SUCCESS';\r\nexport const LOAD_MOVIE_FROM_TMDB_FAILURE = 'LOAD_MOVIE_FROM_TMDB_FAILURE';\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_MOVIE_FROM_TMDB_REQUEST:\r\n            console.log('reducer LOAD_MOVIE_FROM_TMDB - REQUEST');\r\n            return state = {\r\n                ...state,\r\n                loadMovieFromTMDBDone: false,\r\n                loadMovieFromTMDBError: null,\r\n            }\r\n        case LOAD_MOVIE_FROM_TMDB_SUCCESS:\r\n            console.log('reducer LOAD_MOVIE_FROM_TMDB - SUCCESS');\r\n            return state = {\r\n                ...state,\r\n                loadMovieFromTMDBDone: true,\r\n                movieSearchResult: [ ...state.movieSearchResult, ...action.data ],\r\n            }\r\n        case LOAD_MOVIE_FROM_TMDB_FAILURE:\r\n            return state = {\r\n                ...state,\r\n                loadMovieFromTMDBError: action.error,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}