{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_SUCCESS } from '../reducers/user'; // api\n\nfunction loginAPI(data) {\n  return axios({\n    method: 'post',\n    url: '/user/login',\n    withCredentials: true,\n    data: data\n  });\n}\n\nfunction signUpAPI(data) {\n  return axios({\n    method: 'post',\n    url: '/user/signup',\n    withCredentials: true,\n    data: data\n  });\n}\n\nfunction logoutAPI() {\n  return axios({\n    method: 'post',\n    url: '/user/logout',\n    withCredentials: true\n  });\n}\n\nfunction loadMyInfoAPI() {\n  return axios({\n    method: 'get',\n    url: '/user'\n  });\n} // action - reducers\n\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log(result);\n          console.log('saga LOGIN');\n          _context.next = 8;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: LOG_IN_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          console.log('saga SIGN-UP');\n          console.log(result);\n          _context2.next = 8;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          console.log('saga LOGOUT');\n          _context3.next = 6;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log('saga LOAD_MY_INFO');\n          _context4.next = 7;\n          return put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put({\n            type: LOAD_MY_INFO_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n} // start function\n\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchLogIn), fork(watchSignUp), fork(watchLogOut), fork(watchLoadMyInfo)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/user.js"],"names":["logIn","signUp","logOut","loadMyInfo","watchLogIn","watchSignUp","watchLogOut","watchLoadMyInfo","userSaga","axios","all","fork","call","put","takeLatest","delay","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_SUCCESS","loginAPI","data","method","url","withCredentials","signUpAPI","logoutAPI","loadMyInfoAPI","action","result","console","log","type","response"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_SUCCESS,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_SUCCESS,\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_MY_INFO_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n\r\n\r\n// api\r\nfunction loginAPI(data) {\r\n    return axios({\r\n        method: 'post',\r\n        url: '/user/login',\r\n        withCredentials: true,\r\n        data: data\r\n    })\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios({\r\n        method: 'post',\r\n        url: '/user/signup',\r\n        withCredentials: true,\r\n        data: data\r\n    })\r\n}\r\n\r\nfunction logoutAPI() {\r\n    return axios({\r\n        method: 'post',\r\n        url: '/user/logout',\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios({\r\n        method: 'get',\r\n        url: '/user',\r\n    })\r\n}\r\n\r\n// action - reducers\r\nfunction* logIn(action) {\r\n    try {\r\n        const result =  yield call(loginAPI, action.data)\r\n        console.log(result);\r\n        console.log('saga LOGIN');\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result =  yield call(signUpAPI, action.data)\r\n        console.log('saga SIGN-UP'); \r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logoutAPI)\r\n        console.log('saga LOGOUT');\r\n\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        const result =  yield call(loadMyInfoAPI, action.data)\r\n        console.log('saga LOAD_MY_INFO'); \r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n// start function\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n      fork(watchLogIn),\r\n      fork(watchSignUp),\r\n      fork(watchLogOut),\r\n      fork(watchLoadMyInfo),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}