{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({});\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/reducers/index.js"],"names":["HYDRATE","combineReducers","rootReducer","state","action","type","payload","combinedReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,OAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AACF;AAAS;AACP,cAAMC,eAAe,GAAGN,eAAe,CAAC,EAAD,CAAvC;AAEA,eAAOM,eAAe,CAACJ,KAAD,EAAQC,MAAR,CAAtB;AACD;AAPH;AASD,CAVD;;AAYA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return action.payload;\r\n    default: {\r\n      const combinedReducer = combineReducers({\r\n      });\r\n      return combinedReducer(state, action);\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}