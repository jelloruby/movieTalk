{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport MovieInfoLink from '../components/MovieInfoLink';\nimport { getMovieFromTMDB } from './api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction movieSearch() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var _useState2 = useState(false),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState(false),\n      IsEmptymovieList = _useState3[0],\n      setIsEmptyMovieList = _useState3[1];\n\n  var handleInputValue = function handleInputValue(e) {\n    setInputValue(e.target.value);\n  };\n\n  var handleSubmitValue = function handleSubmitValue(e) {\n    e.preventDefault();\n\n    var fetchMovieList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fetchData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getMovieFromTMDB(inputValue);\n\n              case 2:\n                fetchData = _context.sent;\n                console.log(fetchData.results);\n\n                if (!fetchData.results) {\n                  setMovieList(undefined);\n                  setIsEmptyMovieList(true);\n                } else {\n                  setMovieList(fetchData.results);\n                  setIsEmptyMovieList(false);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchMovieList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchMovieList();\n  };\n\n  var replaceTitle = function replaceTitle(title) {\n    return title.replace(/!HS|!HE/g, \"\");\n  };\n\n  var imageURL = 'https://image.tmdb.org/t/p/w500/';\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitValue,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoSearchSharp, {\n          className: \"btn search-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [IsEmptymovieList && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC80\\uC0C9\\uD558\\uC2E0 \\uC601\\uD654\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), movieList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '80%',\n            margin: '0 auto',\n            marginTop: '2rem'\n          },\n          children: movieList.map(function (movieItem) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '210px',\n                margin: '0 1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(MovieInfoLink, {\n                id: movieItem.id,\n                src: \"\".concat(imageURL).concat(movieItem.poster_path),\n                koreanTitle: movieItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, _this)\n            }, movieItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(movieSearch, \"G6UFr7lQUHCEvjBAkYSMfEGk8rI=\");\n\n;\nexport default movieSearch;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch.js"],"names":["React","useState","AppLayout","IoSearchSharp","MovieInfoLink","getMovieFromTMDB","movieSearch","inputValue","setInputValue","movieList","setMovieList","IsEmptymovieList","setIsEmptyMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","fetchMovieList","fetchData","console","log","results","undefined","replaceTitle","title","replace","imageURL","textAlign","display","flexWrap","width","margin","marginTop","map","movieItem","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { IoSearchSharp } from \"react-icons/io5\";\r\n\r\nimport MovieInfoLink from '../components/MovieInfoLink'\r\nimport { getMovieFromTMDB } from './api/api';\r\n\r\nfunction movieSearch() {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [movieList, setMovieList] = useState(false);\r\n    const [IsEmptymovieList, setIsEmptyMovieList] = useState(false);\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getMovieFromTMDB(inputValue);\r\n            console.log(fetchData.results);\r\n            if(!fetchData.results) {\r\n                setMovieList(undefined);\r\n                setIsEmptyMovieList(true);\r\n            } else {\r\n                setMovieList(fetchData.results);\r\n                setIsEmptyMovieList(false);\r\n            }\r\n        }\r\n        fetchMovieList();\r\n    };\r\n    \r\n    const replaceTitle = (title) => {\r\n        return title.replace(/!HS|!HE/g, \"\");\r\n    };\r\n\r\n    const imageURL = 'https://image.tmdb.org/t/p/w500/'\r\n    \r\n    return (\r\n        <AppLayout>\r\n            <form onSubmit={handleSubmitValue} style={{ textAlign: 'center' }}>\r\n                <input placeholder=\"영화명을 입력해주세요.\" onChange={handleInputValue} />\r\n                <button type=\"submit\">\r\n                    <IoSearchSharp className=\"btn search-btn\" />\r\n                </button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    IsEmptymovieList && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                }\r\n                {\r\n                    movieList && (\r\n                        <>\r\n                            {/* <select>\r\n                                <option>정확도</option>\r\n                            </select> */}\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', width: '80%', margin: '0 auto', marginTop: '2rem' }}>\r\n                            {\r\n                                movieList.map(movieItem => (\r\n                                    <div key={movieItem.id} style={{ width: '210px', margin: '0 1rem' }}>\r\n                                        <MovieInfoLink\r\n                                            id={movieItem.id}\r\n                                            src={`${imageURL}${movieItem.poster_path}`}\r\n                                            koreanTitle={movieItem.title}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport default movieSearch;"]},"metadata":{},"sourceType":"module"}