{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, LOAD_REVIEW_REQUEST, LOAD_REVIEW_SUCCESS, LOAD_REVIEW_FAILURE, LOAD_MY_REVIEWS_REQUEST, LOAD_MY_REVIEWS_SUCCESS, LOAD_MY_REVIEWS_FAILURE, LOAD_MORE_MY_REVIEWS_REQUEST, LOAD_MORE_MY_REVIEWS_SUCCESS, LOAD_MORE_MY_REVIEWS_FAILURE, LOAD_ALL_REVIEWS_REQUEST, LOAD_ALL_REVIEWS_SUCCESS, LOAD_ALL_REVIEWS_FAILURE, LIKE_REVIEW_REQUEST, LIKE_REVIEW_SUCCESS, LIKE_REVIEW_FAILURE, UNLIKE_REVIEW_REQUEST, UNLIKE_REVIEW_SUCCESS, UNLIKE_REVIEW_FAILURE } from '../reducers/review';\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction* addReview(action) {\n  try {\n    yield call(addReviewAPI, action.data);\n    console.log('saga ADD_REVIEW');\n    yield put({\n      type: ADD_REVIEW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMyReviewsAPI(data) {\n  return axios.get(`/review/${data}`);\n}\n\nfunction* loadMyReviews(action) {\n  try {\n    const result = yield call(loadMyReviewsAPI, action.data);\n    console.log('saga LOAD_MY_REVIEWS');\n    yield put({\n      type: LOAD_MY_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMoreMyReviewsAPI(data) {\n  return axios.post(`/review/${data.userId}`, data);\n}\n\nfunction* loadMoreMyReviews(action) {\n  try {\n    const result = yield call(loadMoreMyReviewsAPI, action.data);\n    console.log('saga LOAD_MY_REVIEWS');\n    yield put({\n      type: LOAD_MORE_MY_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MORE_MY_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadAllReviewsAPI(data) {\n  return axios.post('/reviews', data);\n}\n\nfunction* loadAllReviews(action) {\n  try {\n    const result = yield call(loadAllReviewsAPI, action.data);\n    console.log('saga LOAD_ALL_REVIEWS');\n    yield put({\n      type: LOAD_ALL_REVIEWS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_ALL_REVIEWS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likeReviewAPI(data) {\n  return axios.post(`/review/like`, data);\n}\n\nfunction* likeReview(action) {\n  try {\n    const result = yield call(likeReviewAPI, action.data);\n    console.log('saga LIKE_REVIEW');\n    yield put({\n      type: LIKE_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unLikeReviewAPI(data) {\n  return axios.post(`/review/dislike`, data);\n}\n\nfunction* unLikeReview(action) {\n  try {\n    const result = yield call(unLikeReviewAPI, action.data);\n    console.log('saga UNLIKE_REVIEW');\n    yield put({\n      type: UNLIKE_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadReviewAPI(data) {\n  return axios.get(`/review/${data.writerId}/${data.movieId}`);\n}\n\nfunction* loadReview(action) {\n  try {\n    const result = yield call(loadReviewAPI, action.data);\n    console.log('saga LOAD_REVIEW');\n    yield put({\n      type: LOAD_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchReview() {\n  yield takeLatest(ADD_REVIEW_REQUEST, addReview);\n}\n\nfunction* watchMyReviews() {\n  yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\n}\n\nfunction* watchLoadMyReviews() {\n  yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\n}\n\nfunction* watchAllReviews() {\n  yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\n}\n\nfunction* watchLikeReview() {\n  yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\n}\n\nfunction* watchUnLikeReview() {\n  yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\n}\n\nfunction* watchLoadReview() {\n  yield takeLatest(LOAD_REVIEW_REQUEST, loadReview);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReview), fork(watchMyReviews), fork(watchLoadMyReviews), fork(watchAllReviews), fork(watchLikeReview), fork(watchUnLikeReview), fork(watchLoadReview)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["axios","all","fork","call","put","takeLatest","throttle","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","LOAD_REVIEW_REQUEST","LOAD_REVIEW_SUCCESS","LOAD_REVIEW_FAILURE","LOAD_MY_REVIEWS_REQUEST","LOAD_MY_REVIEWS_SUCCESS","LOAD_MY_REVIEWS_FAILURE","LOAD_MORE_MY_REVIEWS_REQUEST","LOAD_MORE_MY_REVIEWS_SUCCESS","LOAD_MORE_MY_REVIEWS_FAILURE","LOAD_ALL_REVIEWS_REQUEST","LOAD_ALL_REVIEWS_SUCCESS","LOAD_ALL_REVIEWS_FAILURE","LIKE_REVIEW_REQUEST","LIKE_REVIEW_SUCCESS","LIKE_REVIEW_FAILURE","UNLIKE_REVIEW_REQUEST","UNLIKE_REVIEW_SUCCESS","UNLIKE_REVIEW_FAILURE","addReviewAPI","data","post","addReview","action","console","log","type","err","response","loadMyReviewsAPI","get","loadMyReviews","result","loadMoreMyReviewsAPI","userId","loadMoreMyReviews","loadAllReviewsAPI","loadAllReviews","likeReviewAPI","likeReview","unLikeReviewAPI","unLikeReview","loadReviewAPI","writerId","movieId","loadReview","watchReview","watchMyReviews","watchLoadMyReviews","watchAllReviews","watchLikeReview","watchUnLikeReview","watchLoadReview","reviewSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    LOAD_REVIEW_REQUEST,\r\n    LOAD_REVIEW_SUCCESS,\r\n    LOAD_REVIEW_FAILURE,\r\n    LOAD_MY_REVIEWS_REQUEST,\r\n    LOAD_MY_REVIEWS_SUCCESS,\r\n    LOAD_MY_REVIEWS_FAILURE,\r\n    LOAD_MORE_MY_REVIEWS_REQUEST,\r\n    LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n    LOAD_MORE_MY_REVIEWS_FAILURE,\r\n    LOAD_ALL_REVIEWS_REQUEST,\r\n    LOAD_ALL_REVIEWS_SUCCESS,\r\n    LOAD_ALL_REVIEWS_FAILURE,\r\n    LIKE_REVIEW_REQUEST,\r\n    LIKE_REVIEW_SUCCESS,\r\n    LIKE_REVIEW_FAILURE,\r\n    UNLIKE_REVIEW_REQUEST,\r\n    UNLIKE_REVIEW_SUCCESS,\r\n    UNLIKE_REVIEW_FAILURE,\r\n} from '../reducers/review';\r\n\r\n\r\n\r\n\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction* addReview(action) {\r\n    try {\r\n        yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyReviewsAPI(data) {\r\n    return axios.get(`/review/${data}`)\r\n}\r\n\r\nfunction* loadMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMoreMyReviewsAPI(data) {\r\n    return axios.post(`/review/${data.userId}`, data)\r\n}\r\n\r\nfunction* loadMoreMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMoreMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadAllReviewsAPI(data) {\r\n    return axios.post('/reviews', data)\r\n}\r\n\r\nfunction* loadAllReviews(action) {\r\n    try {\r\n        const result = yield call(loadAllReviewsAPI, action.data)\r\n        console.log('saga LOAD_ALL_REVIEWS');\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction likeReviewAPI(data) {\r\n    return axios.post(`/review/like`, data)\r\n}\r\n\r\nfunction* likeReview(action) {\r\n    try {\r\n        const result =  yield call(likeReviewAPI, action.data)\r\n        console.log('saga LIKE_REVIEW');\r\n        yield put({\r\n            type: LIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikeReviewAPI(data) {\r\n    return axios.post(`/review/dislike`, data)\r\n}\r\n\r\nfunction* unLikeReview(action) {\r\n    try {\r\n        const result = yield call(unLikeReviewAPI, action.data)\r\n        console.log('saga UNLIKE_REVIEW');\r\n        yield put({\r\n            type: UNLIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: UNLIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadReviewAPI(data) {\r\n    return axios.get(`/review/${data.writerId}/${data.movieId}`)\r\n}\r\n\r\nfunction* loadReview(action) {\r\n    try {\r\n        const result = yield call(loadReviewAPI, action.data)\r\n        console.log('saga LOAD_REVIEW');\r\n        yield put({\r\n            type: LOAD_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchMyReviews() {\r\n    yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\r\n}\r\n\r\nfunction* watchLoadMyReviews() {\r\n    yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\r\n}\r\n\r\nfunction* watchAllReviews() {\r\n    yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\r\n}\r\n\r\nfunction* watchLikeReview() {\r\n    yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\r\n}\r\n\r\nfunction* watchUnLikeReview() {\r\n    yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\r\n}\r\n\r\nfunction* watchLoadReview() {\r\n    yield takeLatest(LOAD_REVIEW_REQUEST, loadReview);\r\n}\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n      fork(watchMyReviews),\r\n      fork(watchLoadMyReviews),\r\n      fork(watchAllReviews),\r\n      fork(watchLikeReview),\r\n      fork(watchUnLikeReview),\r\n      fork(watchLoadReview),\r\n      \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}