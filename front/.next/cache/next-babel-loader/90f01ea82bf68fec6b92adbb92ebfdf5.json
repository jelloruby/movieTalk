{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch\\\\[name].js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Router, { useRouter } from \"next/router\";\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport SubPageLayout from '../../components/layout/SubPageLayout';\nimport MovieInfoLink from '../../components/MovieInfoLink';\nimport { getMovieFromTMDB } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchInput = styled.input.withConfig({\n  displayName: \"name__SearchInput\",\n  componentId: \"irtilj-0\"\n})([\"width:250px;height:50px;margin:0 auto;text-align:center;border-radius:32px;border:none;\"]);\nconst MovieCardWrap = styled.div.withConfig({\n  displayName: \"name__MovieCardWrap\",\n  componentId: \"irtilj-1\"\n})([\"margin-left:5%;position:relative;top:128px;display:flex;flex-wrap:wrap;\"]);\n\nfunction MovieSearchPage(props) {\n  const router = useRouter();\n  const {\n    name\n  } = router.query;\n  const {\n    movieDetail\n  } = props;\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState(\"\");\n  useEffect(() => {\n    setMovieList(movieDetail);\n  }, []);\n\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitValue = e => {\n    e.preventDefault();\n    Router.push(`/movieSearch/${inputValue}`);\n  };\n\n  const handleLoadMoreMovie = async () => {\n    const moreMovie = await getMovieFromTMDB(name, `${CurrentPage + 1}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitValue,\n        style: {\n          textAlign: 'center',\n          position: 'absolute',\n          top: '40px',\n          left: '32px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n          placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          onChange: handleInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn search-btn\",\n          children: /*#__PURE__*/_jsxDEV(IoSearchSharp, {\n            style: {\n              color: 'white',\n              fontSize: '24px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), movieList.results && /*#__PURE__*/_jsxDEV(MovieCardWrap, {\n        children: movieList.results.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '210px',\n            margin: '0 16px'\n          },\n          children: /*#__PURE__*/_jsxDEV(MovieInfoLink, {\n            id: movieItem.id,\n            src: movieItem.poster_path,\n            koreanTitle: movieItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this)\n        }, movieItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMoreMovie,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getServerSideProps({\n  query\n}) {\n  const movieDetail = await getMovieFromTMDB(encodeURI(query.name), 1);\n  return {\n    props: {\n      movieDetail: movieDetail\n    }\n  };\n}\n;\nexport default MovieSearchPage;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch/[name].js"],"names":["React","useState","useEffect","styled","Router","useRouter","IoSearchSharp","SubPageLayout","MovieInfoLink","getMovieFromTMDB","SearchInput","input","MovieCardWrap","div","MovieSearchPage","props","router","name","query","movieDetail","inputValue","setInputValue","movieList","setMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","push","handleLoadMoreMovie","moreMovie","CurrentPage","position","textAlign","top","left","color","fontSize","results","map","movieItem","width","margin","id","poster_path","title","getServerSideProps","encodeURI"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { IoSearchSharp } from \"react-icons/io5\";\r\n\r\nimport SubPageLayout from '../../components/layout/SubPageLayout';\r\nimport MovieInfoLink from '../../components/MovieInfoLink'\r\n\r\nimport { getMovieFromTMDB } from '../api/api';\r\n\r\nconst SearchInput = styled.input`\r\n    width: 250px;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    border-radius: 32px;\r\n    border: none;\r\n`\r\n\r\nconst MovieCardWrap = styled.div`\r\n    margin-left: 5%;\r\n    position: relative;\r\n    top: 128px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nfunction MovieSearchPage(props) {\r\n    const router = useRouter();\r\n    const { name } = router.query;\r\n\r\n    const { movieDetail } = props;\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [movieList, setMovieList] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        setMovieList(movieDetail);\r\n    }, [])\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n        Router.push(`/movieSearch/${inputValue}`);\r\n    };\r\n\r\n    const handleLoadMoreMovie = async () => {\r\n        const moreMovie = await getMovieFromTMDB(name, `${CurrentPage + 1}`);\r\n    };\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <div style={{ position: 'relative' }}>\r\n                <form\r\n                    onSubmit={handleSubmitValue}\r\n                    style={{ textAlign: 'center', position: 'absolute', top: '40px', left: '32px' }}\r\n                >\r\n                    <SearchInput\r\n                        placeholder=\"영화명을 입력해주세요.\"\r\n                        onChange={handleInputValue}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn search-btn\">\r\n                        <IoSearchSharp style={{ color: 'white', fontSize: '24px' }} />\r\n                    </button>\r\n                </form>\r\n                {/* {\r\n                    !movieList.results[0] && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                } */}\r\n                {\r\n                    movieList.results && (\r\n                        <MovieCardWrap>\r\n                        {\r\n                            movieList.results.map(movieItem => (\r\n                                <div key={movieItem.id} style={{ width: '210px', margin: '0 16px' }}>\r\n                                    <MovieInfoLink\r\n                                        id={movieItem.id}\r\n                                        src={movieItem.poster_path}\r\n                                        koreanTitle={movieItem.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        </MovieCardWrap>\r\n                    )\r\n                }\r\n                <button onClick={handleLoadMoreMovie}>Load More</button>\r\n            </div>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieFromTMDB(encodeURI(query.name), 1);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n        },\r\n    }\r\n};\r\n\r\nexport default MovieSearchPage;\r\n"]},"metadata":{},"sourceType":"module"}