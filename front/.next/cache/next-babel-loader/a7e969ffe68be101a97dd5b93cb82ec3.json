{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { COMMENT_REQUEST, COMMENT_SUCCESS, COMMENT_FAILURE } from '../reducers/comment'; // api\n\nfunction addCommentAPI(data) {\n  return axios.post('/api/comment', data);\n} // action - reducers\n\n\nfunction* addComment(action) {\n  try {\n    // const result =  yield call(addCommentAPI, action.data)\n    console.log('saga addComment');\n    yield delay(1000);\n    yield put({\n      type: COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n} // start function\n\n\nfunction* watchComment() {\n  yield takeLatest(COMMENT_REQUEST, addComment);\n}\n\nexport default function* commentSaga() {\n  yield all([fork(watchComment)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/comment.js"],"names":["axios","all","fork","call","put","takeLatest","delay","COMMENT_REQUEST","COMMENT_SUCCESS","COMMENT_FAILURE","addCommentAPI","data","post","addComment","action","console","log","type","err","response","watchComment","commentSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SACIC,eADJ,EAEIC,eAFJ,EAGIC,eAHJ,QAIO,qBAJP,C,CAMA;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,SAAOX,KAAK,CAACY,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACH,C,CAGD;;;AACA,UAAUE,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAI;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAET,eADA;AAENG,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAMO,GAAN,EAAW;AACT,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAER,eADA;AAENE,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ,C,CAGD;;;AACA,UAAUS,YAAV,GAAyB;AACrB,QAAMf,UAAU,CAACE,eAAD,EAAkBM,UAAlB,CAAhB;AACH;;AAGD,eAAe,UAAUQ,WAAV,GAAwB;AACnC,QAAMpB,GAAG,CAAC,CACRC,IAAI,CAACkB,YAAD,CADI,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport {\r\n    COMMENT_REQUEST,\r\n    COMMENT_SUCCESS,\r\n    COMMENT_FAILURE\r\n} from '../reducers/comment';\r\n\r\n// api\r\nfunction addCommentAPI(data) {\r\n    return axios.post('/api/comment', data)\r\n}\r\n\r\n\r\n// action - reducers\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result =  yield call(addCommentAPI, action.data)\r\n        console.log('saga addComment');  \r\n        yield delay(1000);\r\n        yield put({\r\n            type: COMMENT_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// start function\r\nfunction* watchComment() {\r\n    yield takeLatest(COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* commentSaga() {\r\n    yield all([\r\n      fork(watchComment),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}