{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch\\\\[name].js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Router, { useRouter } from \"next/router\";\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport SubPageLayout from '../../components/Layout/SubPageLayout';\nimport MovieInfoLink from '../../components/MovieInfoLink';\nimport SearchForm from '../../components/Form/SearchForm';\nimport { getMovieFromTMDB } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCardWrap = styled.div.withConfig({\n  displayName: \"name__MovieCardWrap\",\n  componentId: \"irtilj-0\"\n})([\"margin-left:5%;position:relative;top:128px;display:flex;flex-wrap:wrap;\"]);\nconst MoiveSearchWrap = styled.div.withConfig({\n  displayName: \"name__MoiveSearchWrap\",\n  componentId: \"irtilj-1\"\n})([\"position:absolute;top:48px;left:50%;transform:translate(-50%,0);\"]);\n\nfunction MovieSearchPage(props) {\n  const router = useRouter();\n  const {\n    name\n  } = router.query;\n  const {\n    movieDetail\n  } = props;\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState([]);\n  const {\n    0: CurrentPage,\n    1: setCurrentPage\n  } = useState(1);\n\n  const handleLoadMoreMovie = async () => {\n    const movieFromTMDB = await getMovieFromTMDB(name, `${CurrentPage + 1}`);\n    const result = movieList.concat(movieFromTMDB.results);\n    setMovieList(result);\n    setCurrentPage(CurrentPage + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MoiveSearchWrap, {\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), movieDetail.results && /*#__PURE__*/_jsxDEV(MovieCardWrap, {\n        children: movieDetail.results.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '210px',\n            margin: '0 16px'\n          },\n          children: /*#__PURE__*/_jsxDEV(MovieInfoLink, {\n            id: movieItem.id,\n            src: movieItem.poster_path,\n            koreanTitle: movieItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this)\n        }, movieItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMoreMovie,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getServerSideProps({\n  query\n}) {\n  const movieDetail = await getMovieFromTMDB(encodeURI(query.name), 1);\n  return {\n    props: {\n      movieDetail: movieDetail\n    }\n  };\n}\n;\nexport default MovieSearchPage;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch/[name].js"],"names":["React","useState","styled","Router","useRouter","IoSearchSharp","SubPageLayout","MovieInfoLink","SearchForm","getMovieFromTMDB","MovieCardWrap","div","MoiveSearchWrap","MovieSearchPage","props","router","name","query","movieDetail","movieList","setMovieList","CurrentPage","setCurrentPage","handleLoadMoreMovie","movieFromTMDB","result","concat","results","position","map","movieItem","width","margin","id","poster_path","title","getServerSideProps","encodeURI"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,aAAa,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+EAAnB;AAQA,MAAMC,eAAe,GAAGV,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,wEAArB;;AAOA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,KAAxB;AAEA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACoB,WAAD;AAAA,OAAcC;AAAd,MAAgCrB,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMsB,mBAAmB,GAAG,YAAY;AACpC,UAAMC,aAAa,GAAG,MAAMf,gBAAgB,CAACO,IAAD,EAAQ,GAAEK,WAAW,GAAG,CAAE,EAA1B,CAA5C;AACA,UAAMI,MAAM,GAAGN,SAAS,CAACO,MAAV,CAAiBF,aAAa,CAACG,OAA/B,CAAf;AACAP,IAAAA,YAAY,CAACK,MAAD,CAAZ;AACAH,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH,GALD;;AAOA,sBACI,QAAC,aAAD;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,8BACI,QAAC,eAAD;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAUQV,WAAW,CAACS,OAAZ,iBACI,QAAC,aAAD;AAAA,kBAEIT,WAAW,CAACS,OAAZ,CAAoBE,GAApB,CAAwBC,SAAS,iBAC7B;AAAwB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE;AAA1B,WAA/B;AAAA,iCACI,QAAC,aAAD;AACI,YAAA,EAAE,EAAEF,SAAS,CAACG,EADlB;AAEI,YAAA,GAAG,EAAEH,SAAS,CAACI,WAFnB;AAGI,YAAA,WAAW,EAAEJ,SAAS,CAACK;AAH3B;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUL,SAAS,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXZ,eA0BI;AAAQ,QAAA,OAAO,EAAEV,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;AAAA;AAED,OAAO,eAAea,kBAAf,CAAkC;AAAEnB,EAAAA;AAAF,CAAlC,EAA6C;AAChD,QAAMC,WAAW,GAAG,MAAMT,gBAAgB,CAAC4B,SAAS,CAACpB,KAAK,CAACD,IAAP,CAAV,EAAwB,CAAxB,CAA1C;AAEA,SAAO;AACHF,IAAAA,KAAK,EAAE;AACHI,MAAAA,WAAW,EAAEA;AADV;AADJ,GAAP;AAKH;AAAA;AAED,eAAeL,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { IoSearchSharp } from \"react-icons/io5\";\r\n\r\nimport SubPageLayout from '../../components/Layout/SubPageLayout';\r\nimport MovieInfoLink from '../../components/MovieInfoLink'\r\nimport SearchForm from '../../components/Form/SearchForm';\r\n\r\nimport { getMovieFromTMDB } from '../api/api';\r\n\r\nconst MovieCardWrap = styled.div`\r\n    margin-left: 5%;\r\n    position: relative;\r\n    top: 128px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst MoiveSearchWrap = styled.div`\r\n    position: absolute;\r\n    top: 48px;\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n`\r\n\r\nfunction MovieSearchPage(props) {\r\n    const router = useRouter();\r\n    const { name } = router.query;\r\n    const { movieDetail } = props;\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [CurrentPage, setCurrentPage] = useState(1);\r\n    \r\n    const handleLoadMoreMovie = async () => {\r\n        const movieFromTMDB = await getMovieFromTMDB(name, `${CurrentPage + 1}`);\r\n        const result = movieList.concat(movieFromTMDB.results)\r\n        setMovieList(result);\r\n        setCurrentPage(CurrentPage + 1);\r\n    };\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <div style={{ position: 'relative' }}>\r\n                <MoiveSearchWrap>\r\n                    <SearchForm />\r\n                </MoiveSearchWrap>\r\n                {/* {\r\n                    !movieList.results[0] && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                } */}\r\n                {\r\n                    movieDetail.results && (\r\n                        <MovieCardWrap>\r\n                        {\r\n                            movieDetail.results.map(movieItem => (\r\n                                <div key={movieItem.id} style={{ width: '210px', margin: '0 16px' }}>\r\n                                    <MovieInfoLink\r\n                                        id={movieItem.id}\r\n                                        src={movieItem.poster_path}\r\n                                        koreanTitle={movieItem.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        </MovieCardWrap>\r\n                    )\r\n                }\r\n                <button onClick={handleLoadMoreMovie}>Load More</button>\r\n            </div>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieFromTMDB(encodeURI(query.name), 1);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n        },\r\n    }\r\n};\r\n\r\nexport default MovieSearchPage;\r\n"]},"metadata":{},"sourceType":"module"}