{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addReview),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyReviews),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadAllReviews),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(likeReview),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unLikeReview),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchReview),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchMyReviews),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchAllReviews),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikeReview),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLikeReview),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(reviewSaga);\n\nimport axios from 'axios';\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, LOAD_MY_REVIEWS_REQUEST, LOAD_MY_REVIEWS_SUCCESS, LOAD_MY_REVIEWS_FAILURE, LOAD_ALL_REVIEWS_REQUEST, LOAD_ALL_REVIEWS_SUCCESS, LOAD_ALL_REVIEWS_FAILURE, LIKE_REVIEW_REQUEST, LIKE_REVIEW_SUCCESS, LIKE_REVIEW_FAILURE, UNLIKE_REVIEW_REQUEST, UNLIKE_REVIEW_SUCCESS, UNLIKE_REVIEW_FAILURE } from '../reducers/review';\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction addReview(action) {\n  return _regeneratorRuntime.wrap(function addReview$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addReviewAPI, action.data);\n\n        case 3:\n          console.log('saga ADD_REVIEW');\n          _context.next = 6;\n          return put({\n            type: ADD_REVIEW_SUCCESS\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: ADD_REVIEW_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadMyReviewsAPI(data) {\n  return axios.get(\"/user/\".concat(data));\n}\n\nfunction loadMyReviews(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyReviews$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadMyReviewsAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          console.log('saga LOAD_MY_REVIEWS');\n          _context2.next = 7;\n          return put({\n            type: LOAD_MY_REVIEWS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_MY_REVIEWS_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction loadAllReviewsAPI(data) {\n  return axios.post('/reviews', data);\n}\n\nfunction loadAllReviews(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadAllReviews$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadAllReviewsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          console.log('saga LOAD_ALL_REVIEWS');\n          _context3.next = 7;\n          return put({\n            type: LOAD_ALL_REVIEWS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_ALL_REVIEWS_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction likeReviewAPI(data) {\n  return axios.post(\"/review/like\", data);\n}\n\nfunction likeReview(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likeReview$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(likeReviewAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log('saga LIKE_REVIEW');\n          _context4.next = 7;\n          return put({\n            type: LIKE_REVIEW_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put({\n            type: LIKE_REVIEW_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction unLikeReviewAPI(data) {\n  return axios.post(\"/review/dislike\", data);\n}\n\nfunction unLikeReview(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unLikeReview$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unLikeReviewAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('saga UNLIKE_REVIEW');\n          _context5.next = 7;\n          return put({\n            type: UNLIKE_REVIEW_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: UNLIKE_REVIEW_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchReview() {\n  return _regeneratorRuntime.wrap(function watchReview$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(ADD_REVIEW_REQUEST, addReview);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchMyReviews() {\n  return _regeneratorRuntime.wrap(function watchMyReviews$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchAllReviews() {\n  return _regeneratorRuntime.wrap(function watchAllReviews$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLikeReview() {\n  return _regeneratorRuntime.wrap(function watchLikeReview$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LIKE_REVIEW_REQUEST, likeReview);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchUnLikeReview() {\n  return _regeneratorRuntime.wrap(function watchUnLikeReview$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function reviewSaga() {\n  return _regeneratorRuntime.wrap(function reviewSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchReview), fork(watchMyReviews), fork(watchAllReviews), fork(watchLikeReview), fork(watchUnLikeReview)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["addReview","loadMyReviews","loadAllReviews","likeReview","unLikeReview","watchReview","watchMyReviews","watchAllReviews","watchLikeReview","watchUnLikeReview","reviewSaga","axios","all","fork","call","put","takeLatest","throttle","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","LOAD_MY_REVIEWS_REQUEST","LOAD_MY_REVIEWS_SUCCESS","LOAD_MY_REVIEWS_FAILURE","LOAD_ALL_REVIEWS_REQUEST","LOAD_ALL_REVIEWS_SUCCESS","LOAD_ALL_REVIEWS_FAILURE","LIKE_REVIEW_REQUEST","LIKE_REVIEW_SUCCESS","LIKE_REVIEW_FAILURE","UNLIKE_REVIEW_REQUEST","UNLIKE_REVIEW_SUCCESS","UNLIKE_REVIEW_FAILURE","addReviewAPI","data","post","action","console","log","type","response","loadMyReviewsAPI","get","result","loadAllReviewsAPI","likeReviewAPI","unLikeReviewAPI"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    LOAD_MY_REVIEWS_REQUEST,\r\n    LOAD_MY_REVIEWS_SUCCESS,\r\n    LOAD_MY_REVIEWS_FAILURE,\r\n    LOAD_ALL_REVIEWS_REQUEST,\r\n    LOAD_ALL_REVIEWS_SUCCESS,\r\n    LOAD_ALL_REVIEWS_FAILURE,\r\n    LIKE_REVIEW_REQUEST,\r\n    LIKE_REVIEW_SUCCESS,\r\n    LIKE_REVIEW_FAILURE,\r\n    UNLIKE_REVIEW_REQUEST,\r\n    UNLIKE_REVIEW_SUCCESS,\r\n    UNLIKE_REVIEW_FAILURE,\r\n} from '../reducers/review';\r\n\r\n\r\n\r\n\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction* addReview(action) {\r\n    try {\r\n        yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyReviewsAPI(data) {\r\n    return axios.get(`/user/${data}`)\r\n}\r\n\r\nfunction* loadMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadAllReviewsAPI(data) {\r\n    return axios.post('/reviews', data)\r\n}\r\n\r\nfunction* loadAllReviews(action) {\r\n    try {\r\n        const result = yield call(loadAllReviewsAPI, action.data)\r\n        console.log('saga LOAD_ALL_REVIEWS');\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction likeReviewAPI(data) {\r\n    return axios.post(`/review/like`, data)\r\n}\r\n\r\nfunction* likeReview(action) {\r\n    try {\r\n        const result =  yield call(likeReviewAPI, action.data)\r\n        console.log('saga LIKE_REVIEW');\r\n        yield put({\r\n            type: LIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikeReviewAPI(data) {\r\n    return axios.post(`/review/dislike`, data)\r\n}\r\n\r\nfunction* unLikeReview(action) {\r\n    try {\r\n        const result = yield call(unLikeReviewAPI, action.data)\r\n        console.log('saga UNLIKE_REVIEW');\r\n        yield put({\r\n            type: UNLIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: UNLIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchMyReviews() {\r\n    yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\r\n}\r\n\r\nfunction* watchAllReviews() {\r\n    yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\r\n}\r\n\r\nfunction* watchLikeReview() {\r\n    yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\r\n}\r\n\r\nfunction* watchUnLikeReview() {\r\n    yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\r\n}\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n      fork(watchMyReviews),\r\n      fork(watchAllReviews),\r\n      fork(watchLikeReview),\r\n      fork(watchUnLikeReview),\r\n    \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}