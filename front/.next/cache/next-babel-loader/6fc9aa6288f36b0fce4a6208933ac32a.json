{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_SUCCESS } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    console.log(result);\n    console.log('saga LOGIN');\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log('saga SIGN-UP');\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut() {\n  try {\n    yield call(logoutAPI);\n    console.log('saga LOGOUT');\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    console.log('saga LOAD_MY_INFO');\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchSignUp), fork(watchLogOut), fork(watchLoadMyInfo)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/user.js"],"names":["axios","all","fork","call","put","takeLatest","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_SUCCESS","loginAPI","data","post","logIn","action","result","console","log","type","err","response","signUpAPI","signUp","logoutAPI","logOut","loadMyInfoAPI","get","loadMyInfo","watchLogIn","watchSignUp","watchLogOut","watchLoadMyInfo","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_SUCCESS,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_SUCCESS,\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_MY_INFO_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n\r\n\r\nfunction loginAPI(data){\r\n    return axios.post('/user/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result =  yield call(loginAPI, action.data)\r\n        console.log(result);\r\n        console.log('saga LOGIN');\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data){\r\n    return axios.post('/user/signup', data)\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result =  yield call(signUpAPI, action.data)\r\n        console.log('saga SIGN-UP'); \r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction logoutAPI(){\r\n    return axios.post('/user/logout', data)\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logoutAPI)\r\n        console.log('saga LOGOUT');\r\n\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user')\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {\r\n        const result =  yield call(loadMyInfoAPI)\r\n        console.log('saga LOAD_MY_INFO'); \r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n      fork(watchLogIn),\r\n      fork(watchSignUp),\r\n      fork(watchLogOut),\r\n      fork(watchLoadMyInfo),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}