{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\index.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport MovieSlider from '../components/MovieSlider';\nimport { getMovieGenreFromKMDB } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState([]);\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState(false);\n  const {\n    0: IsEmptymovieList,\n    1: setIsEmptyMovieList\n  } = useState(false);\n  useEffect(() => {\n    const fetch = async () => {\n      const fetchData = await getMovieGenreFromKMDB(\"미스터리\");\n      console.log(fetchData);\n    };\n\n    fetch();\n  }, []);\n\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitValue = e => {\n    e.preventDefault();\n\n    const fetchMovieList = async () => {\n      const fetchData = await getMovieFromKMDB(inputValue);\n\n      if (!fetchData.Data[0].Result) {\n        setMovieList(undefined);\n        setIsEmptyMovieList(true);\n      } else {\n        setMovieList(fetchData.Data[0].Result);\n        setIsEmptyMovieList(false);\n      }\n    };\n\n    fetchMovieList();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '600px',\n        background: 'gray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"MovieTalk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitValue,\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          onChange: handleInputValue,\n          className: \"btn search-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/index.js"],"names":["axios","React","useState","useEffect","AppLayout","MovieSlider","getMovieGenreFromKMDB","Home","inputValue","setInputValue","movieList","setMovieList","IsEmptymovieList","setIsEmptyMovieList","fetch","fetchData","console","log","handleInputValue","e","target","value","handleSubmitValue","preventDefault","fetchMovieList","getMovieFromKMDB","Data","Result","undefined","height","background","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAASC,qBAAT,QAAsC,QAAtC;;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACU,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CX,QAAQ,CAAC,KAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,KAAK,GAAG,YAAY;AACtB,YAAMC,SAAS,GAAG,MAAMT,qBAAqB,CAAC,MAAD,CAA7C;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,KAHD;;AAIAD,IAAAA,KAAK;AACR,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,gBAAgB,GAAIC,CAAD,IAAO;AAC5BV,IAAAA,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACI,cAAF;;AACA,UAAMC,cAAc,GAAG,YAAY;AAC/B,YAAMT,SAAS,GAAG,MAAMU,gBAAgB,CAACjB,UAAD,CAAxC;;AACA,UAAG,CAACO,SAAS,CAACW,IAAV,CAAe,CAAf,EAAkBC,MAAtB,EAA8B;AAC1BhB,QAAAA,YAAY,CAACiB,SAAD,CAAZ;AACAf,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,OAHD,MAGO;AACHF,QAAAA,YAAY,CAACI,SAAS,CAACW,IAAV,CAAe,CAAf,EAAkBC,MAAnB,CAAZ;AACAd,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,KATD;;AAUAW,IAAAA,cAAc;AACjB,GAbD;;AAeA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAZ;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAET,iBAAhB;AAAmC,QAAA,KAAK,EAAE;AAAES,UAAAA,SAAS,EAAE;AAAb,SAA1C;AAAA,gCACI;AAAO,UAAA,WAAW,EAAC,gEAAnB;AAAkC,UAAA,QAAQ,EAAEb,gBAA5C;AAA8D,UAAA,SAAS,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;AAED,eAAeX,IAAf","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport AppLayout from '../components/AppLayout'\r\nimport MovieSlider from '../components/MovieSlider'\r\n\r\nimport { getMovieGenreFromKMDB } from '../api';\r\n\r\nfunction Home() {\r\n    const [inputValue, setInputValue] = useState([]);\r\n    const [movieList, setMovieList] = useState(false);\r\n    const [IsEmptymovieList, setIsEmptyMovieList] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            const fetchData = await getMovieGenreFromKMDB(\"미스터리\");\r\n            console.log(fetchData);\r\n        }\r\n        fetch()\r\n    }, [])\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getMovieFromKMDB(inputValue);\r\n            if(!fetchData.Data[0].Result) {\r\n                setMovieList(undefined);\r\n                setIsEmptyMovieList(true);\r\n            } else {\r\n                setMovieList(fetchData.Data[0].Result);\r\n                setIsEmptyMovieList(false);\r\n            }\r\n        }\r\n        fetchMovieList();\r\n    };\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div style={{ height: '600px', background: 'gray' }}>\r\n                <h2 style={{ textAlign: 'center' }}>MovieTalk</h2>\r\n                <form onSubmit={handleSubmitValue} style={{ textAlign: 'center' }}>\r\n                    <input placeholder=\"영화명을 입력해주세요.\" onChange={handleInputValue} className=\"btn search-btn\" />\r\n                    <button type=\"submit\">검색</button>\r\n                </form>\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}