{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch.js\";\nimport React, { useState, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\nimport MovieInfoLink from '../components/MovieInfoLink';\nimport { getMovieFromKMDB } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction movieSearch({\n  router\n}) {\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(\"\");\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState(false);\n  const {\n    0: IsEmptymovieList,\n    1: setIsEmptyMovieList\n  } = useState(false);\n\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitValue = e => {\n    e.preventDefault();\n    Router.push({\n      pathname: \"/movieSearch\",\n      query: {\n        value: inputValue\n      }\n    });\n\n    const fetchMovieList = async () => {\n      const fetchData = await getMovieFromKMDB(inputValue);\n\n      if (!fetchData.Data[0].Result) {\n        setMovieList(undefined);\n        setIsEmptyMovieList(true);\n      } else {\n        setMovieList(fetchData.Data[0].Result);\n        setIsEmptyMovieList(false);\n      }\n    };\n\n    fetchMovieList();\n  };\n\n  const replaceTitle = title => {\n    return title.replace(/!HS|!HE/g, \"\");\n  };\n\n  const splitPoster = posters => {\n    if (!posters) {\n      posters = \"https://res.cloudinary.com/dvmqbovxh/image/upload/v1616866172/noposter_pcwcby.png\";\n      return posters;\n    } else {\n      return posters.split(\"|\")[0];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitValue,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC601\\uD654\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleInputValue,\n        className: \"btn search-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [IsEmptymovieList && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC80\\uC0C9\\uD558\\uC2E0 \\uC601\\uD654\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), movieList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\uC815\\uD655\\uB3C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: movieList.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MovieInfoLink, {\n              movieSeq: movieItem.movieSeq,\n              src: splitPoster(movieItem.posters),\n              movieId: movieItem.movieId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: replaceTitle(movieItem.title)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 41\n            }, this)]\n          }, movieItem.movieSeq, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport default withRouter(movieSearch);","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch.js"],"names":["React","useState","useEffect","AppLayout","Router","withRouter","MovieInfoLink","getMovieFromKMDB","movieSearch","router","inputValue","setInputValue","movieList","setMovieList","IsEmptymovieList","setIsEmptyMovieList","handleInputValue","e","target","value","handleSubmitValue","preventDefault","push","pathname","query","fetchMovieList","fetchData","Data","Result","undefined","replaceTitle","title","replace","splitPoster","posters","split","textAlign","map","movieItem","movieSeq","movieId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport Router from 'next/router';\r\nimport { withRouter } from 'next/router';\r\n\r\nimport MovieInfoLink from '../components/MovieInfoLink'\r\nimport { getMovieFromKMDB } from '../api';\r\n\r\nfunction movieSearch({ router }) {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [movieList, setMovieList] = useState(false);\r\n    const [IsEmptymovieList, setIsEmptyMovieList] = useState(false);\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmitValue = (e) => {\r\n        e.preventDefault();\r\n        Router.push({\r\n            pathname: \"/movieSearch\",\r\n            query: { value: inputValue }\r\n        });\r\n        const fetchMovieList = async () => {\r\n            const fetchData = await getMovieFromKMDB(inputValue);\r\n            if(!fetchData.Data[0].Result) {\r\n                setMovieList(undefined);\r\n                setIsEmptyMovieList(true);\r\n            } else {\r\n                setMovieList(fetchData.Data[0].Result);\r\n                setIsEmptyMovieList(false);\r\n            }\r\n        }\r\n        fetchMovieList();\r\n    };\r\n    \r\n    const replaceTitle = (title) => {\r\n        return title.replace(/!HS|!HE/g, \"\");\r\n    };\r\n\r\n    const splitPoster = (posters) => {\r\n        if(!posters) {\r\n            posters = \"https://res.cloudinary.com/dvmqbovxh/image/upload/v1616866172/noposter_pcwcby.png\";\r\n            return posters;\r\n        } else {\r\n            return posters.split(\"|\")[0];\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <AppLayout>\r\n            <form onSubmit={handleSubmitValue} style={{ textAlign: 'center' }}>\r\n                <input placeholder=\"영화명을 입력해주세요.\" onChange={handleInputValue} className=\"btn search-btn\" />\r\n                <button type=\"submit\">검색</button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    IsEmptymovieList && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                }\r\n                {\r\n                    movieList && (\r\n                        <>\r\n                            <select>\r\n                                <option>정확도</option>\r\n                            </select>\r\n                            <div>\r\n                            {\r\n                                movieList.map(movieItem => (\r\n                                    <div key={movieItem.movieSeq}>\r\n                                        <MovieInfoLink\r\n                                            movieSeq={movieItem.movieSeq}\r\n                                            src={splitPoster(movieItem.posters)}\r\n                                            movieId={movieItem.movieId}\r\n                                        />\r\n                                        <div>{replaceTitle(movieItem.title)}</div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </div>  \r\n\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport default withRouter(movieSearch);"]},"metadata":{},"sourceType":"module"}