{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS } from '../reducers/user'; // api\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout', {\n    credentials: \"include\"\n  });\n} // action - reducers\n\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    console.log(result);\n    console.log('saga LOGIN');\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log('saga SIGN-UP');\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    yield call(logoutAPI);\n    console.log('saga LOGOUT');\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n} // start function\n\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchSignUp), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/user.js"],"names":["axios","all","fork","call","put","takeLatest","delay","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","loginAPI","data","post","signUpAPI","logoutAPI","credentials","logIn","action","result","console","log","type","err","response","signUp","logOut","watchLogIn","watchSignUp","watchLogOut","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_SUCCESS,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n\r\n\r\n// api\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data)\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data)\r\n}\r\n\r\nfunction logoutAPI() {\r\n    return axios.post('/user/logout', {\r\n        credentials: \"include\",\r\n    });\r\n}\r\n\r\n\r\n\r\n// action - reducers\r\nfunction* logIn(action) {\r\n    try {\r\n        const result =  yield call(loginAPI, action.data)\r\n        console.log(result);\r\n        console.log('saga LOGIN');\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result =  yield call(signUpAPI, action.data)\r\n        console.log('saga SIGN-UP'); \r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logoutAPI)\r\n        console.log('saga LOGOUT');\r\n\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// start function\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n      fork(watchLogIn),\r\n      fork(watchSignUp),\r\n      fork(watchLogOut),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}