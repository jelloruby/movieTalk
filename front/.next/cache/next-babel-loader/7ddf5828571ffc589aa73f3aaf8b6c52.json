{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, LOAD_ALL_REVIEW_REQUEST, LOAD_ALL_REVIEW_SUCCESS, LOAD_ALL_REVIEW_FAILURE } from '../reducers/review'; // api\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction loadAllReviewAPI() {\n  return axios.get('/review/all');\n} // action - reducers\n\n\nfunction* addReview(action) {\n  try {\n    const result = yield call(addReviewAPI, action.data);\n    console.log('saga ADD_REVIEW');\n    yield put({\n      type: ADD_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* loadAllReview() {\n  try {\n    const result = yield call(loadAllReviewAPI);\n    console.log('saga LOAD_ALL_REVIEW');\n    yield put({\n      type: LOAD_ALL_REVIEW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_ALL_REVIEW_FAILURE,\n      data: err.response.data\n    });\n  }\n} // start function\n\n\nfunction* watchReview() {\n  yield takeLatest(ADD_REVIEW_REQUEST, addReview);\n}\n\nfunction* watchLoadAllReview() {\n  yield takeLatest(LOAD_ALL_REVIEW_REQUEST, loadAllReview);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReview), fork(watchLoadAllReview)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["axios","all","fork","call","put","takeLatest","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","LOAD_ALL_REVIEW_REQUEST","LOAD_ALL_REVIEW_SUCCESS","LOAD_ALL_REVIEW_FAILURE","addReviewAPI","data","post","loadAllReviewAPI","get","addReview","action","result","console","log","type","err","response","loadAllReview","watchReview","watchLoadAllReview","reviewSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,uBANJ,QAOO,oBAPP,C,CASA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,SAAOb,KAAK,CAACc,IAAN,CAAW,SAAX,EAAsBD,IAAtB,CAAP;AACH;;AAED,SAASE,gBAAT,GAA4B;AACxB,SAAOf,KAAK,CAACgB,GAAN,CAAU,aAAV,CAAP;AACH,C,CAGD;;;AACA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAI;AACA,UAAMC,MAAM,GAAI,MAAMhB,IAAI,CAACS,YAAD,EAAeM,MAAM,CAACL,IAAtB,CAA1B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEf,kBADA;AAENM,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMU,GAAN,EAAW;AACT,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEd,kBADA;AAENK,MAAAA,IAAI,EAAEU,GAAG,CAACC,QAAJ,CAAaX;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUY,aAAV,GAA0B;AACtB,MAAI;AACA,UAAMN,MAAM,GAAI,MAAMhB,IAAI,CAACY,gBAAD,CAA1B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEZ,uBADA;AAENG,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMU,GAAN,EAAW;AACT,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEX,uBADA;AAENE,MAAAA,IAAI,EAAEU,GAAG,CAACC,QAAJ,CAAaX;AAFb,KAAD,CAAT;AAIH;AACJ,C,CAGD;;;AACA,UAAUa,WAAV,GAAwB;AACpB,QAAMrB,UAAU,CAACC,kBAAD,EAAqBW,SAArB,CAAhB;AACH;;AAED,UAAUU,kBAAV,GAA+B;AAC3B,QAAMtB,UAAU,CAACI,uBAAD,EAA0BgB,aAA1B,CAAhB;AACH;;AAED,eAAe,UAAUG,UAAV,GAAuB;AAClC,QAAM3B,GAAG,CAAC,CACRC,IAAI,CAACwB,WAAD,CADI,EAERxB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAKH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    LOAD_ALL_REVIEW_REQUEST,\r\n    LOAD_ALL_REVIEW_SUCCESS,\r\n    LOAD_ALL_REVIEW_FAILURE\r\n} from '../reducers/review';\r\n\r\n// api\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction loadAllReviewAPI() {\r\n    return axios.get('/review/all')\r\n}\r\n\r\n\r\n// action - reducers\r\nfunction* addReview(action) {\r\n    try {\r\n        const result =  yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* loadAllReview() {\r\n    try {\r\n        const result =  yield call(loadAllReviewAPI)\r\n        console.log('saga LOAD_ALL_REVIEW');  \r\n        yield put({\r\n            type: LOAD_ALL_REVIEW_SUCCESS,\r\n            data: result.data \r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_ALL_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// start function\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchLoadAllReview() {\r\n    yield takeLatest(LOAD_ALL_REVIEW_REQUEST, loadAllReview);\r\n}\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n      fork(watchLoadAllReview),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}