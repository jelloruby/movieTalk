{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport AppLayout from '../components/layout/AppLayout';\nimport { loginRequestAction } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction login() {\n  const dispatch = useDispatch();\n  const {\n    logInDone,\n    logInError\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (logInDone) {\n      Router.push('/');\n      console.log(\"login page - 로그인 완료\");\n    }\n  }, [logInDone]);\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  const {\n    0: Email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: Password,\n    1: setPassword\n  } = useState(\"\");\n\n  const onEmailHandler = e => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const onPasswordHandler = e => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    let body = {\n      email: Email,\n      password: Password\n    };\n    dispatch(loginRequestAction(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: Email,\n        onChange: onEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: Password,\n        onChange: onPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn login-btn\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:5000/auth/google\",\n      children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\nexport default login;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/login.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Router","AppLayout","loginRequestAction","login","dispatch","logInDone","logInError","state","user","push","console","log","alert","Email","setEmail","Password","setPassword","onEmailHandler","e","currentTarget","value","onPasswordHandler","onSubmitHandler","preventDefault","body","email","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA4BP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,SAAH,EAAc;AACVL,MAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,GALQ,EAKN,CAACN,SAAD,CALM,CAAT;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,UAAH,EAAe;AACXM,MAAAA,KAAK,CAACN,UAAD,CAAL;AACH;AACJ,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACmB,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMqB,cAAc,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BF,IAAAA,WAAW,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAIJ,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACK,cAAF;AAEA,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAEZ,KADA;AAEPa,MAAAA,QAAQ,EAAEX;AAFH,KAAX;AAIAX,IAAAA,QAAQ,CAACF,kBAAkB,CAACsB,IAAD,CAAnB,CAAR;AACH,GARD;;AAUA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEF,eAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAET,KAHX;AAII,QAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAEF,QAHX;AAII,QAAA,QAAQ,EAAEM;AAJd;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI;AAAG,MAAA,IAAI,EAAC,mCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;AAED,eAAelB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nimport AppLayout from '../components/layout/AppLayout';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nfunction login() {\r\n    const dispatch = useDispatch();\r\n    const { logInDone, logInError } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if(logInDone) {\r\n            Router.push('/');\r\n            console.log(\"login page - 로그인 완료\");\r\n        }\r\n    }, [logInDone]);\r\n\r\n    useEffect(() => {\r\n        if(logInError) {\r\n            alert(logInError);\r\n        }\r\n    }, [logInError]);\r\n\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onEmailHandler = (e) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (e) => { \r\n        e.preventDefault();\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password\r\n        }\r\n        dispatch(loginRequestAction(body));\r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <label>이메일</label>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={Email}\r\n                    onChange={onEmailHandler}\r\n                />\r\n                <label>비밀번호</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={Password}\r\n                    onChange={onPasswordHandler}\r\n                />\r\n                <button type=\"submit\" className=\"btn login-btn\">\r\n                    로그인\r\n                </button>\r\n            </form>\r\n            <a href=\"http://localhost:5000/auth/google\">\r\n                구글 로그인\r\n            </a>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default login\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}