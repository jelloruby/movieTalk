{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addReview),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyReviews),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadMoreMyReviews),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadAllReviews),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(likeReview),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unLikeReview),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchReview),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchMyReviews),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyReviews),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchAllReviews),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikeReview),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLikeReview),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(reviewSaga);\n\nimport axios from 'axios';\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\nimport { ADD_REVIEW_REQUEST, ADD_REVIEW_SUCCESS, ADD_REVIEW_FAILURE, LOAD_MY_REVIEWS_REQUEST, LOAD_MY_REVIEWS_SUCCESS, LOAD_MY_REVIEWS_FAILURE, LOAD_MORE_MY_REVIEWS_REQUEST, LOAD_MORE_MY_REVIEWS_SUCCESS, LOAD_MORE_MY_REVIEWS_FAILURE, LOAD_ALL_REVIEWS_REQUEST, LOAD_ALL_REVIEWS_SUCCESS, LOAD_ALL_REVIEWS_FAILURE, LIKE_REVIEW_REQUEST, LIKE_REVIEW_SUCCESS, LIKE_REVIEW_FAILURE, UNLIKE_REVIEW_REQUEST, UNLIKE_REVIEW_SUCCESS, UNLIKE_REVIEW_FAILURE } from '../reducers/review';\n\nfunction addReviewAPI(data) {\n  return axios.post('/review', data);\n}\n\nfunction addReview(action) {\n  return _regeneratorRuntime.wrap(function addReview$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addReviewAPI, action.data);\n\n        case 3:\n          console.log('saga ADD_REVIEW');\n          _context.next = 6;\n          return put({\n            type: ADD_REVIEW_SUCCESS\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: ADD_REVIEW_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadMyReviewsAPI(data) {\n  return axios.get(\"/review/\".concat(data));\n}\n\nfunction loadMyReviews(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyReviews$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadMyReviewsAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          console.log('saga LOAD_MY_REVIEWS');\n          _context2.next = 7;\n          return put({\n            type: LOAD_MY_REVIEWS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_MY_REVIEWS_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction loadMoreMyReviewsAPI(data) {\n  return axios.post(\"/review/\".concat(data.userId), data);\n}\n\nfunction loadMoreMyReviews(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMoreMyReviews$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadMoreMyReviewsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          console.log('saga LOAD_MY_REVIEWS');\n          _context3.next = 7;\n          return put({\n            type: LOAD_MORE_MY_REVIEWS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_MORE_MY_REVIEWS_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction loadAllReviewsAPI(data) {\n  return axios.post('/reviews', data);\n}\n\nfunction loadAllReviews(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadAllReviews$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadAllReviewsAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log('saga LOAD_ALL_REVIEWS');\n          _context4.next = 7;\n          return put({\n            type: LOAD_ALL_REVIEWS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put({\n            type: LOAD_ALL_REVIEWS_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction likeReviewAPI(data) {\n  return axios.post(\"/review/like\", data);\n}\n\nfunction likeReview(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likeReview$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(likeReviewAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('saga LIKE_REVIEW');\n          _context5.next = 7;\n          return put({\n            type: LIKE_REVIEW_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: LIKE_REVIEW_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction unLikeReviewAPI(data) {\n  return axios.post(\"/review/dislike\", data);\n}\n\nfunction unLikeReview(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unLikeReview$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unLikeReviewAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          console.log('saga UNLIKE_REVIEW');\n          _context6.next = 7;\n          return put({\n            type: UNLIKE_REVIEW_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context6.next = 13;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 13;\n          return put({\n            type: UNLIKE_REVIEW_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 9]]);\n}\n\nfunction watchReview() {\n  return _regeneratorRuntime.wrap(function watchReview$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(ADD_REVIEW_REQUEST, addReview);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchMyReviews() {\n  return _regeneratorRuntime.wrap(function watchMyReviews$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLoadMyReviews() {\n  return _regeneratorRuntime.wrap(function watchLoadMyReviews$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchAllReviews() {\n  return _regeneratorRuntime.wrap(function watchAllReviews$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLikeReview() {\n  return _regeneratorRuntime.wrap(function watchLikeReview$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LIKE_REVIEW_REQUEST, likeReview);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchUnLikeReview() {\n  return _regeneratorRuntime.wrap(function watchUnLikeReview$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function reviewSaga() {\n  return _regeneratorRuntime.wrap(function reviewSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchReview), fork(watchMyReviews), fork(watchLoadMyReviews), fork(watchAllReviews), fork(watchLikeReview), fork(watchUnLikeReview)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/review.js"],"names":["addReview","loadMyReviews","loadMoreMyReviews","loadAllReviews","likeReview","unLikeReview","watchReview","watchMyReviews","watchLoadMyReviews","watchAllReviews","watchLikeReview","watchUnLikeReview","reviewSaga","axios","all","fork","call","put","takeLatest","throttle","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAILURE","LOAD_MY_REVIEWS_REQUEST","LOAD_MY_REVIEWS_SUCCESS","LOAD_MY_REVIEWS_FAILURE","LOAD_MORE_MY_REVIEWS_REQUEST","LOAD_MORE_MY_REVIEWS_SUCCESS","LOAD_MORE_MY_REVIEWS_FAILURE","LOAD_ALL_REVIEWS_REQUEST","LOAD_ALL_REVIEWS_SUCCESS","LOAD_ALL_REVIEWS_FAILURE","LIKE_REVIEW_REQUEST","LIKE_REVIEW_SUCCESS","LIKE_REVIEW_FAILURE","UNLIKE_REVIEW_REQUEST","UNLIKE_REVIEW_SUCCESS","UNLIKE_REVIEW_FAILURE","addReviewAPI","data","post","action","console","log","type","response","loadMyReviewsAPI","get","result","loadMoreMyReviewsAPI","userId","loadAllReviewsAPI","likeReviewAPI","unLikeReviewAPI"],"mappings":";;oDA8BUA,S;qDAmBAC,a;qDAoBAC,iB;qDAoBAC,c;qDAoBAC,U;qDAoBAC,Y;qDAmBAC,W;qDAIAC,c;qDAIAC,kB;sDAIAC,e;sDAIAC,e;sDAIAC,iB;sDAKeC,U;;AA7KzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,oBAA3D;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,uBANJ,EAOIC,4BAPJ,EAQIC,4BARJ,EASIC,4BATJ,EAUIC,wBAVJ,EAWIC,wBAXJ,EAYIC,wBAZJ,EAaIC,mBAbJ,EAcIC,mBAdJ,EAeIC,mBAfJ,EAgBIC,qBAhBJ,EAiBIC,qBAjBJ,EAkBIC,qBAlBJ,QAmBO,oBAnBP;;AAwBA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,SAAO1B,KAAK,CAAC2B,IAAN,CAAW,SAAX,EAAsBD,IAAtB,CAAP;AACH;;AAED,SAAUvC,SAAV,CAAoByC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMzB,IAAI,CAACsB,YAAD,EAAeG,MAAM,CAACF,IAAtB,CAAV;;AAFR;AAGQG,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAHR;AAIQ,iBAAM1B,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEvB;AADA,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQQ,iBAAMJ,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEtB,kBADA;AAENiB,YAAAA,IAAI,EAAE,YAAIM,QAAJ,CAAaN;AAFb,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAASO,gBAAT,CAA0BP,IAA1B,EAAgC;AAC5B,SAAO1B,KAAK,CAACkC,GAAN,mBAAqBR,IAArB,EAAP;AACH;;AAED,SAAUtC,aAAV,CAAwBwC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMzB,IAAI,CAAC8B,gBAAD,EAAmBL,MAAM,CAACF,IAA1B,CAAV;;AAFvB;AAEcS,UAAAA,MAFd;AAGQN,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAHR;AAIQ,iBAAM1B,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEpB,uBADA;AAENe,YAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMtB,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEnB,uBADA;AAENc,YAAAA,IAAI,EAAE,aAAIM,QAAJ,CAAaN;AAFb,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASU,oBAAT,CAA8BV,IAA9B,EAAoC;AAChC,SAAO1B,KAAK,CAAC2B,IAAN,mBAAsBD,IAAI,CAACW,MAA3B,GAAqCX,IAArC,CAAP;AACH;;AAED,SAAUrC,iBAAV,CAA4BuC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMzB,IAAI,CAACiC,oBAAD,EAAuBR,MAAM,CAACF,IAA9B,CAAV;;AAFvB;AAEcS,UAAAA,MAFd;AAGQN,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAHR;AAIQ,iBAAM1B,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEjB,4BADA;AAENY,YAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMtB,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEhB,4BADA;AAENW,YAAAA,IAAI,EAAE,aAAIM,QAAJ,CAAaN;AAFb,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASY,iBAAT,CAA2BZ,IAA3B,EAAiC;AAC7B,SAAO1B,KAAK,CAAC2B,IAAN,CAAW,UAAX,EAAuBD,IAAvB,CAAP;AACH;;AAED,SAAUpC,cAAV,CAAyBsC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMzB,IAAI,CAACmC,iBAAD,EAAoBV,MAAM,CAACF,IAA3B,CAAV;;AAFvB;AAEcS,UAAAA,MAFd;AAGQN,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAHR;AAIQ,iBAAM1B,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEd,wBADA;AAENS,YAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMtB,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEb,wBADA;AAENQ,YAAAA,IAAI,EAAE,aAAIM,QAAJ,CAAaN;AAFb,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASa,aAAT,CAAuBb,IAAvB,EAA6B;AACzB,SAAO1B,KAAK,CAAC2B,IAAN,iBAA2BD,IAA3B,CAAP;AACH;;AAED,SAAUnC,UAAV,CAAqBqC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEwB,iBAAMzB,IAAI,CAACoC,aAAD,EAAgBX,MAAM,CAACF,IAAvB,CAAV;;AAFxB;AAEcS,UAAAA,MAFd;AAGQN,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAHR;AAIQ,iBAAM1B,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEX,mBADA;AAENM,YAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMtB,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEV,mBADA;AAENK,YAAAA,IAAI,EAAE,aAAIM,QAAJ,CAAaN;AAFb,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASc,eAAT,CAAyBd,IAAzB,EAA+B;AAC3B,SAAO1B,KAAK,CAAC2B,IAAN,oBAA8BD,IAA9B,CAAP;AACH;;AAED,SAAUlC,YAAV,CAAuBoC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMzB,IAAI,CAACqC,eAAD,EAAkBZ,MAAM,CAACF,IAAzB,CAAV;;AAFvB;AAEcS,UAAAA,MAFd;AAGQN,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAHR;AAIQ,iBAAM1B,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAER,qBADA;AAENG,YAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMtB,GAAG,CAAC;AACN2B,YAAAA,IAAI,EAAEP,qBADA;AAENE,YAAAA,IAAI,EAAE,aAAIM,QAAJ,CAAaN;AAFb,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAUjC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMY,UAAU,CAACE,kBAAD,EAAqBpB,SAArB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMW,UAAU,CAACK,uBAAD,EAA0BtB,aAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMU,UAAU,CAACQ,4BAAD,EAA+BxB,iBAA/B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMU,QAAQ,CAAC,IAAD,EAAOU,wBAAP,EAAiC1B,cAAjC,CAAd;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMQ,UAAU,CAACc,mBAAD,EAAsB5B,UAAtB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACiB,qBAAD,EAAwB9B,YAAxB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUO,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACRC,IAAI,CAACT,WAAD,CADI,EAERS,IAAI,CAACR,cAAD,CAFI,EAGRQ,IAAI,CAACP,kBAAD,CAHI,EAIRO,IAAI,CAACN,eAAD,CAJI,EAKRM,IAAI,CAACL,eAAD,CALI,EAMRK,IAAI,CAACJ,iBAAD,CANI,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport {\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAILURE,\r\n    LOAD_MY_REVIEWS_REQUEST,\r\n    LOAD_MY_REVIEWS_SUCCESS,\r\n    LOAD_MY_REVIEWS_FAILURE,\r\n    LOAD_MORE_MY_REVIEWS_REQUEST,\r\n    LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n    LOAD_MORE_MY_REVIEWS_FAILURE,\r\n    LOAD_ALL_REVIEWS_REQUEST,\r\n    LOAD_ALL_REVIEWS_SUCCESS,\r\n    LOAD_ALL_REVIEWS_FAILURE,\r\n    LIKE_REVIEW_REQUEST,\r\n    LIKE_REVIEW_SUCCESS,\r\n    LIKE_REVIEW_FAILURE,\r\n    UNLIKE_REVIEW_REQUEST,\r\n    UNLIKE_REVIEW_SUCCESS,\r\n    UNLIKE_REVIEW_FAILURE,\r\n} from '../reducers/review';\r\n\r\n\r\n\r\n\r\nfunction addReviewAPI(data) {\r\n    return axios.post('/review', data)\r\n}\r\n\r\nfunction* addReview(action) {\r\n    try {\r\n        yield call(addReviewAPI, action.data)\r\n        console.log('saga ADD_REVIEW');  \r\n        yield put({\r\n            type: ADD_REVIEW_SUCCESS,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: ADD_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyReviewsAPI(data) {\r\n    return axios.get(`/review/${data}`)\r\n}\r\n\r\nfunction* loadMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMoreMyReviewsAPI(data) {\r\n    return axios.post(`/review/${data.userId}`, data)\r\n}\r\n\r\nfunction* loadMoreMyReviews(action) {\r\n    try {\r\n        const result = yield call(loadMoreMyReviewsAPI, action.data)\r\n        console.log('saga LOAD_MY_REVIEWS');\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MORE_MY_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadAllReviewsAPI(data) {\r\n    return axios.post('/reviews', data)\r\n}\r\n\r\nfunction* loadAllReviews(action) {\r\n    try {\r\n        const result = yield call(loadAllReviewsAPI, action.data)\r\n        console.log('saga LOAD_ALL_REVIEWS');\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_ALL_REVIEWS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction likeReviewAPI(data) {\r\n    return axios.post(`/review/like`, data)\r\n}\r\n\r\nfunction* likeReview(action) {\r\n    try {\r\n        const result =  yield call(likeReviewAPI, action.data)\r\n        console.log('saga LIKE_REVIEW');\r\n        yield put({\r\n            type: LIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikeReviewAPI(data) {\r\n    return axios.post(`/review/dislike`, data)\r\n}\r\n\r\nfunction* unLikeReview(action) {\r\n    try {\r\n        const result = yield call(unLikeReviewAPI, action.data)\r\n        console.log('saga UNLIKE_REVIEW');\r\n        yield put({\r\n            type: UNLIKE_REVIEW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: UNLIKE_REVIEW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction* watchReview() {\r\n    yield takeLatest(ADD_REVIEW_REQUEST, addReview);\r\n}\r\n\r\nfunction* watchMyReviews() {\r\n    yield takeLatest(LOAD_MY_REVIEWS_REQUEST, loadMyReviews);\r\n}\r\n\r\nfunction* watchLoadMyReviews() {\r\n    yield takeLatest(LOAD_MORE_MY_REVIEWS_REQUEST, loadMoreMyReviews);\r\n}\r\n\r\nfunction* watchAllReviews() {\r\n    yield throttle(2000, LOAD_ALL_REVIEWS_REQUEST, loadAllReviews);\r\n}\r\n\r\nfunction* watchLikeReview() {\r\n    yield takeLatest(LIKE_REVIEW_REQUEST, likeReview);\r\n}\r\n\r\nfunction* watchUnLikeReview() {\r\n    yield takeLatest(UNLIKE_REVIEW_REQUEST, unLikeReview);\r\n}\r\n\r\n\r\nexport default function* reviewSaga() {\r\n    yield all([\r\n      fork(watchReview),\r\n      fork(watchMyReviews),\r\n      fork(watchLoadMyReviews),\r\n      fork(watchAllReviews),\r\n      fork(watchLikeReview),\r\n      fork(watchUnLikeReview),\r\n      \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}