{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieTalk.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport SubPageLayout from '../components/layout/MainPageLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction movieTalk() {\n  _s();\n\n  var dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: \"\\uBB34\\uBE44\\uD1A1\\uD398\\uC774\\uC9C0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(movieTalk, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n;\nexport var __N_SSP = true;\nexport default movieTalk;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieTalk.js"],"names":["React","useDispatch","SubPageLayout","movieTalk","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAKA,OAAOC,aAAP,MAA0B,qCAA1B;;;AAIA,SAASC,SAAT,GAAqB;AAAA;;AACjB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,sBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GARQE,S;UACYF,W;;;AAOpB;;AAmBD,eAAeE,SAAf","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport SubPageLayout from '../components/layout/MainPageLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_MY_REVIEWS_REQUEST } from '../reducers/review';\r\n\r\nfunction movieTalk() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            무비톡페이지\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    };\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_MY_REVIEWS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\n\r\nexport default movieTalk;\r\n"]},"metadata":{},"sourceType":"module"}