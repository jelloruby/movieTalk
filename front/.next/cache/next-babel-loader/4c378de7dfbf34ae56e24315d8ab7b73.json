{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieInfo\\\\[id].js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Router from \"next/router\";\nimport SubPageLayout from '../../components/Layout/SubPageLayout';\nimport MovieActorList from '../../components/MovieActorList';\nimport ReviewModal from '../../components/Modal/ReviewModal';\nimport { getMovieDetailFromTMDB, getActorsFromTMDB } from '../api/api';\nimport { imageURL } from '../../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieBasicInfo = styled.div.withConfig({\n  displayName: \"id__MovieBasicInfo\",\n  componentId: \"kc7td4-0\"\n})([\"width:80%;margin:0 auto;display:flex;& > img{border-radius:5px;width:270px;height:390px;}& > div{margin-left:16px;}@media screen and (max-width:650px){display:block;& > img{display:block;margin:0 auto;}& > div{margin-left:0;margin-top:15px;}}\"]);\nconst ReviewLink = styled.div.withConfig({\n  displayName: \"id__ReviewLink\",\n  componentId: \"kc7td4-1\"\n})([\"@media screen and (max-width:650px){position:absolute;top:21px;right:21px;}\"]);\nconst MovieDetailInfo = styled.div.withConfig({\n  displayName: \"id__MovieDetailInfo\",\n  componentId: \"kc7td4-2\"\n})([\"width:80%;margin:0 auto;display:flex;flex-direction:column;\"]);\nconst MovieActorsInfo = styled.div.withConfig({\n  displayName: \"id__MovieActorsInfo\",\n  componentId: \"kc7td4-3\"\n})([\"width:80%;margin:0 auto;\"]);\nconst InfoTitle = styled.div.withConfig({\n  displayName: \"id__InfoTitle\",\n  componentId: \"kc7td4-4\"\n})([\"font-size:32px;margin-top:48px;\"]);\n\nfunction MovieInfoPage(props) {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    movieDetail\n  } = props;\n  const {\n    cast\n  } = props.actors;\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n\n  const openModal = () => {\n    if (!(me && me.email)) {\n      const didDelete = confirm('로그인이 필요합니다. 로그인 화면으로 이동하시겠습니까?');\n\n      if (didDelete) {\n        Router.push('/login');\n      } else {\n        Router.back();\n      }\n    } else {\n      setIsModalOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const joinArrayOfGenres = genres => {\n    const genresNameArray = [];\n\n    for (let i = 0; i < genres.length; i++) {\n      genresNameArray.push(genres[i].name);\n    }\n\n    ;\n    const joinArrayToString = genresNameArray.join(\", \");\n    return joinArrayToString;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '60px',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MovieBasicInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${imageURL}/w300/${movieDetail.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [movieDetail.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '32px'\n            },\n            children: movieDetail.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), movieDetail.original_title && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px'\n            },\n            children: movieDetail.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), movieDetail.release_date && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uAC1C\\uBD09\\uC77C : \", movieDetail.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this), movieDetail.genres && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC7A5\\uB974 : \", joinArrayOfGenres(movieDetail.genres)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), movieDetail.runtime && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0C1\\uC601\\uC2DC\\uAC04 : \", movieDetail.runtime, \"\\uBD84\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReviewLink, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC774 \\uC601\\uD654\\uB97C \\uBB34\\uBE44\\uD1A1\\uC5D0 \\uB0A8\\uAE30\\uACE0 \\uC2F6\\uB2E4\\uBA74? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModal,\n            children: \"\\uB9AC\\uBDF0 \\uC791\\uC131\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieDetailInfo, {\n        children: movieDetail.overview && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n            children: \"\\uC904\\uAC70\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: movieDetail.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: movieDetail.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieActorsInfo, {\n        className: \"actors-slider\",\n        children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n          children: \"\\uBC30\\uC6B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MovieActorList, {\n          movieActorInfo: cast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ReviewModal, {\n        movie: movieDetail,\n        isModalOpen: isModalOpen,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getServerSideProps({\n  query\n}) {\n  const movieDetail = await getMovieDetailFromTMDB(query.id);\n  const actors = await getActorsFromTMDB(query.id);\n  return {\n    props: {\n      movieDetail: movieDetail,\n      actors: actors\n    }\n  };\n}\n;\nexport default MovieInfoPage;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieInfo/[id].js"],"names":["React","useState","useSelector","styled","Router","SubPageLayout","MovieActorList","ReviewModal","getMovieDetailFromTMDB","getActorsFromTMDB","imageURL","MovieBasicInfo","div","ReviewLink","MovieDetailInfo","MovieActorsInfo","InfoTitle","MovieInfoPage","props","me","state","user","movieDetail","cast","actors","isModalOpen","setIsModalOpen","openModal","email","didDelete","confirm","push","back","closeModal","joinArrayOfGenres","genres","genresNameArray","i","length","name","joinArrayToString","join","marginTop","position","poster_path","title","fontSize","original_title","release_date","runtime","overview","tagline","getServerSideProps","query","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Router from \"next/router\";\r\n\r\nimport SubPageLayout from '../../components/Layout/SubPageLayout';\r\nimport MovieActorList from '../../components/MovieActorList';\r\nimport ReviewModal from '../../components/Modal/ReviewModal';\r\nimport { getMovieDetailFromTMDB, getActorsFromTMDB } from '../api/api';\r\nimport { imageURL } from '../../config/config';\r\n\r\nconst MovieBasicInfo = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n\r\n    & > img {\r\n        border-radius: 5px;\r\n        width: 270px;\r\n        height: 390px;\r\n    }\r\n\r\n    & > div {\r\n        margin-left: 16px;\r\n    }\r\n\r\n    @media screen and (max-width: 650px) {\r\n        display: block;\r\n\r\n        & > img {\r\n            display: block;\r\n            margin: 0 auto;\r\n        }\r\n        \r\n        & > div {\r\n            margin-left: 0;\r\n            margin-top: 15px;\r\n        }\r\n    }\r\n`\r\nconst ReviewLink = styled.div`\r\n    @media screen and (max-width: 650px) {\r\n        position: absolute;\r\n        top: 21px;\r\n        right: 21px;\r\n    }\r\n`\r\n\r\nconst MovieDetailInfo = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MovieActorsInfo = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst InfoTitle = styled.div`\r\n    font-size: 32px;\r\n    margin-top: 48px;\r\n`\r\n\r\nfunction MovieInfoPage(props) {\r\n    const { me } = useSelector((state) => state.user);\r\n    const { movieDetail } = props;\r\n    const { cast } = props.actors;\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        if (!(me && me.email)) {\r\n            const didDelete = confirm('로그인이 필요합니다. 로그인 화면으로 이동하시겠습니까?');\r\n            if(didDelete) {\r\n                Router.push('/login');\r\n            } else {\r\n                Router.back();\r\n            }\r\n        } else {\r\n            setIsModalOpen(true);\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const joinArrayOfGenres = (genres) => {\r\n        const genresNameArray = [];\r\n        for(let i=0; i<genres.length; i++) {\r\n            genresNameArray.push(genres[i].name);\r\n        };\r\n        const joinArrayToString = genresNameArray.join(\", \");\r\n        return joinArrayToString;\r\n    };\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <div style={{ marginTop: '60px', position: 'relative' }}>\r\n                <MovieBasicInfo>\r\n                    <img src={`${imageURL}/w300/${movieDetail.poster_path}`}/>\r\n                    <div>\r\n                        { movieDetail.title &&\r\n                            (\r\n                                <div style={{ fontSize: '32px' }}>{movieDetail.title}</div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.original_title &&\r\n                            (\r\n                                <div style={{ fontSize: '24px' }}>{movieDetail.original_title}</div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.release_date &&\r\n                            (\r\n                                <div>개봉일 : {movieDetail.release_date}</div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.genres &&\r\n                            (\r\n                                <div>장르 : {joinArrayOfGenres(movieDetail.genres)}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            movieDetail.runtime &&\r\n                            (\r\n                                <div>상영시간 : {movieDetail.runtime}분</div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <ReviewLink>\r\n                        <span>이 영화를 무비톡에 남기고 싶다면? </span>\r\n                        <button onClick={openModal}>리뷰 작성하기</button>\r\n                    </ReviewLink>\r\n                </MovieBasicInfo>\r\n                <MovieDetailInfo>\r\n                    {\r\n                        movieDetail.overview &&\r\n                        (\r\n                            <div>\r\n                                <InfoTitle>줄거리</InfoTitle>\r\n                                <div>{movieDetail.tagline}</div>\r\n                                <br/>\r\n                                <div>{movieDetail.overview}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </MovieDetailInfo>\r\n                <MovieActorsInfo className=\"actors-slider\">\r\n                    <InfoTitle>배우</InfoTitle>\r\n                    <MovieActorList movieActorInfo={cast} />   \r\n                </MovieActorsInfo>\r\n                {\r\n                    isModalOpen &&\r\n                    (\r\n                        <ReviewModal\r\n                            movie={movieDetail}\r\n                            isModalOpen={isModalOpen}\r\n                            closeModal={closeModal}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieDetailFromTMDB(query.id);\r\n    const actors = await getActorsFromTMDB(query.id);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n            actors: actors,\r\n        },\r\n    };\r\n};\r\n\r\nexport default MovieInfoPage;\r\n"]},"metadata":{},"sourceType":"module"}