{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { LOAD_MOVIE_FROM_TMDB_REQUEST, LOAD_MOVIE_FROM_TMDB_SUCCESS, LOAD_MOVIE_FROM_TMDB_FAILURE } from '../reducers/tmdb';\n\nfunction loadMovieFromTMDBAPI(data) {\n  return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=2b2e61361a6d20a07e728e56fc296333&query=${encodeURI(data.movieName)}&language=ko&page=${data.pageNum}`);\n}\n\nfunction* loadMovieFromTMDB(action) {\n  try {\n    const result = yield call(loadMovieFromTMDBAPI, action.data);\n    console.log('saga LOAD_MOVIE_FROM_TMDB');\n    yield put({\n      type: LOAD_MOVIE_FROM_TMDB_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MOVIE_FROM_TMDB_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadMovieFromTMDB() {\n  yield takeLatest(LOAD_MOVIE_FROM_TMDB_REQUEST, loadMovieFromTMDB);\n}\n\nexport default function* tmdbSaga() {\n  yield all([fork(watchLoadMovieFromTMDB)]);\n}","map":{"version":3,"sources":["C:/codingtime/movieBox/front/sagas/tmdb.js"],"names":["axios","all","fork","call","put","takeLatest","LOAD_MOVIE_FROM_TMDB_REQUEST","LOAD_MOVIE_FROM_TMDB_SUCCESS","LOAD_MOVIE_FROM_TMDB_FAILURE","loadMovieFromTMDBAPI","data","get","encodeURI","movieName","pageNum","loadMovieFromTMDB","action","result","console","log","type","err","response","watchLoadMovieFromTMDB","tmdbSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACIC,4BADJ,EAEIC,4BAFJ,EAGIC,4BAHJ,QAIO,kBAJP;;AAOA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AAChC,SAAOV,KAAK,CAACW,GAAN,CAAW,4FAA2FC,SAAS,CAACF,IAAI,CAACG,SAAN,CAAiB,qBAAoBH,IAAI,CAACI,OAAQ,EAAjK,CAAP;AACH;;AAGD,UAAUC,iBAAV,CAA4BC,MAA5B,EAAoC;AAChC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACM,oBAAD,EAAuBO,MAAM,CAACN,IAA9B,CAAzB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMf,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEb,4BADA;AAENG,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMW,GAAN,EAAW;AACT,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEZ,4BADA;AAENE,MAAAA,IAAI,EAAEW,GAAG,CAACC,QAAJ,CAAaZ;AAFb,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUa,sBAAV,GAAmC;AAC/B,QAAMlB,UAAU,CAACC,4BAAD,EAA+BS,iBAA/B,CAAhB;AACH;;AAGD,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACRC,IAAI,CAACqB,sBAAD,CADI,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOAD_MOVIE_FROM_TMDB_REQUEST,\r\n    LOAD_MOVIE_FROM_TMDB_SUCCESS,\r\n    LOAD_MOVIE_FROM_TMDB_FAILURE,\r\n} from '../reducers/tmdb';\r\n\r\n\r\nfunction loadMovieFromTMDBAPI(data) {\r\n    return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=2b2e61361a6d20a07e728e56fc296333&query=${encodeURI(data.movieName)}&language=ko&page=${data.pageNum}`)\r\n}\r\n\r\n\r\nfunction* loadMovieFromTMDB(action) {\r\n    try {\r\n        const result = yield call(loadMovieFromTMDBAPI, action.data)\r\n        console.log('saga LOAD_MOVIE_FROM_TMDB');  \r\n        yield put({\r\n            type: LOAD_MOVIE_FROM_TMDB_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type: LOAD_MOVIE_FROM_TMDB_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLoadMovieFromTMDB() {\r\n    yield takeLatest(LOAD_MOVIE_FROM_TMDB_REQUEST, loadMovieFromTMDB);\r\n}\r\n\r\n\r\nexport default function* tmdbSaga() {\r\n    yield all([\r\n      fork(watchLoadMovieFromTMDB),\r\n      \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}