{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\movieSearch\\\\[name].js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Router, { useRouter } from \"next/router\";\nimport { IoSearchSharp } from \"react-icons/io5\";\nimport SubPageLayout from '../../components/Layout/SubPageLayout';\nimport MovieInfoLink from '../../components/MovieInfoLink';\nimport SearchForm from '../../components/Form/SearchForm';\nimport { getMovieFromTMDB } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MovieCardWrap = styled.div.withConfig({\n  displayName: \"name__MovieCardWrap\",\n  componentId: \"irtilj-0\"\n})([\"margin-left:5%;position:relative;top:128px;display:flex;flex-wrap:wrap;\"]);\n_c = MovieCardWrap;\nvar MoiveSearchWrap = styled.div.withConfig({\n  displayName: \"name__MoiveSearchWrap\",\n  componentId: \"irtilj-1\"\n})([\"position:absolute;top:48px;left:50%;transform:translate(-50%,0);\"]);\n_c2 = MoiveSearchWrap;\n\nfunction MovieSearchPage(props) {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var name = router.query.name;\n  var movieDetail = props.movieDetail;\n\n  var _useState = useState([]),\n      movieList = _useState[0],\n      setMovieList = _useState[1];\n\n  var _useState2 = useState(1),\n      CurrentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var handleLoadMoreMovie = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var movieFromTMDB, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getMovieFromTMDB(name, \"\".concat(CurrentPage + 1));\n\n            case 2:\n              movieFromTMDB = _context.sent;\n              result = movieList.concat(movieFromTMDB.results);\n              setMovieList(result);\n              setCurrentPage(CurrentPage + 1);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleLoadMoreMovie() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MoiveSearchWrap, {\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), movieDetail.results && /*#__PURE__*/_jsxDEV(MovieCardWrap, {\n        children: movieDetail.results.map(function (movieItem) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '210px',\n              margin: '0 16px'\n            },\n            children: /*#__PURE__*/_jsxDEV(MovieInfoLink, {\n              id: movieItem.id,\n              src: movieItem.poster_path,\n              koreanTitle: movieItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, _this)\n          }, movieItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMoreMovie,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieSearchPage, \"UClH5utqib37TXqCyJeihNjABmE=\", false, function () {\n  return [useRouter];\n});\n\n_c3 = MovieSearchPage;\n;\n;\nexport var __N_SSP = true;\nexport default MovieSearchPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MovieCardWrap\");\n$RefreshReg$(_c2, \"MoiveSearchWrap\");\n$RefreshReg$(_c3, \"MovieSearchPage\");","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/movieSearch/[name].js"],"names":["React","useState","styled","Router","useRouter","IoSearchSharp","SubPageLayout","MovieInfoLink","SearchForm","getMovieFromTMDB","MovieCardWrap","div","MoiveSearchWrap","MovieSearchPage","props","router","name","query","movieDetail","movieList","setMovieList","CurrentPage","setCurrentPage","handleLoadMoreMovie","movieFromTMDB","result","concat","results","map","movieItem","width","margin","id","poster_path","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,IAAMC,aAAa,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+EAAnB;KAAMD,a;AAQN,IAAME,eAAe,GAAGV,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,wEAArB;MAAMC,e;;AAON,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA;;AAC5B,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AAD4B,MAEpBY,IAFoB,GAEXD,MAAM,CAACE,KAFI,CAEpBD,IAFoB;AAAA,MAGpBE,WAHoB,GAGJJ,KAHI,CAGpBI,WAHoB;;AAAA,kBAKMjB,QAAQ,CAAC,EAAD,CALd;AAAA,MAKrBkB,SALqB;AAAA,MAKVC,YALU;;AAAA,mBAMUnB,QAAQ,CAAC,CAAD,CANlB;AAAA,MAMrBoB,WANqB;AAAA,MAMRC,cANQ;;AAQ5B,MAAMC,mBAAmB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACId,gBAAgB,CAACO,IAAD,YAAUK,WAAW,GAAG,CAAxB,EADpB;;AAAA;AAClBG,cAAAA,aADkB;AAElBC,cAAAA,MAFkB,GAETN,SAAS,CAACO,MAAV,CAAiBF,aAAa,CAACG,OAA/B,CAFS;AAGxBP,cAAAA,YAAY,CAACK,MAAD,CAAZ;AACAH,cAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBE,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAOA,sBACI,QAAC,aAAD;AAAA,2BACI;AAAA,8BACI,QAAC,eAAD;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAUQL,WAAW,CAACS,OAAZ,iBACI,QAAC,aAAD;AAAA,kBAEIT,WAAW,CAACS,OAAZ,CAAoBC,GAApB,CAAwB,UAAAC,SAAS;AAAA,8BAC7B;AAAwB,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE;AAA1B,aAA/B;AAAA,mCACI,QAAC,aAAD;AACI,cAAA,EAAE,EAAEF,SAAS,CAACG,EADlB;AAEI,cAAA,GAAG,EAAEH,SAAS,CAACI,WAFnB;AAGI,cAAA,WAAW,EAAEJ,SAAS,CAACK;AAH3B;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUL,SAAS,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,mBAD6B;AAAA,SAAjC;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXZ,eA0BI;AAAQ,QAAA,OAAO,EAAET,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA/CQV,e;UACUT,S;;;MADVS,e;AA+CR;AAUA;;AAED,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { IoSearchSharp } from \"react-icons/io5\";\r\n\r\nimport SubPageLayout from '../../components/Layout/SubPageLayout';\r\nimport MovieInfoLink from '../../components/MovieInfoLink'\r\nimport SearchForm from '../../components/Form/SearchForm';\r\n\r\nimport { getMovieFromTMDB } from '../api/api';\r\n\r\nconst MovieCardWrap = styled.div`\r\n    margin-left: 5%;\r\n    position: relative;\r\n    top: 128px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst MoiveSearchWrap = styled.div`\r\n    position: absolute;\r\n    top: 48px;\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n`\r\n\r\nfunction MovieSearchPage(props) {\r\n    const router = useRouter();\r\n    const { name } = router.query;\r\n    const { movieDetail } = props;\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [CurrentPage, setCurrentPage] = useState(1);\r\n    \r\n    const handleLoadMoreMovie = async () => {\r\n        const movieFromTMDB = await getMovieFromTMDB(name, `${CurrentPage + 1}`);\r\n        const result = movieList.concat(movieFromTMDB.results)\r\n        setMovieList(result);\r\n        setCurrentPage(CurrentPage + 1);\r\n    };\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <div>\r\n                <MoiveSearchWrap>\r\n                    <SearchForm />\r\n                </MoiveSearchWrap>\r\n                {/* {\r\n                    !movieList.results[0] && (\r\n                        <div>검색하신 영화가 존재하지 않습니다.</div>\r\n                    )\r\n                } */}\r\n                {\r\n                    movieDetail.results && (\r\n                        <MovieCardWrap>\r\n                        {\r\n                            movieDetail.results.map(movieItem => (\r\n                                <div key={movieItem.id} style={{ width: '210px', margin: '0 16px' }}>\r\n                                    <MovieInfoLink\r\n                                        id={movieItem.id}\r\n                                        src={movieItem.poster_path}\r\n                                        koreanTitle={movieItem.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        </MovieCardWrap>\r\n                    )\r\n                }\r\n                <button onClick={handleLoadMoreMovie}>Load More</button>\r\n            </div>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const movieDetail = await getMovieFromTMDB(encodeURI(query.name), 1);\r\n    \r\n    return {\r\n        props: {\r\n            movieDetail: movieDetail,\r\n        },\r\n    }\r\n};\r\n\r\nexport default MovieSearchPage;\r\n"]},"metadata":{},"sourceType":"module"}