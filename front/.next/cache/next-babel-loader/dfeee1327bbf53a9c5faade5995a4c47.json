{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInDone: false,\n  logInError: null,\n  signUpDone: false,\n  signUpError: null,\n  logOutDone: false,\n  logOutError: null,\n  me: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data: data\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      console.log('reducer LOGIN - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        logInDone: false,\n        logInError: null\n      });\n\n    case LOG_IN_SUCCESS:\n      console.log('reducer LOGIN - SUCCESS - user');\n      console.log(action.data);\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        logInDone: true,\n        me: action.data\n      });\n\n    case LOG_IN_FAILURE:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        logInError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      console.log('reducer SIGN-UP - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      console.log('reducer SIGN-UP - SUCCESS - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        signUpError: \"이미 사용중인 이메일 입니다.\" // unique: 1으로 해놨기 때문에\n\n      });\n\n    case LOG_OUT_REQUEST:\n      console.log('reducer LOG_OUT - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      console.log('reducer LOG_OUT - SUCCESS - user');\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        logInDone: false,\n        logOutDone: true\n      });\n\n    case LOG_OUT_FAILURE:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        logOutError: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/reducers/user.js"],"names":["initialState","logInDone","logInError","signUpDone","signUpError","logOutDone","logOutError","me","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginRequestAction","data","type","reducer","state","action","console","log","error"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,KADa;AAExBC,EAAAA,UAAU,EAAE,IAFY;AAGxBC,EAAAA,UAAU,EAAE,KAHY;AAIxBC,EAAAA,WAAW,EAAE,IAJW;AAKxBC,EAAAA,UAAU,EAAE,KALY;AAMxBC,EAAAA,WAAW,EAAE,IANW;AAOxBC,EAAAA,EAAE,EAAE;AAPoB,CAArB;AAUP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AACzCC,EAAAA,IAAI,EAAEX,cADmC;AAEzCU,EAAAA,IAAI,EAAEA;AAFmC,CAAX,CAA3B;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAACrB,YAAP,EAAqBsB,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKX,cAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERpB,QAAAA,SAAS,EAAE,KAFH;AAGRC,QAAAA,UAAU,EAAE;AAHJ,QAAZ;;AAKJ,SAAKO,cAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACJ,IAAnB;AACA,aAAOG,KAAK,mCACLA,KADK;AAERpB,QAAAA,SAAS,EAAE,IAFH;AAGRM,QAAAA,EAAE,EAAEe,MAAM,CAACJ;AAHH,QAAZ;;AAKJ,SAAKR,cAAL;AACI,aAAOW,KAAK,mCACLA,KADK;AAERnB,QAAAA,UAAU,EAAEoB,MAAM,CAACG;AAFX,QAAZ;;AAKJ,SAAKd,eAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERlB,QAAAA,UAAU,EAAE,KAFJ;AAGRC,QAAAA,WAAW,EAAE;AAHL,QAAZ;;AAKJ,SAAKQ,eAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERlB,QAAAA,UAAU,EAAE;AAFJ,QAAZ;;AAIJ,SAAKU,eAAL;AACI,aAAOQ,KAAK,mCACLA,KADK;AAERjB,QAAAA,WAAW,EAAE,kBAFL,CAEyB;;AAFzB,QAAZ;;AAKJ,SAAKU,eAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERhB,QAAAA,UAAU,EAAE,KAFJ;AAGRC,QAAAA,WAAW,EAAE;AAHL,QAAZ;;AAKJ,SAAKS,eAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,aAAOH,KAAK,mCACLA,KADK;AAERpB,QAAAA,SAAS,EAAE,KAFH;AAGRI,QAAAA,UAAU,EAAE;AAHJ,QAAZ;;AAKJ,SAAKW,eAAL;AACI,aAAOK,KAAK,mCACLA,KADK;AAERf,QAAAA,WAAW,EAAE;AAFL,QAAZ;;AAKJ;AACI,aAAOe,KAAP;AA9DR;AAgEH,CAjED;;AAmEA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    logInDone: false,\r\n    logInError: null,\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    me: {}\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data: data,\r\n});\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer LOGIN - user');\r\n            return state = {\r\n                ...state,\r\n                logInDone: false,\r\n                logInError: null,\r\n            }\r\n        case LOG_IN_SUCCESS:\r\n            console.log('reducer LOGIN - SUCCESS - user');\r\n            console.log(action.data);\r\n            return state = {\r\n                ...state,\r\n                logInDone: true,\r\n                me: action.data\r\n            }\r\n        case LOG_IN_FAILURE:\r\n            return state = {\r\n                ...state,\r\n                logInError: action.error,\r\n            }\r\n\r\n        case SIGN_UP_REQUEST:\r\n            console.log('reducer SIGN-UP - user');\r\n            return state = {\r\n                ...state,\r\n                signUpDone: false,\r\n                signUpError: null,\r\n            }\r\n        case SIGN_UP_SUCCESS:\r\n            console.log('reducer SIGN-UP - SUCCESS - user');\r\n            return state = {\r\n                ...state,\r\n                signUpDone: true,\r\n            }\r\n        case SIGN_UP_FAILURE:\r\n            return state = {\r\n                ...state,\r\n                signUpError: \"이미 사용중인 이메일 입니다.\", // unique: 1으로 해놨기 때문에\r\n            }\r\n\r\n        case LOG_OUT_REQUEST:\r\n            console.log('reducer LOG_OUT - user');\r\n            return state = {\r\n                ...state,\r\n                logOutDone: false,\r\n                logOutError: null,\r\n            }\r\n        case LOG_OUT_SUCCESS:\r\n            console.log('reducer LOG_OUT - SUCCESS - user');\r\n            return state = {\r\n                ...state,\r\n                logInDone: false,\r\n                logOutDone: true,\r\n            }\r\n        case LOG_OUT_FAILURE:\r\n            return state = {\r\n                ...state,\r\n                logOutError: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}