{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingtime\\\\movieBox\\\\front\\\\pages\\\\review\\\\[...all].js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport SubPageLayout from '../../components/layout/SubPageLayout';\nimport { imageURL } from '../../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieReviewWrap = styled.div.withConfig({\n  displayName: \"all__MovieReviewWrap\",\n  componentId: \"sc-1erg3rn-0\"\n})([\"width:80%;margin:0 auto;margin-top:48px;display:flex;\"]);\n\nfunction review(props) {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    movieDetail\n  } = props;\n  const {\n    me\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(SubPageLayout, {\n    children: /*#__PURE__*/_jsxDEV(MovieReviewWrap, {\n      children: \"\\u314E\\u3154\\uC774\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {// context.store.dispatch({\n  //     type: LOAD_REVIEW_REQUEST,\n  //     data: {\n  //         movieId: context.params[1],\n  //         writerId: context.params[0]\n  //     }\n  // });\n  // context.store.dispatch(END);\n  // await context.store.sagaTask.toPromise();\n});\nexport default review;","map":{"version":3,"sources":["C:/codingtime/movieBox/front/pages/review/[...all].js"],"names":["React","useEffect","useState","useDispatch","useSelector","useRouter","Router","styled","axios","END","wrapper","SubPageLayout","imageURL","MovieReviewWrap","div","review","props","dispatch","router","id","query","movieDetail","me","state","user","getServerSideProps","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,eAAe,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,6DAArB;;AAOA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,MAAM,GAAGb,SAAS,EAAxB;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,KAAxB;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAASlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AAEA,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;AAAA;AAED,OAAO,MAAMC,kBAAkB,GAAGf,OAAO,CAACe,kBAAR,CAA2B,MAAOC,OAAP,IAAmB,CAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAViC,CAA3B;AAYP,eAAeX,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport Router from 'next/router';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport SubPageLayout from '../../components/layout/SubPageLayout';\r\nimport { imageURL } from '../../config/config';\r\n\r\nconst MovieReviewWrap = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    margin-top: 48px;\r\n    display: flex;\r\n`\r\n\r\nfunction review(props) {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    const { id } = router.query;\r\n    const { movieDetail } = props;\r\n    \r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    return (\r\n        <SubPageLayout>\r\n            <MovieReviewWrap>\r\n                ㅎㅔ이\r\n                {/* <div style={{ width: '50%' }}>\r\n                    { (me && me.name) &&\r\n                        (\r\n                            <div>{me.name}님의 리뷰</div>\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <img src={`${imageURL}/w200/${movieDetail.poster_path}`} style={{ borderRadius: '5px' }} />\r\n                    </div>\r\n                    <div>{movieDetail.title}({movieDetail.release_date.slice(0, 4)})</div>\r\n                </div>\r\n                <form onSubmit={handleSubmitReview} style={{ width: '50%' }}>\r\n                    <textarea\r\n                        placeholder=\"영화 리뷰를 적어주세요.\"\r\n                        onChange={onReviewHandler}\r\n                        style={{ width: '500px', height: '500px' }}\r\n                    />\r\n                    <button type=\"submit\">제출</button>\r\n                </form> */}\r\n            </MovieReviewWrap>\r\n        </SubPageLayout>\r\n    )\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    // context.store.dispatch({\r\n    //     type: LOAD_REVIEW_REQUEST,\r\n    //     data: {\r\n    //         movieId: context.params[1],\r\n    //         writerId: context.params[0]\r\n    //     }\r\n    // });\r\n    // context.store.dispatch(END);\r\n    // await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default review;\r\n"]},"metadata":{},"sourceType":"module"}